{
  "swagger": "2.0",
  "info": {
    "version": "1:21.1.0.0045",
    "title": "Fortify Software Security Center API"
  },
  "host": "qa-plg-ssc6.prgqa.hpecorp.net:8443",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "engine-type-controller",
      "description": "Retrieve the available engine types"
    },
    {
      "name": "attribute-of-project-version-controller",
      "description": "Manage application version attributes"
    },
    {
      "name": "permission-required-by-permission-controller",
      "description": "Retrieve the permissions that this permission depends on"
    },
    {
      "name": "bug-filing-requirements-of-project-version-controller",
      "description": "Support the iterative sequence to interactively collect the information required to create a new bug in the bug tracking system associated with this project version. Such information includes various parameters required by the bug tracking system, whether the bug tracker plugin needs to perform authentication, and so on."
    },
    {
      "name": "variable-controller",
      "description": "Manage variable definitions"
    },
    {
      "name": "cloud-job-of-cloud-worker-controller",
      "description": "Retrieve the ScanCentral SAST jobs associated to the worker"
    },
    {
      "name": "dynamic-scan-request-template-of-project-version-controller",
      "description": "Retrieve the dynamic scan request template associated with the application version"
    },
    {
      "name": "activity-feed-controller",
      "description": "Retrieve the activity feed entries"
    },
    {
      "name": "user-session-state-controller",
      "description": "Manage current user UI state"
    },
    {
      "name": "bulk-controller",
      "description": "Bulk request controller"
    },
    {
      "name": "dynamic-scan-requests-summary-of-project-version-controller",
      "description": "Retrieve the dynamic scan requests summary of the application version"
    },
    {
      "name": "alert-history-controller",
      "description": "Retrieve the triggered alert events and/or set their status"
    },
    {
      "name": "project-version-of-cloud-pool-controller",
      "description": "Manage application versions associated with the ScanCentral SAST pool"
    },
    {
      "name": "job-priority-change-category-warning-of-job-controller",
      "description": "Retrieve warnings about what happens when a user changes job priority"
    },
    {
      "name": "configuration-controller",
      "description": "Manage SSC application configuration"
    },
    {
      "name": "issue-attachment-of-issue-controller",
      "description": "Manage attachments associated to the issue"
    },
    {
      "name": "attribute-definition-controller",
      "description": "Manage attribute definitions"
    },
    {
      "name": "scan-controller",
      "description": "Retrieve information about a scan"
    },
    {
      "name": "group-of-auth-entity-controller",
      "description": "Retrieve the LDAP groups for the specified LDAP authentication entity"
    },
    {
      "name": "license-controller",
      "description": "Retrieve license information"
    },
    {
      "name": "artifact-controller",
      "description": "Manage application version artifacts"
    },
    {
      "name": "issue-aging-controller",
      "description": "Retrieve the issue aging metrics calculated for the system."
    },
    {
      "name": "web-hook-history-of-web-hook-controller",
      "description": "View triggered requests to webhook. Use read to retrieve triggered items with full details."
    },
    {
      "name": "artifact-of-project-version-controller",
      "description": "Retrieve and upload FPR artifacts associated with this application version"
    },
    {
      "name": "role-of-auth-entity-controller",
      "description": "Retrieve the roles for the authentication entity"
    },
    {
      "name": "validate-search-string-controller",
      "description": "Validate search string"
    },
    {
      "name": "feature-controller",
      "description": "Retrieve the features that this instance of SSC supports"
    },
    {
      "name": "responsibility-assignment-of-project-version-controller",
      "description": "Manage responsibilities associated with the application version"
    },
    {
      "name": "unassigned-cloud-worker-of-cloud-pool-controller",
      "description": "Retrieve the ScanCentral SAST workers that are not assigned to any ScanCentral SAST pool"
    },
    {
      "name": "scan-of-artifact-controller",
      "description": "Retrieve the scans associated with the artifact"
    },
    {
      "name": "alert-definition-controller",
      "description": "Manage alert definitions"
    },
    {
      "name": "source-file-of-project-version-controller",
      "description": "Retrieve the metadata and contents of a source file associated with this application version"
    },
    {
      "name": "ldap-object-controller",
      "description": "Manage LDAP-based authentication entities"
    },
    {
      "name": "audit-history-of-issue-controller",
      "description": "Retrieve the audit history events for the specific issue"
    },
    {
      "name": "dashboard-version-controller",
      "description": "Retrieve dashboard versions designed to be used in the UI dashboard"
    },
    {
      "name": "issue-group-of-project-version-controller",
      "description": "Retrieve the issue groups in the application version"
    },
    {
      "name": "aa-training-status-of-project-version-controller",
      "description": "Retrieve the Audit Assistant training status of the application version"
    },
    {
      "name": "role-controller",
      "description": "Manage user roles"
    },
    {
      "name": "alertable-event-type-controller",
      "description": "Retrieve the event types for which alerts can be created"
    },
    {
      "name": "result-processing-rule-of-project-version-controller",
      "description": "Manage artifact processing rules for the application version"
    },
    {
      "name": "bugfield-template-group-controller",
      "description": "Manage bugfield template groups"
    },
    {
      "name": "issue-aging-portlet-controller",
      "description": "Retrieve issue aging portlet data"
    },
    {
      "name": "user-preferences-controller",
      "description": "Manage user session preferences."
    },
    {
      "name": "project-controller",
      "description": "Manage container of application versions. (Application versions and their related resources, such as artifacts, can be accessed via a linked resource)."
    },
    {
      "name": "issue-assignment-of-project-version-controller",
      "description": "Retrieve the count of issues assigned to users in the application version"
    },
    {
      "name": "issue-view-template-controller",
      "description": "Retrieve issue view templates"
    },
    {
      "name": "cloud-system-settings-controller",
      "description": "Retrieve ScanCentral SAST system settings"
    },
    {
      "name": "cloud-job-controller",
      "description": "Manage ScanCentral SAST jobs"
    },
    {
      "name": "performance-indicator-controller",
      "description": "Manage performance indicator definitions"
    },
    {
      "name": "issue-selector-set-of-project-version-controller",
      "description": "Retrieve the set of all possible issue grouping and filtering options for the application version"
    },
    {
      "name": "user-issue-search-options-controller",
      "description": "Manage default issues search options for the currently logged-in user to be used by SSC if no issue view options are set for a project version"
    },
    {
      "name": "auth-entity-of-project-version-controller",
      "description": "Retrieve the authentication entities associated with this application version"
    },
    {
      "name": "cloud-job-of-cloud-pool-controller",
      "description": "Retrieve the ScanCentral SAST jobs associated with the pool"
    },
    {
      "name": "cloud-pool-controller",
      "description": "Manage ScanCentral SAST pools"
    },
    {
      "name": "issue-audit-comment-of-issue-controller",
      "description": "Manage audit comments associated with the issue"
    },
    {
      "name": "folder-of-project-version-controller",
      "description": "Retrieve the folders defined for the application version"
    },
    {
      "name": "issue-controller",
      "description": "Retrieve information on one or more issues"
    },
    {
      "name": "seed-bundle-controller",
      "description": "Seed bundles management"
    },
    {
      "name": "project-version-of-project-controller",
      "description": "Manage association of application versions to application"
    },
    {
      "name": "validate-equation-controller",
      "description": "Validate performance indicator equation"
    },
    {
      "name": "cloud-system-poll-status-controller",
      "description": "Retrieve information on ScanCentral SAST poll status"
    },
    {
      "name": "system-configuration-controller",
      "description": "Retrieve SSC system configuration. The visibility of some configuration values depends on the user's role"
    },
    {
      "name": "plugin-image-controller",
      "description": "Retrieve images loaded by plugin"
    },
    {
      "name": "project-version-controller",
      "description": "Manage application versions. A variety of associated resources are accessible via links."
    },
    {
      "name": "open-source-issues-of-project-version-controller",
      "description": "Retrieve the OpenSource issues of the application version"
    },
    {
      "name": "rulepack-core-controller",
      "description": "Manage rulepacks"
    },
    {
      "name": "performance-indicator-history-of-project-version-controller",
      "description": "Retrieve performance indicators values history for the application version"
    },
    {
      "name": "bug-tracker-controller",
      "description": "Retrieve the bug tracker integrations currently available in SSC"
    },
    {
      "name": "web-hook-definition-controller",
      "description": "Manage WebHook definitions"
    },
    {
      "name": "event-log-controller",
      "description": "Retrieve the SSC application event logs"
    },
    {
      "name": "issue-of-project-version-controller",
      "description": "Manage issues in the application version"
    },
    {
      "name": "local-user-controller",
      "description": "Manage local users"
    },
    {
      "name": "permission-of-role-controller",
      "description": "Retrieve permissions associated with a particular role"
    },
    {
      "name": "auth-token-controller",
      "description": "Manage authentication tokens"
    },
    {
      "name": "issue-audit-comment-controller",
      "description": "Retrieve the issue audit comments that satisfy search criteria"
    },
    {
      "name": "report-definition-controller",
      "description": "Manage report definitions"
    },
    {
      "name": "variable-history-of-project-version-controller",
      "description": "Retrieve the history of variables for the application version"
    },
    {
      "name": "data-export-controller",
      "description": "Manage data exports from SSC"
    },
    {
      "name": "job-controller",
      "description": "Manage internal SSC jobs"
    },
    {
      "name": "plugin-controller",
      "description": "Manage OSGI plugins hosted by SSC plugin framework"
    },
    {
      "name": "auth-entity-controller",
      "description": "Manage aggregated list of authentication entities (local and LDAP user accounts). LDAP groups can be accessed via a linked resource. This controller does not support creation of new accounts. To create new local or LDAP user accounts, use the corresponding specific controllers."
    },
    {
      "name": "permission-controller",
      "description": "Retrieve the permissions and permission details for the specific permission GUID"
    },
    {
      "name": "plugin-localization-controller",
      "description": "Retrieve localization data provided by plugin"
    },
    {
      "name": "saved-report-controller",
      "description": "Manage reports"
    },
    {
      "name": "custom-tag-controller",
      "description": "Manage Custom tag definitions"
    },
    {
      "name": "issue-summary-of-project-version-controller",
      "description": "Retrieve performance indicators values history for the application version"
    },
    {
      "name": "application-state-controller",
      "description": "Manage basic information about the state of SSC"
    },
    {
      "name": "custom-tag-of-issue-template-controller",
      "description": "Manage custom tags which are assigned to the issue template"
    },
    {
      "name": "cloud-pool-mapping-controller",
      "description": "Retrieve mapping of application version to ScanCentral SAST pool"
    },
    {
      "name": "iid-migration-of-project-version-controller",
      "description": "Manage issue identifier migrations associated with this application version"
    },
    {
      "name": "project-version-of-alert-definition-controller",
      "description": "Retrieve the application versions associated with the alert definition"
    },
    {
      "name": "issue-aging-group-controller",
      "description": "Retrieve all possible values for specific grouping attribute for issue aging table."
    },
    {
      "name": "token-definition-controller",
      "description": "Retrieve token definitions"
    },
    {
      "name": "dynamic-scan-request-of-project-version-controller",
      "description": "Manage dynamic scan requests associated with the application version"
    },
    {
      "name": "custom-tag-of-project-version-controller",
      "description": "Manage custom tags assigned to the application version"
    },
    {
      "name": "issue-statistics-of-project-version-controller",
      "description": "Retrieve the count of suppressed, removed and hidden issues in the application version"
    },
    {
      "name": "audit-assistant-status-of-project-version-controller",
      "description": "Retrieve the Audit Assistant status of the application version"
    },
    {
      "name": "issue-detail-controller",
      "description": "Retrieve detailed information about one or more issues"
    },
    {
      "name": "scan-error-of-artifact-controller",
      "description": "Retrieve the scan errors of all the scans associated with artifact"
    },
    {
      "name": "internal-custom-tag-controller",
      "description": "Retrieve the internal custom tag definitions"
    },
    {
      "name": "file-token-controller",
      "description": "Manage a file token for various file upload and download operations"
    },
    {
      "name": "user-issue-search-options-of-project-version-controller",
      "description": "Manage issues search options for a currently logged-in user for the application version"
    },
    {
      "name": "folder-controller",
      "description": "Retrieve the defined folder names as an array"
    },
    {
      "name": "parser-plugin-image-controller",
      "description": "Retrieve images loaded for parser plugin"
    },
    {
      "name": "project-version-of-auth-entity-controller",
      "description": "Manage the association of application versions to the authentication entity (local or LDAP user)"
    },
    {
      "name": "cloud-system-metrics-controller",
      "description": "Retrieve system metrics for ScanCentral SAST"
    },
    {
      "name": "iid-migration-controller",
      "description": "Retrieve issue identifier migration information for the specific migration"
    },
    {
      "name": "user-session-info-controller",
      "description": "Retrieve user session information"
    },
    {
      "name": "ldap-server-controller",
      "description": "Manage LDAP servers configuration"
    },
    {
      "name": "cloud-worker-controller",
      "description": "Retrieve information on ScanCentral SAST workers"
    },
    {
      "name": "cloud-worker-of-cloud-pool-controller",
      "description": "Manage association of ScanCentral SAST workers with ScanCentral SAST pools"
    },
    {
      "name": "issue-template-controller",
      "description": "Manage issue view templates"
    },
    {
      "name": "report-library-controller",
      "description": "Manage report libraries"
    },
    {
      "name": "filter-set-of-project-version-controller",
      "description": "Retrieve the filter sets defined for the application version"
    },
    {
      "name": "bug-tracker-of-project-version-controller",
      "description": "Manage bug tracker integration for the application version"
    },
    {
      "name": "rulepack-update-controller",
      "description": "Import rulepacks from the rules server and return the status"
    }
  ],
  "paths": {
    "/activityFeedEvents": {
      "get": {
        "tags": [
          "activity-feed-controller"
        ],
        "summary": "list",
        "operationId": "listActivityFeed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Activity Feed»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/alertDefinitions": {
      "get": {
        "tags": [
          "alert-definition-controller"
        ],
        "summary": "list",
        "operationId": "listAlertDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«AlertDefinitionDto»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "alert-definition-controller"
        ],
        "summary": "create",
        "operationId": "createAlertDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertDefinitionDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«AlertDefinitionDto»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "alert-definition-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteAlertDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/alertDefinitions/{id}": {
      "get": {
        "tags": [
          "alert-definition-controller"
        ],
        "summary": "read",
        "operationId": "readAlertDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«AlertDefinitionDto»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "alert-definition-controller"
        ],
        "summary": "update",
        "operationId": "updateAlertDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertDefinitionDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«AlertDefinitionDto»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "alert-definition-controller"
        ],
        "summary": "delete",
        "operationId": "deleteAlertDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/alertDefinitions/{parentId}/projectVersions": {
      "get": {
        "tags": [
          "project-version-of-alert-definition-controller"
        ],
        "summary": "list",
        "operationId": "listProjectVersionOfAlertDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Project Version»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/alertableEventTypes": {
      "get": {
        "tags": [
          "alertable-event-type-controller"
        ],
        "summary": "list",
        "operationId": "listAlertableEventType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«AlertableEventType»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/alerts": {
      "get": {
        "tags": [
          "alert-history-controller"
        ],
        "summary": "list",
        "operationId": "listAlertHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Alert History Entry»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/alerts/action/setStatus": {
      "post": {
        "tags": [
          "alert-history-controller"
        ],
        "summary": "Mark a triggered alert event as read or unread",
        "operationId": "setStatusForAlertHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertSetStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/applicationState": {
      "get": {
        "tags": [
          "application-state-controller"
        ],
        "summary": "get",
        "operationId": "getApplicationState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Application State»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "application-state-controller"
        ],
        "summary": "put",
        "operationId": "putApplicationState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "applicationState",
            "description": "applicationState",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Application State"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Application State»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/artifacts/action/approve": {
      "post": {
        "tags": [
          "artifact-controller"
        ],
        "summary": "Approve the artifact for processing in spite of failing ",
        "operationId": "approveArtifact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactApproveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/artifacts/action/purge": {
      "post": {
        "tags": [
          "artifact-controller"
        ],
        "summary": "Purge the specified artifact from the system to recover space without affecting issue metrics. (Use the 'delete' operation instead if you want to completely revert all traces of an artifact)",
        "operationId": "purgeArtifact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactPurgeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/artifacts/{id}": {
      "get": {
        "tags": [
          "artifact-controller"
        ],
        "summary": "read",
        "operationId": "readArtifact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "embed",
            "in": "query",
            "description": "Fields to embed",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Artifact»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "artifact-controller"
        ],
        "summary": "delete",
        "operationId": "deleteArtifact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/artifacts/{parentId}/scanerrors": {
      "get": {
        "tags": [
          "scan-error-of-artifact-controller"
        ],
        "summary": "list",
        "operationId": "listScanErrorOfArtifact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«scan error»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/artifacts/{parentId}/scans": {
      "get": {
        "tags": [
          "scan-of-artifact-controller"
        ],
        "summary": "list",
        "operationId": "listScanOfArtifact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Scan»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/attributeDefinitions": {
      "get": {
        "tags": [
          "attribute-definition-controller"
        ],
        "summary": "list",
        "operationId": "listAttributeDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Attribute Definition»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "attribute-definition-controller"
        ],
        "summary": "create",
        "operationId": "createAttributeDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attribute Definition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Attribute Definition»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "attribute-definition-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteAttributeDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "description": "If parameter is set to 'true', the specified attribute(s), if deletable, will be removed even if in use.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/attributeDefinitions/{id}": {
      "get": {
        "tags": [
          "attribute-definition-controller"
        ],
        "summary": "read",
        "operationId": "readAttributeDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Attribute Definition»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "attribute-definition-controller"
        ],
        "summary": "update",
        "operationId": "updateAttributeDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attribute Definition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Attribute Definition»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "attribute-definition-controller"
        ],
        "summary": "delete",
        "operationId": "deleteAttributeDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "force",
            "in": "query",
            "description": "If parameter is set to 'true', the specified attribute(s), if deletable, will be removed even if in use.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/authEntities": {
      "get": {
        "tags": [
          "auth-entity-controller"
        ],
        "summary": "list",
        "operationId": "listAuthEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search-spec of full text search query (see fulltextsearch parameter)",
            "required": false,
            "type": "string"
          },
          {
            "name": "fulltextsearch",
            "in": "query",
            "description": "If 'true', interpret 'q' parameter as full text search query, defaults to 'false'",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          },
          {
            "name": "embed",
            "in": "query",
            "description": "Fields to embed",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityname",
            "in": "query",
            "description": "entityname",
            "required": false,
            "type": "string"
          },
          {
            "name": "ldaptype",
            "in": "query",
            "description": "ldaptype",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Authentication Entity»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "auth-entity-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteAuthEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/authEntities/{id}": {
      "get": {
        "tags": [
          "auth-entity-controller"
        ],
        "summary": "read",
        "operationId": "readAuthEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "embed",
            "in": "query",
            "description": "Fields to embed",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Authentication Entity»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/authEntities/{parentId}/groups": {
      "get": {
        "tags": [
          "group-of-auth-entity-controller"
        ],
        "summary": "list",
        "operationId": "listGroupOfAuthEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "embed",
            "in": "query",
            "description": "Fields to embed",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Authentication Entity»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/authEntities/{parentId}/projectVersions": {
      "get": {
        "tags": [
          "project-version-of-auth-entity-controller"
        ],
        "summary": "list",
        "operationId": "listProjectVersionOfAuthEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Project Version»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "project-version-of-auth-entity-controller"
        ],
        "summary": "update",
        "operationId": "updateProjectVersionOfAuthEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resources",
            "description": "resources",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Project Version»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "project-version-of-auth-entity-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteProjectVersionOfAuthEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/authEntities/{parentId}/projectVersions/action/assign": {
      "post": {
        "tags": [
          "project-version-of-auth-entity-controller"
        ],
        "summary": "Associate the specified application versions to the authentication entity",
        "operationId": "assignProjectVersionOfAuthEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectVersionAuthEntityAssignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/authEntities/{parentId}/roles": {
      "get": {
        "tags": [
          "role-of-auth-entity-controller"
        ],
        "summary": "list",
        "operationId": "listRoleOfAuthEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Role»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/bugfieldTemplateGroups": {
      "get": {
        "tags": [
          "bugfield-template-group-controller"
        ],
        "summary": "list",
        "operationId": "listBugfieldTemplateGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«BugfieldTemplateGroupDto»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "bugfield-template-group-controller"
        ],
        "summary": "create",
        "operationId": "createBugfieldTemplateGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BugfieldTemplateGroupDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«BugfieldTemplateGroupDto»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "bugfield-template-group-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteBugfieldTemplateGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/bugfieldTemplateGroups/{id}": {
      "get": {
        "tags": [
          "bugfield-template-group-controller"
        ],
        "summary": "read",
        "operationId": "readBugfieldTemplateGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«BugfieldTemplateGroupDto»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "bugfield-template-group-controller"
        ],
        "summary": "update",
        "operationId": "updateBugfieldTemplateGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BugfieldTemplateGroupDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«BugfieldTemplateGroupDto»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "bugfield-template-group-controller"
        ],
        "summary": "delete",
        "operationId": "deleteBugfieldTemplateGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/bugtrackers": {
      "get": {
        "tags": [
          "bug-tracker-controller"
        ],
        "summary": "list",
        "operationId": "listBugTracker",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Bug Tracker»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/bulk": {
      "post": {
        "tags": [
          "bulk-controller"
        ],
        "summary": "post",
        "operationId": "postBulk",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "apiBulkRequestData",
            "description": "apiBulkRequestData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bulk Request Data"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Bulk Response Item»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudjobs": {
      "get": {
        "tags": [
          "cloud-job-controller"
        ],
        "summary": "list",
        "operationId": "listCloudJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«CloudJob»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudjobs/action/cancel": {
      "post": {
        "tags": [
          "cloud-job-controller"
        ],
        "summary": "Cancel a job",
        "operationId": "cancelCloudJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudJobCancelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudjobs/{jobToken}": {
      "get": {
        "tags": [
          "cloud-job-controller"
        ],
        "summary": "read",
        "operationId": "readCloudJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobToken",
            "in": "path",
            "description": "jobToken",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«CloudJob»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudmappings/mapByVersionId": {
      "get": {
        "tags": [
          "cloud-pool-mapping-controller"
        ],
        "summary": "mapByVersionId",
        "operationId": "mapByVersionIdCloudPoolMapping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectVersionId",
            "in": "query",
            "description": "projectVersionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«CloudPoolMapping»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudmappings/mapByVersionIds": {
      "post": {
        "tags": [
          "cloud-pool-mapping-controller"
        ],
        "summary": "mapByVersionIds",
        "operationId": "mapByVersionIdsCloudPoolMapping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "projectVersionIds",
            "description": "projectVersionIds",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«CloudPoolMapping»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudmappings/mapByVersionName": {
      "get": {
        "tags": [
          "cloud-pool-mapping-controller"
        ],
        "summary": "mapByVersionName",
        "operationId": "mapByVersionNameCloudPoolMapping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectName",
            "in": "query",
            "description": "projectName",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectVersionName",
            "in": "query",
            "description": "projectVersionName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«CloudPoolMapping»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudpools": {
      "get": {
        "tags": [
          "cloud-pool-controller"
        ],
        "summary": "list",
        "operationId": "listCloudPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search-spec of full text search query (see fulltextsearch parameter)",
            "required": false,
            "type": "string"
          },
          {
            "name": "fulltextsearch",
            "in": "query",
            "description": "If 'true', interpret 'q' parameter as full text search query, defaults to 'false'",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«CloudPool»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "cloud-pool-controller"
        ],
        "summary": "create",
        "operationId": "createCloudPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudPool"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«CloudPool»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudpools/disabledWorkers": {
      "get": {
        "tags": [
          "unassigned-cloud-worker-of-cloud-pool-controller"
        ],
        "summary": "list",
        "operationId": "listUnassignedCloudWorkerOfCloudPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«CloudWorker»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudpools/{parentId}/jobs": {
      "get": {
        "tags": [
          "cloud-job-of-cloud-pool-controller"
        ],
        "summary": "list",
        "operationId": "listCloudJobOfCloudPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«CloudJob»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudpools/{parentId}/versions": {
      "get": {
        "tags": [
          "project-version-of-cloud-pool-controller"
        ],
        "summary": "list",
        "operationId": "listProjectVersionOfCloudPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Project Version»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudpools/{parentId}/versions/action/assign": {
      "post": {
        "tags": [
          "project-version-of-cloud-pool-controller"
        ],
        "summary": "Assign application versions to the cloud pool",
        "operationId": "assignProjectVersionOfCloudPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudPoolProjectVersionAssignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«CloudPoolProjectVersionActionResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudpools/{parentId}/versions/action/replace": {
      "post": {
        "tags": [
          "project-version-of-cloud-pool-controller"
        ],
        "summary": "Replace application versions in the cloud pool",
        "operationId": "replaceProjectVersionOfCloudPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudPoolProjectVersionReplaceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«CloudPoolProjectVersionActionResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudpools/{parentId}/workers": {
      "get": {
        "tags": [
          "cloud-worker-of-cloud-pool-controller"
        ],
        "summary": "list",
        "operationId": "listCloudWorkerOfCloudPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«CloudWorker»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudpools/{parentId}/workers/action/assign": {
      "post": {
        "tags": [
          "cloud-worker-of-cloud-pool-controller"
        ],
        "summary": "Assign workers to the cloud pool",
        "operationId": "assignCloudWorkerOfCloudPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudPoolWorkerAssignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«CloudPoolWorkerActionResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudpools/{parentId}/workers/action/disable": {
      "post": {
        "tags": [
          "cloud-worker-of-cloud-pool-controller"
        ],
        "summary": "Disable workers in the cloud pool",
        "operationId": "disableCloudWorkerOfCloudPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudPoolWorkerDisableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«CloudPoolWorkerActionResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudpools/{parentId}/workers/action/replace": {
      "post": {
        "tags": [
          "cloud-worker-of-cloud-pool-controller"
        ],
        "summary": "Replace workers in the cloud pool",
        "operationId": "replaceCloudWorkerOfCloudPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudPoolWorkerReplaceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«CloudPoolWorkerActionResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudpools/{uuid}": {
      "get": {
        "tags": [
          "cloud-pool-controller"
        ],
        "summary": "read",
        "operationId": "readCloudPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«CloudPool»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "cloud-pool-controller"
        ],
        "summary": "update",
        "operationId": "updateCloudPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudPool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«CloudPool»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "cloud-pool-controller"
        ],
        "summary": "delete",
        "operationId": "deleteCloudPool",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudsystem/metrics": {
      "get": {
        "tags": [
          "cloud-system-metrics-controller"
        ],
        "summary": "get",
        "operationId": "getCloudSystemMetrics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«CloudSystemMetrics»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudsystem/pollstatus": {
      "get": {
        "tags": [
          "cloud-system-poll-status-controller"
        ],
        "summary": "get",
        "operationId": "getCloudSystemPollStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«CloudSystemPollStatus»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudsystem/settings": {
      "get": {
        "tags": [
          "cloud-system-settings-controller"
        ],
        "summary": "get",
        "operationId": "getCloudSystemSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«CloudSystemSettings»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudworkers": {
      "get": {
        "tags": [
          "cloud-worker-controller"
        ],
        "summary": "list",
        "operationId": "listCloudWorker",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search-spec of full text search query (see fulltextsearch parameter)",
            "required": false,
            "type": "string"
          },
          {
            "name": "fulltextsearch",
            "in": "query",
            "description": "If 'true', interpret 'q' parameter as full text search query, defaults to 'false'",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«CloudWorker»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudworkers/{parentId}/cloudjobs": {
      "get": {
        "tags": [
          "cloud-job-of-cloud-worker-controller"
        ],
        "summary": "list",
        "operationId": "listCloudJobOfCloudWorker",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«CloudJob»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/cloudworkers/{uuid}": {
      "get": {
        "tags": [
          "cloud-worker-controller"
        ],
        "summary": "read",
        "operationId": "readCloudWorker",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«CloudWorker»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/comments": {
      "get": {
        "tags": [
          "issue-audit-comment-controller"
        ],
        "summary": "list",
        "operationId": "listIssueAuditComment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A full text search query",
            "required": true,
            "type": "string"
          },
          {
            "name": "fulltextsearch",
            "in": "query",
            "description": "Only 'true' is supported",
            "required": true,
            "type": "string",
            "default": "true",
            "enum": [
              "true"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Issue Audit Comment»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/configuration": {
      "get": {
        "tags": [
          "configuration-controller"
        ],
        "summary": "get",
        "operationId": "getConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "query",
            "description": "group",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«ConfigProperties»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "configuration-controller"
        ],
        "summary": "update",
        "operationId": "updateConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«ConfigProperties»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/configuration/action/refreshAuditAssistantPolicies": {
      "post": {
        "tags": [
          "configuration-controller"
        ],
        "summary": "Refreshes prediction policies between Audit Assistant server and SSC",
        "operationId": "refreshAuditAssistantPoliciesConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RefreshAuditAssistantPoliciesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«RefreshAuditAssistantPoliciesRequest»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/configuration/currentAuthenticationInfo": {
      "get": {
        "tags": [
          "configuration-controller"
        ],
        "summary": "getCurrentAuthenticationInfo",
        "operationId": "getCurrentAuthenticationInfoConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«CurrentAuthenticationInfo»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/configuration/searchIndex": {
      "get": {
        "tags": [
          "configuration-controller"
        ],
        "summary": "getFullTextIndexStatus",
        "operationId": "getFullTextIndexStatusConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«SearchIndexStatus»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/configuration/validateAuditAssistantConnection": {
      "post": {
        "tags": [
          "configuration-controller"
        ],
        "summary": "validateAuditAssistantConnection",
        "operationId": "validateAuditAssistantConnectionConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«ConfigProperties»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/configuration/validateReportConnection": {
      "post": {
        "tags": [
          "configuration-controller"
        ],
        "summary": "validateReportConnection",
        "operationId": "validateReportConnectionConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«ConfigProperties»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/configuration/{id}": {
      "get": {
        "tags": [
          "configuration-controller"
        ],
        "summary": "read",
        "operationId": "readConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«ConfigProperty»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/coreRulepacks": {
      "get": {
        "tags": [
          "rulepack-core-controller"
        ],
        "summary": "list",
        "operationId": "listRulepackCore",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Rulepack Core»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "rulepack-core-controller"
        ],
        "summary": "upload",
        "operationId": "uploadRulepackCore",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«RulepackStatus»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "rulepack-core-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteRulepackCore",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/coreRulepacks/{id}": {
      "delete": {
        "tags": [
          "rulepack-core-controller"
        ],
        "summary": "delete",
        "operationId": "deleteRulepackCore",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/customTags": {
      "get": {
        "tags": [
          "custom-tag-controller"
        ],
        "summary": "list",
        "operationId": "listCustomTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Custom tag»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "custom-tag-controller"
        ],
        "summary": "create",
        "operationId": "createCustomTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Custom tag"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Custom tag»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "custom-tag-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteCustomTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/customTags/{id}": {
      "get": {
        "tags": [
          "custom-tag-controller"
        ],
        "summary": "read",
        "operationId": "readCustomTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Custom tag»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "custom-tag-controller"
        ],
        "summary": "update",
        "operationId": "updateCustomTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Custom tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Custom tag»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "custom-tag-controller"
        ],
        "summary": "delete",
        "operationId": "deleteCustomTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/dashboardVersions": {
      "get": {
        "tags": [
          "dashboard-version-controller"
        ],
        "summary": "list",
        "operationId": "listDashboardVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupby",
            "in": "query",
            "description": "Fields to group by",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "aggregateby",
            "in": "query",
            "description": "aggregateby",
            "required": false,
            "type": "string"
          },
          {
            "name": "startdate",
            "in": "query",
            "description": "startdate",
            "required": false,
            "type": "string"
          },
          {
            "name": "enddate",
            "in": "query",
            "description": "enddate",
            "required": false,
            "type": "string"
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "attributes",
            "required": false,
            "type": "string"
          },
          {
            "name": "variables",
            "in": "query",
            "description": "variables",
            "required": false,
            "type": "string"
          },
          {
            "name": "performanceindicators",
            "in": "query",
            "description": "performanceindicators",
            "required": false,
            "type": "string"
          },
          {
            "name": "attributefilter",
            "in": "query",
            "description": "attributefilter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Dashboard Version»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/dataExports": {
      "get": {
        "tags": [
          "data-export-controller"
        ],
        "summary": "list",
        "operationId": "listDataExport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Data Export»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/dataExports/action/exportAuditToCsv": {
      "post": {
        "tags": [
          "data-export-controller"
        ],
        "summary": "Export audit to csv",
        "operationId": "exportAuditToCSVForDataExport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportAuditToCSVRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/dataExports/action/exportIssueStatsToCsv": {
      "post": {
        "tags": [
          "data-export-controller"
        ],
        "summary": "Export issue statistics to csv",
        "operationId": "exportIssuesStatsToCSVForDataExport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportIssueStatsToCSVRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/dataExports/{id}": {
      "delete": {
        "tags": [
          "data-export-controller"
        ],
        "summary": "delete",
        "operationId": "deleteDataExport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/engineTypes": {
      "get": {
        "tags": [
          "engine-type-controller"
        ],
        "summary": "list",
        "operationId": "listEngineType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Engine type»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/events": {
      "get": {
        "tags": [
          "event-log-controller"
        ],
        "summary": "list",
        "operationId": "listEventLog",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«EventLog»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/features": {
      "get": {
        "tags": [
          "feature-controller"
        ],
        "summary": "list",
        "operationId": "listFeature",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          },
          {
            "name": "use_stable_api",
            "in": "query",
            "description": "use_stable_api",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Feature»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/features/{id}": {
      "get": {
        "tags": [
          "feature-controller"
        ],
        "summary": "read",
        "operationId": "readFeature",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Feature»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/fileTokens": {
      "post": {
        "tags": [
          "file-token-controller"
        ],
        "summary": "Create single-use file transfer token",
        "operationId": "createFileToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/File token"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«File token»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "file-token-controller"
        ],
        "summary": "Call this operation after every file upload activity",
        "operationId": "multiDeleteFileToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/folders": {
      "get": {
        "tags": [
          "folder-controller"
        ],
        "summary": "get",
        "operationId": "getFolder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Array«string»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/iidMigrations/{id}": {
      "get": {
        "tags": [
          "iid-migration-controller"
        ],
        "summary": "read",
        "operationId": "readIidMigration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«IID Migration»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/internalCustomTags": {
      "get": {
        "tags": [
          "internal-custom-tag-controller"
        ],
        "summary": "list",
        "operationId": "listInternalCustomTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Custom tag»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/issueDetails": {
      "get": {
        "tags": [
          "issue-detail-controller"
        ],
        "summary": "list",
        "operationId": "listIssueDetail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "projectName",
            "in": "query",
            "description": "projectName",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectVersionName",
            "in": "query",
            "description": "projectVersionName",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "query",
            "description": "instanceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Project version issue details»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/issueDetails/{id}": {
      "get": {
        "tags": [
          "issue-detail-controller"
        ],
        "summary": "read",
        "operationId": "readIssueDetail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "filterset",
            "in": "query",
            "description": "Filter set to use",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Project version issue details»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/issueTemplates": {
      "get": {
        "tags": [
          "issue-template-controller"
        ],
        "summary": "list",
        "operationId": "listIssueTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Issue Template»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "issue-template-controller"
        ],
        "summary": "upload",
        "operationId": "uploadIssueTemplate",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          },
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "description",
            "required": false,
            "type": "string"
          },
          {
            "name": "confirmIgnoreCustomTagUpdates",
            "in": "query",
            "description": "confirmIgnoreCustomTagUpdates",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Issue Template»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "issue-template-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteIssueTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/issueTemplates/{id}": {
      "get": {
        "tags": [
          "issue-template-controller"
        ],
        "summary": "read",
        "operationId": "readIssueTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Issue Template»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "issue-template-controller"
        ],
        "summary": "update",
        "operationId": "updateIssueTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Issue Template"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Issue Template»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "issue-template-controller"
        ],
        "summary": "delete",
        "operationId": "deleteIssueTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/issueTemplates/{parentId}/customTags": {
      "get": {
        "tags": [
          "custom-tag-of-issue-template-controller"
        ],
        "summary": "list",
        "operationId": "listCustomTagOfIssueTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Custom tag»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "custom-tag-of-issue-template-controller"
        ],
        "summary": "update",
        "operationId": "updateCustomTagOfIssueTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "customTags",
            "description": "customTags",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Custom tag"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Custom tag»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/issueViewTemplates": {
      "get": {
        "tags": [
          "issue-view-template-controller"
        ],
        "summary": "list",
        "operationId": "listIssueViewTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«IssueViewTemplate»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/issueViewTemplates/{id}": {
      "get": {
        "tags": [
          "issue-view-template-controller"
        ],
        "summary": "read",
        "operationId": "readIssueViewTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«IssueViewTemplate»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/issueaging": {
      "get": {
        "tags": [
          "issue-aging-controller"
        ],
        "summary": "list",
        "operationId": "listIssueAging",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "filterby",
            "in": "query",
            "description": "filterby",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregateby",
            "in": "query",
            "description": "aggregateby",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupguid",
            "in": "query",
            "description": "groupguid",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupvalue",
            "in": "query",
            "description": "groupvalue",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberOfApplicationVersions",
            "in": "query",
            "description": "numberOfApplicationVersions",
            "required": false,
            "type": "string"
          },
          {
            "name": "linesOfCode",
            "in": "query",
            "description": "linesOfCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "issuesPendingReview",
            "in": "query",
            "description": "issuesPendingReview",
            "required": false,
            "type": "string"
          },
          {
            "name": "openIssues",
            "in": "query",
            "description": "openIssues",
            "required": false,
            "type": "string"
          },
          {
            "name": "filesScanned",
            "in": "query",
            "description": "filesScanned",
            "required": false,
            "type": "string"
          },
          {
            "name": "bugDensity",
            "in": "query",
            "description": "bugDensity",
            "required": false,
            "type": "string"
          },
          {
            "name": "averageDaysToReview",
            "in": "query",
            "description": "averageDaysToReview",
            "required": false,
            "type": "string"
          },
          {
            "name": "averageDaysToRemediate",
            "in": "query",
            "description": "averageDaysToRemediate",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«IssueAgingDto»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/issueaginggroup": {
      "get": {
        "tags": [
          "issue-aging-group-controller"
        ],
        "summary": "list",
        "operationId": "listIssueAgingGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupby",
            "in": "query",
            "description": "Fields to group by",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "filterby",
            "in": "query",
            "description": "filterby",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«IssueAgingGroupDto»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/issues": {
      "get": {
        "tags": [
          "issue-controller"
        ],
        "summary": "list",
        "operationId": "listIssue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A full text search query",
            "required": true,
            "type": "string"
          },
          {
            "name": "fulltextsearch",
            "in": "query",
            "description": "Only 'true' is supported",
            "required": true,
            "type": "string",
            "default": "true",
            "enum": [
              "true"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Project version issue»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/issues/{id}": {
      "get": {
        "tags": [
          "issue-controller"
        ],
        "summary": "read",
        "operationId": "readIssue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Project version issue»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/issues/{parentId}/attachments": {
      "get": {
        "tags": [
          "issue-attachment-of-issue-controller"
        ],
        "summary": "list",
        "operationId": "listIssueAttachmentOfIssue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Issue Attachment»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "issue-attachment-of-issue-controller"
        ],
        "summary": "upload",
        "operationId": "uploadIssueAttachmentOfIssue",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          },
          {
            "name": "description",
            "in": "query",
            "description": "description",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Issue Attachment»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "issue-attachment-of-issue-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteIssueAttachmentOfIssue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/issues/{parentId}/attachments/{id}": {
      "get": {
        "tags": [
          "issue-attachment-of-issue-controller"
        ],
        "summary": "read",
        "operationId": "readIssueAttachmentOfIssue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Issue Attachment»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "issue-attachment-of-issue-controller"
        ],
        "summary": "update",
        "operationId": "updateIssueAttachmentOfIssue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Issue Attachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Issue Attachment»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "issue-attachment-of-issue-controller"
        ],
        "summary": "delete",
        "operationId": "deleteIssueAttachmentOfIssue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/issues/{parentId}/auditHistory": {
      "get": {
        "tags": [
          "audit-history-of-issue-controller"
        ],
        "summary": "list",
        "operationId": "listAuditHistoryOfIssue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«IssueAuditHistoryDto»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/issues/{parentId}/comments": {
      "get": {
        "tags": [
          "issue-audit-comment-of-issue-controller"
        ],
        "summary": "list",
        "operationId": "listIssueAuditCommentOfIssue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Issue Audit Comment»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "issue-audit-comment-of-issue-controller"
        ],
        "summary": "create",
        "operationId": "createIssueAuditCommentOfIssue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Issue Audit Comment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Issue Audit Comment»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/jobs": {
      "get": {
        "tags": [
          "job-controller"
        ],
        "summary": "list",
        "operationId": "listJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Job»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/jobs/action/cancel": {
      "post": {
        "tags": [
          "job-controller"
        ],
        "summary": "Cancel a job",
        "operationId": "cancelJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobCancelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/jobs/{jobName}": {
      "get": {
        "tags": [
          "job-controller"
        ],
        "summary": "read",
        "operationId": "readJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobName",
            "in": "path",
            "description": "jobName",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Job»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "job-controller"
        ],
        "summary": "update",
        "operationId": "updateJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobName",
            "in": "path",
            "description": "jobName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Job»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/jobs/{parentId}/warnings": {
      "get": {
        "tags": [
          "job-priority-change-category-warning-of-job-controller"
        ],
        "summary": "list",
        "operationId": "listJobPriorityChangeCategoryWarningOfJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority",
            "in": "query",
            "description": "priority",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«JobPriorityChangeCategoryWarning»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/ldapObjects": {
      "get": {
        "tags": [
          "ldap-object-controller"
        ],
        "summary": "Retrieve ldap entities registered with SSC",
        "operationId": "listLdapObject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "The specified query string is matched against the name, firstName, lastName, and email fields for LDAP User entities. For Group and OrgUnit entities, only the name is matched. The query string must match the entire field value. For partial matches you can add asterisk ('*') wildcards to your query.",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          },
          {
            "name": "ldapType",
            "in": "query",
            "description": "If specified, restrict the results to ldap entities of the specified type.",
            "required": false,
            "type": "string",
            "enum": [
              "NONE",
              "GROUP",
              "USER",
              "ORG_UNIT"
            ]
          },
          {
            "name": "viewby",
            "in": "query",
            "description": "Deprecated. Use the 'ldapType' parameter instead.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ldaptype",
            "in": "query",
            "description": "Deprecated. Use the 'action/searchUnregistered' api instead.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«LDAP entity»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "ldap-object-controller"
        ],
        "summary": "create",
        "operationId": "createLdapObject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LDAP entity"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«LDAP entity»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ldap-object-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteLdapObject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/ldapObjects/action/refresh": {
      "post": {
        "tags": [
          "ldap-object-controller"
        ],
        "summary": "Refresh the ldap cache",
        "operationId": "refreshLdapObject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«LdapRefreshResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/ldapObjects/action/searchUnregistered": {
      "post": {
        "tags": [
          "ldap-object-controller"
        ],
        "summary": "Retrieve ldap entities matching the search request which are currently unregistered with SSC. The overall scope of searchable ldap objects is defined by the SSC ldap server configuration",
        "operationId": "searchUnregisteredLdapObject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "searchLdapUnregisteredRequest",
            "description": "searchLdapUnregisteredRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchLdapUnregisteredRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«LDAP entity»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/ldapObjects/{id}": {
      "get": {
        "tags": [
          "ldap-object-controller"
        ],
        "summary": "read",
        "operationId": "readLdapObject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«LDAP entity»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "ldap-object-controller"
        ],
        "summary": "update",
        "operationId": "updateLdapObject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LDAP entity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«LDAP entity»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ldap-object-controller"
        ],
        "summary": "delete",
        "operationId": "deleteLdapObject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/ldapServers": {
      "get": {
        "tags": [
          "ldap-server-controller"
        ],
        "summary": "list",
        "operationId": "listLdapServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«LdapServerDto»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "ldap-server-controller"
        ],
        "summary": "create",
        "operationId": "createLdapServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LdapServerDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«LdapServerDto»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ldap-server-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteLdapServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/ldapServers/action/test": {
      "post": {
        "tags": [
          "ldap-server-controller"
        ],
        "summary": "Validate that it is possible to authenticate to the ldap server using the configured ldap baseDN and credentials",
        "operationId": "testLdapServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ldapServerTestRequest",
            "description": "ldapServerTestRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LdapServerTestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Validation Status»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/ldapServers/{id}": {
      "get": {
        "tags": [
          "ldap-server-controller"
        ],
        "summary": "read",
        "operationId": "readLdapServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«LdapServerDto»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "ldap-server-controller"
        ],
        "summary": "update",
        "operationId": "updateLdapServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LdapServerDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«LdapServerDto»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ldap-server-controller"
        ],
        "summary": "delete",
        "operationId": "deleteLdapServer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/license": {
      "get": {
        "tags": [
          "license-controller"
        ],
        "summary": "get",
        "operationId": "getLicense",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«License»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "Basic": []
          },
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/localUsers": {
      "get": {
        "tags": [
          "local-user-controller"
        ],
        "summary": "list",
        "operationId": "listLocalUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Local User»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "local-user-controller"
        ],
        "summary": "create",
        "operationId": "createLocalUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Local User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Local User»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "local-user-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteLocalUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/localUsers/action/checkPasswordStrength": {
      "post": {
        "tags": [
          "local-user-controller"
        ],
        "summary": "Check the provided password using the system password strength validator and the specified dictionaries",
        "operationId": "checkLocalUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "passwordStrengthCheckRequest",
            "description": "passwordStrengthCheckRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PasswordStrengthCheckRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«PasswordStrengthCheckResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/localUsers/{id}": {
      "get": {
        "tags": [
          "local-user-controller"
        ],
        "summary": "read",
        "operationId": "readLocalUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Local User»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "local-user-controller"
        ],
        "summary": "update",
        "operationId": "updateLocalUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Local User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Local User»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "local-user-controller"
        ],
        "summary": "delete",
        "operationId": "deleteLocalUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/performanceIndicators": {
      "get": {
        "tags": [
          "performance-indicator-controller"
        ],
        "summary": "list",
        "operationId": "listPerformanceIndicator",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«PerformanceIndicator»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "performance-indicator-controller"
        ],
        "summary": "create",
        "operationId": "createPerformanceIndicator",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PerformanceIndicator"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«PerformanceIndicator»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "performance-indicator-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeletePerformanceIndicator",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/performanceIndicators/{id}": {
      "put": {
        "tags": [
          "performance-indicator-controller"
        ],
        "summary": "update",
        "operationId": "updatePerformanceIndicator",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PerformanceIndicator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«PerformanceIndicator»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "performance-indicator-controller"
        ],
        "summary": "delete",
        "operationId": "deletePerformanceIndicator",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/permissions": {
      "get": {
        "tags": [
          "permission-controller"
        ],
        "summary": "list",
        "operationId": "listPermission",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Permission»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/permissions/{id}": {
      "get": {
        "tags": [
          "permission-controller"
        ],
        "summary": "read",
        "operationId": "readPermission",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Permission»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/permissions/{parentId}/dependsOn": {
      "get": {
        "tags": [
          "permission-required-by-permission-controller"
        ],
        "summary": "list",
        "operationId": "listPermissionRequiredByPermission",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Permission»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/pluginimage": {
      "get": {
        "tags": [
          "plugin-image-controller"
        ],
        "summary": "get",
        "operationId": "getPluginImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "image/png"
        ],
        "parameters": [
          {
            "name": "imageType",
            "in": "query",
            "description": "imageType",
            "required": true,
            "type": "string"
          },
          {
            "name": "metadataId",
            "in": "query",
            "description": "metadataId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/pluginimage/parser": {
      "get": {
        "tags": [
          "parser-plugin-image-controller"
        ],
        "summary": "get",
        "operationId": "getParserPluginImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "image/png"
        ],
        "parameters": [
          {
            "name": "imageType",
            "in": "query",
            "description": "imageType",
            "required": true,
            "type": "string"
          },
          {
            "name": "engineType",
            "in": "query",
            "description": "engineType",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataVersion",
            "in": "query",
            "description": "dataVersion",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/pluginlocalization": {
      "get": {
        "tags": [
          "plugin-localization-controller"
        ],
        "summary": "read",
        "operationId": "readPluginLocalization",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "engineType",
            "in": "query",
            "description": "engineType",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataVersion",
            "in": "query",
            "description": "dataVersion",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "language",
            "in": "query",
            "description": "language",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Plugin Localization»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/plugins": {
      "get": {
        "tags": [
          "plugin-controller"
        ],
        "summary": "list",
        "operationId": "listPlugin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Plugin Meta Data»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "plugin-controller"
        ],
        "summary": "upload",
        "operationId": "uploadPlugin",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Plugin Meta Data»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/plugins/action/disable": {
      "post": {
        "tags": [
          "plugin-controller"
        ],
        "summary": "Disable a plugin",
        "operationId": "disablePlugin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PluginDisableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/plugins/action/enable": {
      "post": {
        "tags": [
          "plugin-controller"
        ],
        "summary": "Enable a plugin",
        "operationId": "enablePlugin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PluginEnableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/plugins/{id}": {
      "get": {
        "tags": [
          "plugin-controller"
        ],
        "summary": "read",
        "operationId": "readPlugin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Plugin Meta Data»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "plugin-controller"
        ],
        "summary": "delete",
        "operationId": "deletePlugin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/portlets/issueaging": {
      "get": {
        "tags": [
          "issue-aging-portlet-controller"
        ],
        "summary": "get",
        "operationId": "getIssueAgingPortlet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«IssueAgingPortlet»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions": {
      "get": {
        "tags": [
          "project-version-controller"
        ],
        "summary": "list",
        "operationId": "listProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search-spec of full text search query (see fulltextsearch parameter)",
            "required": false,
            "type": "string"
          },
          {
            "name": "fulltextsearch",
            "in": "query",
            "description": "If 'true', interpret 'q' parameter as full text search query, defaults to 'false'",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "description": "includeInactive",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "myAssignedIssues",
            "in": "query",
            "description": "myAssignedIssues",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "onlyIfHasIssues",
            "in": "query",
            "description": "onlyIfHasIssues",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Project Version»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "project-version-controller"
        ],
        "summary": "create",
        "operationId": "createProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project Version"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Project Version»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/action/auditByAuditAssistant": {
      "post": {
        "tags": [
          "project-version-controller"
        ],
        "summary": "Send issue data to Audit Assistant for assessment",
        "operationId": "auditByAuditAssistantProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectVersionAuditByAssistantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/action/copyCurrentState": {
      "post": {
        "tags": [
          "project-version-controller"
        ],
        "summary": "Copy current audit state from one project version into another",
        "operationId": "copyCurrentStateForProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectVersionCopyCurrentStateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/action/copyFromPartial": {
      "post": {
        "tags": [
          "project-version-controller"
        ],
        "summary": "Copy selected data from one project version into another",
        "operationId": "copyProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectVersionCopyPartialRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/action/purge": {
      "post": {
        "tags": [
          "project-version-controller"
        ],
        "summary": "Purge the specified project version from the system and remove all its data",
        "operationId": "purgeProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectVersionPurgeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/action/refresh": {
      "post": {
        "tags": [
          "project-version-controller"
        ],
        "summary": "Re-calculate the metrics for the project version",
        "operationId": "refreshProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectVersionRefreshRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«ProjectVersionRefreshResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/action/test": {
      "post": {
        "tags": [
          "project-version-controller"
        ],
        "summary": "Check whether the specified application version is already defined in the system",
        "operationId": "testProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "projectVersionTestRequest",
            "description": "projectVersionTestRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectVersionTestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«ProjectVersionTestResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/action/trainAuditAssistant": {
      "post": {
        "tags": [
          "project-version-controller"
        ],
        "summary": "Send audited issue data to Audit Assistant to help train the engine",
        "operationId": "trainAuditAssistantProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectVersionTrainAuditAssistantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{id}": {
      "get": {
        "tags": [
          "project-version-controller"
        ],
        "summary": "read",
        "operationId": "readProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Project Version»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "project-version-controller"
        ],
        "summary": "update",
        "operationId": "updateProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Project Version»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "project-version-controller"
        ],
        "summary": "delete",
        "operationId": "deleteProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/artifacts": {
      "get": {
        "tags": [
          "artifact-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listArtifactOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "embed",
            "in": "query",
            "description": "Fields to embed",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Artifact»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "artifact-of-project-version-controller"
        ],
        "summary": "upload",
        "operationId": "uploadArtifactOfProjectVersion",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          },
          {
            "name": "engineType",
            "in": "query",
            "description": "engineType",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Artifact»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/attributes": {
      "get": {
        "tags": [
          "attribute-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listAttributeOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Attribute»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "attribute-of-project-version-controller"
        ],
        "summary": "create",
        "operationId": "createAttributeOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attribute"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Attribute»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "attribute-of-project-version-controller"
        ],
        "summary": "updateCollection",
        "operationId": "updateCollectionAttributeOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Attribute"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Attribute»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/attributes/{id}": {
      "get": {
        "tags": [
          "attribute-of-project-version-controller"
        ],
        "summary": "read",
        "operationId": "readAttributeOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Attribute»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/auditAssistantStatus": {
      "get": {
        "tags": [
          "audit-assistant-status-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listAuditAssistantStatusOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«AuditAssistantStatus»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/auditAssistantTrainingStatus": {
      "get": {
        "tags": [
          "aa-training-status-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listAaTrainingStatusOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«AATrainingStatus»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/authEntities": {
      "get": {
        "tags": [
          "auth-entity-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listAuthEntityOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "embed",
            "in": "query",
            "description": "Fields to embed",
            "required": false,
            "type": "string"
          },
          {
            "name": "extractusersfromgroups",
            "in": "query",
            "description": "extractusersfromgroups",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeuniversalaccessentities",
            "in": "query",
            "description": "includeuniversalaccessentities",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "entityname",
            "in": "query",
            "description": "entityname",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Authentication Entity»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "auth-entity-of-project-version-controller"
        ],
        "summary": "updateCollection",
        "operationId": "updateCollectionAuthEntityOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Authentication Entity"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Authentication Entity»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/authEntities/{id}": {
      "get": {
        "tags": [
          "auth-entity-of-project-version-controller"
        ],
        "summary": "read",
        "operationId": "readAuthEntityOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "embed",
            "in": "query",
            "description": "Fields to embed",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Authentication Entity»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/bugfilingrequirements": {
      "get": {
        "tags": [
          "bug-filing-requirements-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listBugFilingRequirementsOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«BugFilingRequirements»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "bug-filing-requirements-of-project-version-controller"
        ],
        "summary": "updateCollection",
        "operationId": "updateCollectionBugFilingRequirementsOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BugFilingRequirements"
              }
            }
          },
          {
            "name": "changedParamIdentifier",
            "in": "query",
            "description": "changedParamIdentifier",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«BugFilingRequirements»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/bugfilingrequirements/action/login": {
      "post": {
        "tags": [
          "bug-filing-requirements-of-project-version-controller"
        ],
        "summary": "Authenticate to the bug tracking system and return the initial set of bug filing requirements",
        "operationId": "loginBugFilingRequirementsOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BugFilingRequirementsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«BugFilingRequirementsResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/bugtracker": {
      "get": {
        "tags": [
          "bug-tracker-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listBugTrackerOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Project version bug tracker»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "bug-tracker-of-project-version-controller"
        ],
        "summary": "updateCollection",
        "operationId": "updateCollectionBugTrackerOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Project version bug tracker"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Project version bug tracker»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/bugtracker/action/clearBugLinksByExternalIds": {
      "post": {
        "tags": [
          "bug-tracker-of-project-version-controller"
        ],
        "summary": "Clear the specified bug references from the application version. (Does not affect the external bug tracking system in any way.)",
        "operationId": "clearBugLinksByExternalIdsBugTrackerOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectVersionClearBugLinksRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/bugtracker/action/test": {
      "post": {
        "tags": [
          "bug-tracker-of-project-version-controller"
        ],
        "summary": "Validate that the user can authenticate to the bug tracking system using the provided configuration and credentials",
        "operationId": "testBugTrackerOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BugTrackerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/customTags": {
      "get": {
        "tags": [
          "custom-tag-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listCustomTagOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeall",
            "in": "query",
            "description": "includeall",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Custom tag»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "custom-tag-of-project-version-controller"
        ],
        "summary": "create",
        "operationId": "createCustomTagOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Custom tag"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Custom tag»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "custom-tag-of-project-version-controller"
        ],
        "summary": "updateCollection",
        "operationId": "updateCollectionCustomTagOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Custom tag"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Custom tag»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/customTags/{id}": {
      "put": {
        "tags": [
          "custom-tag-of-project-version-controller"
        ],
        "summary": "update",
        "operationId": "updateCustomTagOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Custom tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Custom tag»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/dynamicScanRequestTemplate": {
      "get": {
        "tags": [
          "dynamic-scan-request-template-of-project-version-controller"
        ],
        "summary": "get",
        "operationId": "getDynamicScanRequestTemplateOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«DynamicScanRequestTemplate»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/dynamicScanRequests": {
      "get": {
        "tags": [
          "dynamic-scan-request-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listDynamicScanRequestOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«DynamicScanRequest»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "dynamic-scan-request-of-project-version-controller"
        ],
        "summary": "create",
        "operationId": "createDynamicScanRequestOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynamicScanRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«DynamicScanRequest»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/dynamicScanRequests/action/cancel": {
      "post": {
        "tags": [
          "dynamic-scan-request-of-project-version-controller"
        ],
        "summary": "Cancel a dynamic scan request",
        "operationId": "cancelDynamicScanRequestOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynamicScanCancelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/dynamicScanRequests/{id}": {
      "get": {
        "tags": [
          "dynamic-scan-request-of-project-version-controller"
        ],
        "summary": "read",
        "operationId": "readDynamicScanRequestOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«DynamicScanRequest»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "dynamic-scan-request-of-project-version-controller"
        ],
        "summary": "update",
        "operationId": "updateDynamicScanRequestOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DynamicScanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«DynamicScanRequest»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/dynamicScanRequestsSummary": {
      "get": {
        "tags": [
          "dynamic-scan-requests-summary-of-project-version-controller"
        ],
        "summary": "get",
        "operationId": "getDynamicScanRequestsSummaryOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«DynamicScanRequestsSummary»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/filterSets": {
      "get": {
        "tags": [
          "filter-set-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listFilterSetOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Filter Set»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/folders": {
      "get": {
        "tags": [
          "folder-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listFolderOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Folder»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/folders/{id}": {
      "get": {
        "tags": [
          "folder-of-project-version-controller"
        ],
        "summary": "read",
        "operationId": "readFolderOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Folder»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/iidMigrations": {
      "get": {
        "tags": [
          "iid-migration-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listIidMigrationOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«IID Migration»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "iid-migration-of-project-version-controller"
        ],
        "summary": "create",
        "operationId": "createIidMigrationOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IID Migration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«IID Migration»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/issueAssignment": {
      "get": {
        "tags": [
          "issue-assignment-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listIssueAssignmentOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "entityname",
            "in": "query",
            "description": "entityname",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Issue Assignment»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/issueAssignment/{id}": {
      "get": {
        "tags": [
          "issue-assignment-of-project-version-controller"
        ],
        "summary": "read",
        "operationId": "readIssueAssignmentOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Issue Assignment»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/issueGroups": {
      "get": {
        "tags": [
          "issue-group-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listIssueGroupOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "An issue query expression, must be used together with the 'qm' parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "qm",
            "in": "query",
            "description": "Syntax mode for the 'q' parameter, mandatory if the 'q' parameter is used",
            "required": false,
            "type": "string",
            "enum": [
              "issues"
            ]
          },
          {
            "name": "filterset",
            "in": "query",
            "description": "Filter set to use",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "showhidden",
            "in": "query",
            "description": "If 'true', include hidden issues in search results. If 'false', exclude hidden issues from search results. If no options are set, use application version profile settings to get value of this option.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showremoved",
            "in": "query",
            "description": "If 'true', include removed issues in search results. If 'false', exclude removed issues from search results. If no options are set, use application version profile settings to get value of this option.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showsuppressed",
            "in": "query",
            "description": "If 'true', include suppressed issues in search results. If 'false', exclude suppressed issues from search results. If no options are set, use application version profile settings to get value of this option.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showshortfilenames",
            "in": "query",
            "description": "If 'true', only short file names will be displayed in issues list.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupingtype",
            "in": "query",
            "description": "groupingtype",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Project version issue group»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/issueSelectorSet": {
      "get": {
        "tags": [
          "issue-selector-set-of-project-version-controller"
        ],
        "summary": "get",
        "operationId": "getIssueSelectorSetOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«IssueFilterSelectorSet»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/issueStatistics": {
      "get": {
        "tags": [
          "issue-statistics-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listIssueStatisticsOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "filterset",
            "in": "query",
            "description": "Filter set to use",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Issue Statistics»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/issueSummaries": {
      "get": {
        "tags": [
          "issue-summary-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listIssueSummaryOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "seriestype",
            "in": "query",
            "description": "seriestype",
            "required": true,
            "type": "string",
            "enum": [
              "APP_NAME",
              "SCAN_PRODUCT",
              "ISSUE_FRIORITY",
              "ISSUE_FOLDER",
              "ISSUE_CORRELATED",
              "SIGN_OFF_STATE",
              "DEFAULT"
            ]
          },
          {
            "name": "groupaxistype",
            "in": "query",
            "description": "List of allowed patterns: APP_NAME, SCAN_DATE, SCAN_PRODUCT, ISSUE_FOLDER, ISSUE_CATEGORY, ISSUE_KINGDOM, ISSUE_FILENAME, ISSUE_FRIORITY, ISSUE_AUDITED, ISSUE_PACKAGE_NAME, ISSUE_CLASS_NAME, ISSUE_FUNCTION_NAME, ISSUE_MAPPED_CATEGORY, FOLDER_FOLDER, ISSUE_{name of issue attribute}, EXTERNALLIST_{external category name}, CUSTOMTAG_{custom tag name}.",
            "required": true,
            "type": "string"
          },
          {
            "name": "audited",
            "in": "query",
            "description": "audited",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "showhidden",
            "in": "query",
            "description": "showhidden",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "showremoved",
            "in": "query",
            "description": "showremoved",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "showsuppressed",
            "in": "query",
            "description": "showsuppressed",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Issue Summary»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/issues": {
      "get": {
        "tags": [
          "issue-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listIssueOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "An issue query expression, must be used together with the 'qm' parameter",
            "required": false,
            "type": "string"
          },
          {
            "name": "qm",
            "in": "query",
            "description": "Syntax mode for the 'q' parameter, mandatory if the 'q' parameter is used",
            "required": false,
            "type": "string",
            "enum": [
              "issues"
            ]
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterset",
            "in": "query",
            "description": "Filter set to use",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "showhidden",
            "in": "query",
            "description": "If 'true', include hidden issues in search results. If 'false', exclude hidden issues from search results. If no options are set, use application version profile settings to get value of this option.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showremoved",
            "in": "query",
            "description": "If 'true', include removed issues in search results. If 'false', exclude removed issues from search results. If no options are set, use application version profile settings to get value of this option.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showsuppressed",
            "in": "query",
            "description": "If 'true', include suppressed issues in search results. If 'false', exclude suppressed issues from search results. If no options are set, use application version profile settings to get value of this option.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showshortfilenames",
            "in": "query",
            "description": "If 'true', only short file names will be displayed in issues list.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupid",
            "in": "query",
            "description": "groupid",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupingtype",
            "in": "query",
            "description": "groupingtype",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated value list of issue ids. If provided, other filtering and ordering parameters can not be used.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Project version issue»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/issues/action/assignUser": {
      "post": {
        "tags": [
          "issue-of-project-version-controller"
        ],
        "summary": "Assign issue to user",
        "operationId": "assignUserForIssueOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueAssignUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«IssueActionResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/issues/action/audit": {
      "post": {
        "tags": [
          "issue-of-project-version-controller"
        ],
        "summary": "Perform an auditing action on the specified issues",
        "operationId": "auditIssueOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueAuditRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«IssueActionResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/issues/action/fileBug": {
      "post": {
        "tags": [
          "issue-of-project-version-controller"
        ],
        "summary": "Submit a bug (defect) for the specified issues in the external bug tracking system (if configured)",
        "operationId": "fileBugForIssueOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueFileBugRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«IssueFileBugResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/issues/action/suppress": {
      "post": {
        "tags": [
          "issue-of-project-version-controller"
        ],
        "summary": "Suppress or unsuppress an issue",
        "operationId": "suppressIssueOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueSuppressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«IssueActionResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/issues/action/updateTag": {
      "post": {
        "tags": [
          "issue-of-project-version-controller"
        ],
        "summary": "Update the custom tag for the specified issues",
        "operationId": "updateTagForIssueOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueUpdateTagRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«IssueActionResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/issues/openSource": {
      "get": {
        "tags": [
          "open-source-issues-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listOpenSourceIssuesOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "filterset",
            "in": "query",
            "description": "Filter set to use",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "showhidden",
            "in": "query",
            "description": "If 'true', include hidden issues in search results. If 'false', exclude hidden issues from search results. If no options are set, use application version profile settings to get value of this option.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showremoved",
            "in": "query",
            "description": "If 'true', include removed issues in search results. If 'false', exclude removed issues from search results. If no options are set, use application version profile settings to get value of this option.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "showsuppressed",
            "in": "query",
            "description": "If 'true', include suppressed issues in search results. If 'false', exclude suppressed issues from search results. If no options are set, use application version profile settings to get value of this option.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«OpenSourceIssue»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/issues/{id}": {
      "get": {
        "tags": [
          "issue-of-project-version-controller"
        ],
        "summary": "read",
        "operationId": "readIssueOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Project version issue»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/performanceIndicatorHistories": {
      "get": {
        "tags": [
          "performance-indicator-history-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listPerformanceIndicatorHistoryOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Performance Indicator History»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/performanceIndicatorHistories/{id}": {
      "get": {
        "tags": [
          "performance-indicator-history-of-project-version-controller"
        ],
        "summary": "read",
        "operationId": "readPerformanceIndicatorHistoryOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Performance Indicator History»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/responsibilities": {
      "get": {
        "tags": [
          "responsibility-assignment-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listResponsibilityAssignmentOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Responsibility Assignment»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "responsibility-assignment-of-project-version-controller"
        ],
        "summary": "updateCollection",
        "operationId": "updateCollectionResponsibilityAssignmentOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Responsibility Assignment"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Responsibility Assignment»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/responsibilities/{guid}": {
      "get": {
        "tags": [
          "responsibility-assignment-of-project-version-controller"
        ],
        "summary": "read",
        "operationId": "readResponsibilityAssignmentOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "guid",
            "in": "path",
            "description": "guid",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Responsibility Assignment»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/resultProcessingRules": {
      "get": {
        "tags": [
          "result-processing-rule-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listResultProcessingRuleOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Result processing rule»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "result-processing-rule-of-project-version-controller"
        ],
        "summary": "updateCollection",
        "operationId": "updateCollectionResultProcessingRuleOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Result processing rule"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Result processing rule»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/sourceFiles": {
      "get": {
        "tags": [
          "source-file-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listSourceFileOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "q",
            "in": "query",
            "description": "The url-encoded value of a source file query expression \"path:&lt;path_to_file_in_quotes&gt;+AND+scan_id:&lt;s_id&gt;\". For example, \"q=path:%22JavaSource%2Forg%2Fowasp%2Fwebgoat%2Flessons%2FCSRF.java%22%2Band%2Bscan_id:1\". If 'scan_id' is not provided, the search defaults to the latest scan of the application version.",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«SourceFileDto»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/userIssueSearchOptions": {
      "get": {
        "tags": [
          "user-issue-search-options-of-project-version-controller"
        ],
        "summary": "get",
        "operationId": "getUserIssueSearchOptionsOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«UserIssueSearchOptions»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "user-issue-search-options-of-project-version-controller"
        ],
        "summary": "update",
        "operationId": "updateUserIssueSearchOptionsOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserIssueSearchOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«UserIssueSearchOptions»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/variableHistories": {
      "get": {
        "tags": [
          "variable-history-of-project-version-controller"
        ],
        "summary": "list",
        "operationId": "listVariableHistoryOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Variable History»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projectVersions/{parentId}/variableHistories/{id}": {
      "get": {
        "tags": [
          "variable-history-of-project-version-controller"
        ],
        "summary": "read",
        "operationId": "readVariableHistoryOfProjectVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Variable History»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "list",
        "operationId": "listProject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search-spec of full text search query (see fulltextsearch parameter)",
            "required": false,
            "type": "string"
          },
          {
            "name": "fulltextsearch",
            "in": "query",
            "description": "If 'true', interpret 'q' parameter as full text search query, defaults to 'false'",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Project»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projects/action/test": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "summary": "Check whether the specified application name is already defined in the system",
        "operationId": "testProject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationNameTestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«ApplicationNameTestResponse»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projects/{id}": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "read",
        "operationId": "readProject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Project»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "project-controller"
        ],
        "summary": "update",
        "operationId": "updateProject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Project»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/projects/{parentId}/versions": {
      "get": {
        "tags": [
          "project-version-of-project-controller"
        ],
        "summary": "list",
        "operationId": "listProjectVersionOfProject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search-spec of full text search query (see fulltextsearch parameter)",
            "required": false,
            "type": "string"
          },
          {
            "name": "fulltextsearch",
            "in": "query",
            "description": "If 'true', interpret 'q' parameter as full text search query, defaults to 'false'",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "description": "includeInactive",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "myAssignedIssues",
            "in": "query",
            "description": "myAssignedIssues",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Project Version»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "project-version-of-project-controller"
        ],
        "summary": "create",
        "operationId": "createProjectVersionOfProject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project Version"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Project Version»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/reportDefinitions": {
      "get": {
        "tags": [
          "report-definition-controller"
        ],
        "summary": "list",
        "operationId": "listReportDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupby",
            "in": "query",
            "description": "Fields to group by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Report Definition»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "report-definition-controller"
        ],
        "summary": "upload",
        "operationId": "uploadReportDefinition",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          },
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": true,
            "type": "string",
            "enum": [
              "PROJECT",
              "SSA_PROJECT",
              "SSA_PORTFOLIO",
              "PORTFOLIO",
              "COMPLIANCE",
              "ISSUE",
              "RUNTIME_REPORTS"
            ]
          },
          {
            "name": "renderingEngine",
            "in": "query",
            "description": "renderingEngine",
            "required": false,
            "type": "string",
            "default": "BIRT"
          },
          {
            "name": "description",
            "in": "query",
            "description": "description",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Report Definition»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "report-definition-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteReportDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/reportDefinitions/{id}": {
      "get": {
        "tags": [
          "report-definition-controller"
        ],
        "summary": "read",
        "operationId": "readReportDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Report Definition»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "report-definition-controller"
        ],
        "summary": "update",
        "operationId": "updateReportDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Report Definition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Report Definition»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "report-definition-controller"
        ],
        "summary": "delete",
        "operationId": "deleteReportDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/reportLibraries": {
      "get": {
        "tags": [
          "report-library-controller"
        ],
        "summary": "list",
        "operationId": "listReportLibrary",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Report Library»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "report-library-controller"
        ],
        "summary": "upload",
        "operationId": "uploadReportLibrary",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          },
          {
            "name": "description",
            "in": "query",
            "description": "description",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Report Library»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "report-library-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteReportLibrary",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/reportLibraries/{id}": {
      "get": {
        "tags": [
          "report-library-controller"
        ],
        "summary": "read",
        "operationId": "readReportLibrary",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Report Library»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "report-library-controller"
        ],
        "summary": "update",
        "operationId": "updateReportLibrary",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Report Library"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Report Library»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "report-library-controller"
        ],
        "summary": "delete",
        "operationId": "deleteReportLibrary",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/reports": {
      "get": {
        "tags": [
          "saved-report-controller"
        ],
        "summary": "list",
        "operationId": "listSavedReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search-spec of full text search query (see fulltextsearch parameter)",
            "required": false,
            "type": "string"
          },
          {
            "name": "fulltextsearch",
            "in": "query",
            "description": "If 'true', interpret 'q' parameter as full text search query, defaults to 'false'",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "embed",
            "in": "query",
            "description": "Fields to embed",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Saved Report»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "saved-report-controller"
        ],
        "summary": "create",
        "operationId": "createSavedReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Saved Report"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Saved Report»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/reports/{id}": {
      "get": {
        "tags": [
          "saved-report-controller"
        ],
        "summary": "read",
        "operationId": "readSavedReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "embed",
            "in": "query",
            "description": "Fields to embed",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Saved Report»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "saved-report-controller"
        ],
        "summary": "delete",
        "operationId": "deleteSavedReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "summary": "list",
        "operationId": "listRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "excludeuseronly",
            "in": "query",
            "description": "excludeuseronly",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Role»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "role-controller"
        ],
        "summary": "create",
        "operationId": "createRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Role»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "role-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/roles/{id}": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "summary": "read",
        "operationId": "readRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Role»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "role-controller"
        ],
        "summary": "update",
        "operationId": "updateRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Role»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "role-controller"
        ],
        "summary": "delete",
        "operationId": "deleteRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/roles/{parentId}/permissions": {
      "get": {
        "tags": [
          "permission-of-role-controller"
        ],
        "summary": "list",
        "operationId": "listPermissionOfRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Permission»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/scans/{id}": {
      "get": {
        "tags": [
          "scan-controller"
        ],
        "summary": "read",
        "operationId": "readScan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Scan»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/seedBundles": {
      "post": {
        "tags": [
          "seed-bundle-controller"
        ],
        "summary": "upload",
        "operationId": "uploadSeedBundle",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/systemConfiguration": {
      "get": {
        "tags": [
          "system-configuration-controller"
        ],
        "summary": "list",
        "operationId": "listSystemConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«System Configuration»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/systemConfiguration/{name}": {
      "get": {
        "tags": [
          "system-configuration-controller"
        ],
        "summary": "read",
        "operationId": "readSystemConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«System Configuration»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/tokenDefinitions": {
      "get": {
        "tags": [
          "token-definition-controller"
        ],
        "summary": "list",
        "operationId": "listTokenDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Token Definition»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/tokens": {
      "get": {
        "tags": [
          "auth-token-controller"
        ],
        "summary": "list",
        "operationId": "listAuthToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Authentication Token»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "Basic": []
          }
        ]
      },
      "post": {
        "tags": [
          "auth-token-controller"
        ],
        "summary": "create",
        "operationId": "createAuthToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "authToken",
            "description": "authToken",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Authentication Token"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Authentication Token»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "Basic": []
          }
        ]
      },
      "delete": {
        "tags": [
          "auth-token-controller"
        ],
        "summary": "Revoke authentication tokens using ONE of two choices: (1) all tokens owned by the requesting user, OR (2) list of token ids.",
        "operationId": "multiDeleteAuthToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "all",
            "in": "query",
            "description": "Specify value 'true' to revoke all authentication tokens of current logged-in user. This parameter can only be used if the 'ids' parameter is not being used.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "Basic": []
          }
        ]
      }
    },
    "/tokens/action/revoke": {
      "post": {
        "tags": [
          "auth-token-controller"
        ],
        "summary": "Revoke authentication tokens by value",
        "operationId": "revokeAuthToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthTokenRevokeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "Basic": []
          }
        ]
      }
    },
    "/tokens/{id}": {
      "put": {
        "tags": [
          "auth-token-controller"
        ],
        "summary": "update",
        "operationId": "updateAuthToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Authentication Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Authentication Token»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "Basic": []
          }
        ]
      },
      "delete": {
        "tags": [
          "auth-token-controller"
        ],
        "summary": "delete",
        "operationId": "deleteAuthToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "Basic": []
          }
        ]
      }
    },
    "/updateRulepacks": {
      "get": {
        "tags": [
          "rulepack-update-controller"
        ],
        "summary": "DoImport",
        "operationId": "doRulepackUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«RulepacksBatchProcessStatus»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/userIssueSearchOptions": {
      "get": {
        "tags": [
          "user-issue-search-options-controller"
        ],
        "summary": "get",
        "operationId": "getUserIssueSearchOptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«UserIssueSearchOptions»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "user-issue-search-options-controller"
        ],
        "summary": "update",
        "operationId": "updateUserIssueSearchOptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserIssueSearchOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«UserIssueSearchOptions»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/userSession/info": {
      "post": {
        "tags": [
          "user-session-info-controller"
        ],
        "summary": "Retrieve the current user's session info. (The 'username' parameter is not yet supported)",
        "operationId": "postUserSessionInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "username",
            "description": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«User session information»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/userSession/prefs": {
      "post": {
        "tags": [
          "user-preferences-controller"
        ],
        "summary": "Retrieve the current user's session preferences. (The 'username' parameter is not yet supported)",
        "operationId": "postUserPreferences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "username",
            "description": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«User preferences»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "user-preferences-controller"
        ],
        "summary": "update",
        "operationId": "updateUserPreferences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User preferences"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«User preferences»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/userSession/state": {
      "get": {
        "tags": [
          "user-session-state-controller"
        ],
        "summary": "list",
        "operationId": "listUserSessionState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«UserSessionState»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "user-session-state-controller"
        ],
        "summary": "put",
        "operationId": "putUserSessionState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resources",
            "description": "resources",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserSessionState"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«UserSessionState»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/validateEquation": {
      "post": {
        "tags": [
          "validate-equation-controller"
        ],
        "summary": "DoValidation",
        "operationId": "doValidateEquation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Validation Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Validation Status»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/validateSearchString": {
      "post": {
        "tags": [
          "validate-search-string-controller"
        ],
        "summary": "DoValidation",
        "operationId": "doValidateSearchString",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Validation Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Validation Status»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/variables": {
      "get": {
        "tags": [
          "variable-controller"
        ],
        "summary": "list",
        "operationId": "listVariable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«Variable»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "variable-controller"
        ],
        "summary": "create",
        "operationId": "createVariable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Variable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«Variable»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "variable-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteVariable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/variables/{id}": {
      "put": {
        "tags": [
          "variable-controller"
        ],
        "summary": "update",
        "operationId": "updateVariable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Variable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Variable»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "variable-controller"
        ],
        "summary": "delete",
        "operationId": "deleteVariable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/webhooks": {
      "get": {
        "tags": [
          "web-hook-definition-controller"
        ],
        "summary": "list",
        "operationId": "listWebHookDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          },
          {
            "name": "q",
            "in": "query",
            "description": "A search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Fields to order by",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«WebHook Definition»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "post": {
        "tags": [
          "web-hook-definition-controller"
        ],
        "summary": "create",
        "operationId": "createWebHookDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "webHookDefinition",
            "description": "webHookDefinition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebHook Definition"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ApiResult«WebHook Definition»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "web-hook-definition-controller"
        ],
        "summary": "multiDelete",
        "operationId": "multiDeleteWebHookDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "A comma-separated list of resource identifiers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/webhooks/{id}": {
      "get": {
        "tags": [
          "web-hook-definition-controller"
        ],
        "summary": "read",
        "operationId": "readWebHookDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Output fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«WebHook Definition»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "web-hook-definition-controller"
        ],
        "summary": "update",
        "operationId": "updateWebHookDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebHook Definition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«WebHook Definition»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "web-hook-definition-controller"
        ],
        "summary": "delete",
        "operationId": "deleteWebHookDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«Void»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/webhooks/{parentId}/history": {
      "get": {
        "tags": [
          "web-hook-history-of-web-hook-controller"
        ],
        "summary": "list",
        "operationId": "listWebHookHistoryOfWebHook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "start",
            "in": "query",
            "description": "A start offset in object listing",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A maximum number of returned objects in listing, if '-1' or '0' no limit is applied",
            "required": false,
            "type": "integer",
            "default": 200,
            "minimum": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«List«WebHook History Item»»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/webhooks/{parentId}/history/action/resend": {
      "post": {
        "tags": [
          "web-hook-history-of-web-hook-controller"
        ],
        "summary": "Resend a history item using current webhook's configuration.",
        "operationId": "resendWebHookHistoryOfWebHook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "resource",
            "description": "resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebHookResendRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«WebHook History Item»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    },
    "/webhooks/{parentId}/history/{id}": {
      "get": {
        "tags": [
          "web-hook-history-of-web-hook-controller"
        ],
        "summary": "read",
        "operationId": "readWebHookHistoryOfWebHook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApiResult«WebHook History»"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ApiResult"
            }
          }
        },
        "security": [
          {
            "FortifyToken": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "Basic": {
      "type": "basic"
    },
    "FortifyToken": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "x-fortify-api-key-prefix": "FortifyToken"
    }
  },
  "definitions": {
    "AATrainingStatus": {
      "type": "object",
      "properties": {
        "lastTrainingTime": {
          "type": "string",
          "format": "date-time"
        },
        "message": {
          "type": "string"
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "NONE",
            "TRAINING_SUBMITTED",
            "TRAINING_FAILED",
            "TRAINING_COMPLETE"
          ]
        },
        "userName": {
          "type": "string"
        }
      },
      "description": "Audit Assistant Training (AATrainingStatus) DTO object."
    },
    "Activity Feed": {
      "type": "object",
      "properties": {
        "authEntity": {
          "description": "Entity",
          "readOnly": true,
          "$ref": "#/definitions/Authentication Entity"
        },
        "detailedNote": {
          "type": "string",
          "readOnly": true
        },
        "entityId": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "eventDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eventType": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "WEBUI_LOGIN_SUCCESS",
            "WEBUI_LOGIN_FAILED",
            "WEBUI_LOGOUT",
            "WEBUI_LOGIN_WITH_NO_ROLE",
            "WS_LOGIN_SUCCESS",
            "WS_LOGIN_FAILED",
            "WS_LOGIN_WITH_NO_ROLE",
            "LOCAL_USER_CREATED",
            "LOCAL_USER_UPDATED",
            "LOCAL_USER_DELETED",
            "LOCAL_USER_FROZEN",
            "AGENT_CREDENTIAL_CREATED",
            "AGENT_CREDENTIAL_UPDATED",
            "AGENT_CREDENTIAL_DELETED",
            "LDAP_ENTITY_CREATED",
            "LDAP_ENTITY_UPDATED",
            "LDAP_ENTITY_DELETED",
            "LDAP_CACHE_REFRESH_REQUESTED",
            "LDAP_CACHE_REFRESH_STARTED",
            "LDAP_CACHE_REFRESH_COMPLETED",
            "PROJECT_VERSION_CREATED",
            "PROJECT_VERSION_CREATED_FROM_PREVIOUS",
            "PROJECT_VERSION_UPDATED",
            "PROJECT_VERSION_DELETED",
            "PROJECT_VERSION_METADATA_UPDATED",
            "PROJECT_VERSION_ACCESS_ADDED",
            "PROJECT_VERSION_ACCESS_REMOVED",
            "PROJECT_VERSION_BUG_TRACKER_UPDATED",
            "SCA_RESULT_PROCESSED",
            "RUNTIME_RESULT_PROCESSED",
            "EXTERNAL_RESULT_PROCESSED",
            "PTA_RESULT_PROCESSED",
            "RTA_RESULT_PROCESSED",
            "ARTIFACT_UPLOAD_REQUESTED",
            "ARTIFACT_UPLOAD_STARTED",
            "ARTIFACT_UPLOAD_COMPLETED",
            "ARTIFACT_UPLOAD_FAILED",
            "ARTIFACT_UPLOAD_CANCELLED",
            "ARTIFACT_DELETE_REQUESTED",
            "ARTIFACT_DELETE_STARTED",
            "ARTIFACT_DELETE_COMPLETED",
            "ARTIFACT_DELETE_FAILED",
            "ARTIFACT_DELETE_CANCELLED",
            "JOB_CANCELLED",
            "ARTIFACT_PURGE_REQUESTED",
            "ARTIFACT_PURGE_REQUEST_STARTED",
            "ARTIFACT_PURGE_COMPLETED",
            "ARTIFACT_PURGE_FAILED",
            "ARTIFACT_PURGE_REQUEST_FINISHED",
            "ARTIFACT_PURGE_CANCELLED",
            "HISTORICAL_SNAPSHOT_COLLECTION_STARTED",
            "HISTORICAL_SNAPSHOT_COLLECTION_ITERATION_COMPLETED",
            "HISTORICAL_SNAPSHOT_COLLECTION_ITERATION_FAILED",
            "HISTORICAL_SNAPSHOT_COLLECTION_NO_UPDATES",
            "AUDIT_PERFORMED",
            "ARTIFACT_UPLOAD_REQUIRES_AUTH",
            "ARTIFACT_UPLOAD_APPROVED",
            "SOURCE_CODE_UPLOADED",
            "FILTERSET_FOLDER_REFRESH_REQUESTED",
            "FILTERSET_FOLDER_REFRESH_COMPLETED",
            "FILTERSET_FOLDER_REFRESH_FAILED",
            "DYNAMIC_SCAN_CREATED",
            "DYNAMIC_SCAN_EDITED",
            "DYNAMIC_SCAN_CANCELED",
            "DYNAMIC_SCAN_COMPLETED",
            "DYNAMIC_SCAN_PICKED_UP",
            "BATCH_BUG_FILING_REQUESTED",
            "BATCH_BUG_FILING_REQUEST_FAILED",
            "BATCH_BUG_FILING_STARTED",
            "BATCH_BUG_FILING_ENDED",
            "BATCH_BUG_FILING_FAILED",
            "BUG_FILED",
            "BUG_FAILED_TO_FILE",
            "BUG_STATE_MANAGEMENT_STARTED",
            "BUG_STATE_MANAGEMENT_ENDED",
            "BUG_STATE_MANAGEMENT_ENDED_WITH_ERRORS",
            "BUG_UPDATED",
            "BUG_FAILED_TO_UPDATE",
            "COMMENT_ADDED_TO_ISSUE",
            "AUDIT_ASSISTANT_ISSUES_SUBMITTED",
            "AUDIT_ASSISTANT_ISSUES_RETRIEVED",
            "AUDIT_ASSISTANT_FPR_UPLOAD_STARTED",
            "AUDIT_ASSISTANT_TRAINING_SENT",
            "AUDIT_ASSISTANT_TEST_CONNECTION_FAILED",
            "AUDIT_ASSISTANT_ISSUES_SUBMIT_FAILED",
            "AUDIT_ASSISTANT_ISSUES_RETRIEVE_FAILED",
            "AUDIT_ASSISTANT_FPR_UPLOAD_FAILED",
            "AUDIT_ASSISTANT_TRAINING_SENT_FAILED",
            "AUDIT_ASSISTANT_PROJECT_PREDICTION_POLICY_CHANGED",
            "AUDIT_ASSISTANT_DEFAULT_PREDICTION_POLICY_CHANGED",
            "AUDIT_ASSISTANT_TAG_MAPPING_CHANGED",
            "AUDIT_ASSISTANT_PREDICTION_POLICIES_REFRESHED",
            "REPORT_GENERATION_REQUESTED",
            "REPORT_GENERATION_COMPLETED",
            "REPORT_GENERATION_FAILED",
            "REPORT_GENERATION_CANCELLED",
            "REPORT_DELETED",
            "RULEPACK_SERVER_UPDATE",
            "RULEPACK_USER_UPLOAD",
            "RULEPACK_DELETED",
            "RULEPACK_DOWNLOAD",
            "RULEPACK_CLIENT_UPDATE",
            "DOCUMENT_ARTIFACT_CREATED",
            "DOCUMENT_ARTIFACT_UPDATED",
            "DOCUMENT_ARTIFACT_DELETED",
            "TASK_INSTANCE_CREATED",
            "TASK_INSTANCE_UPDATED",
            "TASK_INSTANCE_DELETED",
            "TASK_INSTANCE_SIGNOFF_UPDATED",
            "ACTIVITY_INSTANCE_SIGNOFF_UPDATED",
            "REQUIREMENT_INSTANCE_SIGNOFF_UPDATED",
            "REQUIREMENT_TEMPLATE_INSTANCE_SIGNOFF_UPDATED",
            "TASK_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF",
            "ACTIVITY_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF",
            "REQUIREMENT_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF",
            "REQUIREMENT_TEMPLATE_DUE_DATE_PASSED_NO_SIGNOFF",
            "SDL_COMMENT_CREATED",
            "PROJECT_PERSONA_ASSIGNMENT_UPDATED",
            "PERSONA_ASSIGNMENT_UPDATED",
            "WORK_OWNER_UPDATED",
            "DUE_DATE_UPDATED",
            "SESSION_TIMEOUT",
            "REQ_TEMPLATE_CREATED",
            "REQ_TEMPLATE_UPDATED",
            "ACTIVITY_CREATED",
            "ACTIVITY_UPDATED",
            "VARIABLE_CREATED",
            "VARIABLE_UPDATED",
            "VARIABLE_DELETED",
            "MEASUREMENT_AGENT_CREATED",
            "MEASUREMENT_AGENT_UPDATED",
            "MEASUREMENT_AGENT_DELETED",
            "DOCUMENT_DEF_CREATED",
            "DOCUMENT_DEF_UPDATED",
            "PROJECT_TEMPLATE_CREATED",
            "PROJECT_TEMPLATE_UPDATED",
            "PROJECT_TEMPLATE_DELETED",
            "ASSIGNMENT_RULES_UPDATED",
            "PERSONA_CREATED",
            "PERSONA_UPDATED",
            "PERSONA_DELETED",
            "ATTR_CREATED",
            "ATTR_UPDATED",
            "ATTR_DELETED",
            "ATTRIBUTE_DEFINITION_CREATED",
            "ATTRIBUTE_DEFINITION_UPDATED",
            "ATTRIBUTE_DEFINITION_DELETED",
            "PROJECT_VERSION_CUSTOM_TAG_ASSIGNMENT",
            "PROJECT_VERSION_PRIMARY_TAG_UPDATE",
            "REPORT_DEFINITION_CREATED",
            "REPORT_DEFINITION_UPDATED",
            "REPORT_DEFINITION_DELETED",
            "REPORT_LIBRARY_CREATED",
            "REPORT_LIBRARY_UPDATED",
            "REPORT_LIBRARY_DELETED",
            "RUNTIME_HOST_CONNECTED",
            "RUNTIME_HOST_DISCONNECTED",
            "RUNTIME_HOST_CREATED",
            "RUNTIME_HOST_DELETED",
            "RUNTIME_HOST_DISCOVERED",
            "RUNTIME_HOST_ENABLED",
            "RUNTIME_HOST_DISABLED",
            "RUNTIME_HOST_AUTH_RESET",
            "ACCEPT_NEW_HOSTS_ENABLED",
            "ACCEPT_NEW_HOSTS_DISABLED",
            "DISABLED_HOST_CONNECTION",
            "RUNTIME_APPLICATION_ASSIGNMENT_RULES_UPDATED",
            "REAPPLY_APPLICATION_ASSIGNMENT_RULES_REQUESTED",
            "REAPPLY_APPLICATION_ASSIGNMENT_RULES_COMPLETED",
            "REAPPLY_APPLICATION_ASSIGNMENT_RULES_FAILED",
            "RUNTIME_CONFIGURATION_CREATED",
            "RUNTIME_CONFIGURATION_UPDATED",
            "RUNTIME_CONFIGURATION_DELETED",
            "RUNTIME_CONFIGURATION_TEMPLATE_UPDATED",
            "RUNTIME_EH_CREATED",
            "RUNTIME_EH_UPDATED",
            "RUNTIME_EH_DELETED",
            "RUNTIME_SETTINGS_UPDATED",
            "RUNTIME_RULEPACK_CONFIG_UPDATED",
            "RUNTIME_EVENT_RECEIVED",
            "RUNTIME_ALERT_RECEIVED",
            "FEDERATION_CREATED",
            "FEDERATION_UPDATED",
            "FEDERATION_DELETED",
            "RTAPP_CREATED",
            "RTAPP_UPDATED",
            "RTAPP_DELETED",
            "RTAPP_ACCESS_ADDED",
            "RTAPP_ACCESS_REMOVED",
            "USERROLE_CREATED",
            "USERROLE_UPDATED",
            "USERROLE_DELETED",
            "CLOUD_SCAN_POLLED",
            "CLOUD_POOL_CREATED",
            "CLOUD_POOL_UPDATED",
            "CLOUD_POOL_DELETED",
            "CLOUD_POOL_AVS_UPDATED",
            "CLOUD_POOL_SENSORS_UPDATED",
            "CLOUD_JOB_CANCELED",
            "CLOUD_JOB_FPR_DOWNLOADED",
            "CLOUD_JOB_LOG_DOWNLOADED",
            "INDEX_MAINTENANCE_STARTED",
            "INDEX_MAINTENANCE_COMPLETED",
            "FULL_REINDEX_STARTED",
            "FULL_REINDEX_COMPLETED",
            "INDEX_NEW_ISSUES_STARTED",
            "INDEX_NEW_ISSUES_COMPLETED",
            "SSC_CONFIGURATION_UPDATED",
            "LDAP_CONFIG_CREATED",
            "LDAP_CONFIG_UPDATED",
            "LDAP_CONFIG_DELETED",
            "LDAP_CONFIG_DEFAULT_CHANGED",
            "SEED_BUNDLE_UPLOAD_COMPLETED",
            "SEED_BUNDLE_UPLOAD_FAILED",
            "SEED_BUNDLE_COMPLETED",
            "SEED_BUNDLE_FAILED",
            "WEBHOOK_DEFINITION_CREATED",
            "WEBHOOK_DEFINITION_UPDATED",
            "WEBHOOK_DEFINITION_DELETED"
          ]
        },
        "eventTypeDesc": {
          "type": "string",
          "description": "Description",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "userName": {
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Activity Feed DTO object"
    },
    "Alert History Entry": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "alertCustomMessage": {
          "type": "string"
        },
        "alertDefinitionName": {
          "type": "string"
        },
        "alertMessage": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "alert history id",
          "readOnly": true
        },
        "monitoredEntityType": {
          "type": "string"
        },
        "projectAndVersionLabel": {
          "type": "string"
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64"
        },
        "triggeredDate": {
          "type": "string",
          "format": "date-time"
        },
        "userName": {
          "type": "string"
        }
      },
      "description": "Alert history entry contains information about firede alert, like trigger date, user name for which alert was triggered, information abotu alert definition."
    },
    "AlertDefinitionDto": {
      "type": "object",
      "required": [
        "alertTriggers",
        "customMessage",
        "monitoredEntityType",
        "name",
        "recipientType"
      ],
      "properties": {
        "alertAllChildren": {
          "type": "boolean"
        },
        "alertStakeholders": {
          "type": "boolean"
        },
        "alertTriggers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertTriggerDto"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "customMessage": {
          "type": "string",
          "description": "Required field for Scheduled alerts, Optional for other types"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "monitorAllApps": {
          "type": "boolean"
        },
        "monitoredEntityName": {
          "type": "string"
        },
        "monitoredEntityType": {
          "type": "string",
          "enum": [
            "RT_INSTANCE",
            "REQ_INSTANCE",
            "ACTIVITY_INSTANCE",
            "MEASUREMENT_AGENT",
            "VARIABLE",
            "RUNTIME_ALERT",
            "EVENT",
            "SCHEDULED_ALERT"
          ]
        },
        "monitoredInstanceId": {
          "type": "integer",
          "format": "int64"
        },
        "monitorsProjectVersions": {
          "type": "boolean"
        },
        "monitorsRuntimeApp": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "projectVersionIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "recipientType": {
          "type": "string",
          "enum": [
            "ME_ONLY",
            "PROCESS_ENTITY_STAKEHOLDERS",
            "ALL_USERS",
            "ALL_SYSTEM_USERS"
          ]
        },
        "remindPeriodically": {
          "type": "boolean"
        },
        "reminderPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "startAtDueDate": {
          "type": "boolean"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "triggerDescription": {
          "type": "string"
        },
        "triggerDescriptionName": {
          "type": "string"
        },
        "triggerDescriptionOperation": {
          "type": "string"
        },
        "triggerDescriptionValue": {
          "type": "string"
        },
        "userCanModify": {
          "type": "boolean"
        }
      },
      "description": "Alert definitions can include variable or performance indicator to determine when Software Security Center is\nto generate an alert notification in the Todo List on the Dashboard."
    },
    "AlertSetStatusRequest": {
      "type": "object",
      "required": [
        "alertHistoryIds",
        "status"
      ],
      "properties": {
        "alertHistoryIds": {
          "type": "array",
          "description": "Alert history ids to set status",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "status": {
          "type": "string",
          "description": "Status of alerts, classified as read or unread"
        }
      },
      "description": "Request to set status for alerts"
    },
    "AlertTriggerDto": {
      "type": "object",
      "properties": {
        "alertDefinitionId": {
          "type": "integer",
          "format": "int64"
        },
        "monitoredAttribute": {
          "type": "string",
          "enum": [
            "SIGN_OFF_STATE",
            "VALUE_GT",
            "VALUE_LT",
            "VALUE_EQ",
            "VALUE_GTE",
            "VALUE_LTE",
            "EVENT_TYPE",
            "SCHEDULED_ALERT_TIME"
          ]
        },
        "resetAfterTriggering": {
          "type": "boolean"
        },
        "triggeredValue": {
          "type": "string"
        }
      }
    },
    "AlertableEventType": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "enum": [
            "USER_ADMINISTRATION",
            "PV_ADMINISTRATION",
            "PV_ISSUES",
            "REPORT",
            "GENERAL_ADMINISTRATION",
            "GOVERNANCE",
            "RUNTIME_HOST",
            "RUNTIME_FEDERATION",
            "RUNTIME_CONFIGURATION",
            "RUNTIME_APP_ADMINISTRATION",
            "FULLTEXT",
            "CLOUDSCAN"
          ]
        },
        "displayName": {
          "type": "string"
        },
        "eventTypeConstant": {
          "type": "string"
        },
        "scope": {
          "type": "string",
          "enum": [
            "PROJECT_VERSION",
            "NONE"
          ]
        }
      }
    },
    "ApiBulkRequestItem": {
      "type": "object",
      "properties": {
        "httpVerb": {
          "type": "string",
          "enum": [
            "GET",
            "PUT",
            "POST",
            "DELETE"
          ]
        },
        "postData": {
          "type": "object"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "ApiBulkResponseData": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "object"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiBulkResponseItemResponse": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/ApiBulkResponseData"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "requestUrl": {
          "type": "string"
        }
      }
    },
    "ApiResult": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "object"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«AlertDefinitionDto»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/AlertDefinitionDto"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Application State»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Application State"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«ApplicationNameTestResponse»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/ApplicationNameTestResponse"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Array«string»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Artifact»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Artifact"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Attribute Definition»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Attribute Definition"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Attribute»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Attribute"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Authentication Entity»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Authentication Entity"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Authentication Token»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Authentication Token"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«BugFilingRequirementsResponse»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/BugFilingRequirementsResponse"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«BugfieldTemplateGroupDto»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/BugfieldTemplateGroupDto"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«CloudJob»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/CloudJob"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«CloudPoolMapping»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/CloudPoolMapping"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«CloudPoolProjectVersionActionResponse»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/CloudPoolProjectVersionActionResponse"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«CloudPoolWorkerActionResponse»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/CloudPoolWorkerActionResponse"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«CloudPool»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/CloudPool"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«CloudSystemMetrics»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/CloudSystemMetrics"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«CloudSystemPollStatus»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/CloudSystemPollStatus"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«CloudSystemSettings»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/CloudSystemSettings"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«CloudWorker»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/CloudWorker"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«ConfigProperties»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/ConfigProperties"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«ConfigProperty»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/ConfigProperty"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«CurrentAuthenticationInfo»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/CurrentAuthenticationInfo"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Custom tag»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Custom tag"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«DynamicScanRequestTemplate»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/DynamicScanRequestTemplate"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«DynamicScanRequestsSummary»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/DynamicScanRequestsSummary"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«DynamicScanRequest»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/DynamicScanRequest"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Feature»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Feature"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«File token»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/File token"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Folder»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Folder"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«IID Migration»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/IID Migration"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Issue Assignment»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Issue Assignment"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Issue Attachment»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Issue Attachment"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Issue Audit Comment»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Issue Audit Comment"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Issue Template»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Issue Template"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«IssueActionResponse»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/IssueActionResponse"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«IssueAgingPortlet»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/IssueAgingPortlet"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«IssueFileBugResponse»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/IssueFileBugResponse"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«IssueFilterSelectorSet»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/IssueFilterSelectorSet"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«IssueViewTemplate»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/IssueViewTemplate"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Job»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Job"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«LDAP entity»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/LDAP entity"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«LdapRefreshResponse»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/LdapRefreshResponse"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«LdapServerDto»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/LdapServerDto"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«License»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/License"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«AATrainingStatus»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AATrainingStatus"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Activity Feed»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Activity Feed"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Alert History Entry»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert History Entry"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«AlertDefinitionDto»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertDefinitionDto"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«AlertableEventType»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertableEventType"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Artifact»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Attribute Definition»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute Definition"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Attribute»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«AuditAssistantStatus»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuditAssistantStatus"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Authentication Entity»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Authentication Entity"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Authentication Token»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Authentication Token"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Bug Tracker»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Bug Tracker"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«BugFilingRequirements»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BugFilingRequirements"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«BugfieldTemplateGroupDto»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BugfieldTemplateGroupDto"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Bulk Response Item»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Bulk Response Item"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«CloudJob»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudJob"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«CloudPoolMapping»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudPoolMapping"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«CloudPool»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudPool"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«CloudWorker»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudWorker"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Custom tag»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Custom tag"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Dashboard Version»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dashboard Version"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Data Export»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Data Export"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«DynamicScanRequest»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DynamicScanRequest"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Engine type»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Engine type"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«EventLog»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventLog"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Feature»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Filter Set»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter Set"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Folder»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Folder"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«IID Migration»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IID Migration"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Issue Assignment»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue Assignment"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Issue Attachment»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue Attachment"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Issue Audit Comment»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue Audit Comment"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Issue Statistics»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue Statistics"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Issue Summary»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue Summary"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Issue Template»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Issue Template"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«IssueAgingDto»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueAgingDto"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«IssueAgingGroupDto»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueAgingGroupDto"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«IssueAuditHistoryDto»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueAuditHistoryDto"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«IssueViewTemplate»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueViewTemplate"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«JobPriorityChangeCategoryWarning»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobPriorityChangeCategoryWarning"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Job»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«LDAP entity»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LDAP entity"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«LdapServerDto»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LdapServerDto"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Local User»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Local User"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«OpenSourceIssue»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenSourceIssue"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Performance Indicator History»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Performance Indicator History"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«PerformanceIndicator»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerformanceIndicator"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Permission»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Plugin Meta Data»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Plugin Meta Data"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Project Version»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project Version"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Project version bug tracker»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project version bug tracker"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Project version issue details»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project version issue details"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Project version issue group»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project version issue group"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Project version issue»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project version issue"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Project»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Report Definition»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Report Definition"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Report Library»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Report Library"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Responsibility Assignment»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Responsibility Assignment"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Result processing rule»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Result processing rule"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Role»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Rulepack Core»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rulepack Core"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«RulepackStatus»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RulepackStatus"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«RulepacksBatchProcessStatus»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RulepacksBatchProcessStatus"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Saved Report»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Saved Report"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Scan»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Scan"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«SourceFileDto»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceFileDto"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«System Configuration»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/System Configuration"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Token Definition»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Token Definition"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«UserSessionState»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserSessionState"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Variable History»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable History"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«Variable»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«WebHook Definition»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebHook Definition"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«WebHook History Item»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebHook History Item"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«List«scan error»»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/scan error"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Local User»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Local User"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«PasswordStrengthCheckResponse»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/PasswordStrengthCheckResponse"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Performance Indicator History»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Performance Indicator History"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«PerformanceIndicator»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/PerformanceIndicator"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Permission»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Permission"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Plugin Localization»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Plugin Meta Data»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Plugin Meta Data"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Project Version»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Project Version"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Project version issue details»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Project version issue details"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Project version issue»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Project version issue"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«ProjectVersionRefreshResponse»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/ProjectVersionRefreshResponse"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«ProjectVersionTestResponse»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/ProjectVersionTestResponse"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Project»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Project"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«RefreshAuditAssistantPoliciesRequest»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/RefreshAuditAssistantPoliciesRequest"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Report Definition»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Report Definition"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Report Library»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Report Library"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Responsibility Assignment»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Responsibility Assignment"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Role»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Role"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Saved Report»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Saved Report"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Scan»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Scan"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«SearchIndexStatus»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/SearchIndexStatus"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«System Configuration»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/System Configuration"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«User preferences»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/User preferences"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«User session information»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/User session information"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«UserIssueSearchOptions»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/UserIssueSearchOptions"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Validation Status»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Validation Status"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Variable History»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Variable History"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Variable»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/Variable"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«Void»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«WebHook Definition»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/WebHook Definition"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«WebHook History Item»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/WebHook History Item"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResult«WebHook History»": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "$ref": "#/definitions/WebHook History"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "responseCode": {
          "type": "integer",
          "format": "int32"
        },
        "stackTrace": {
          "type": "string"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Application State": {
      "type": "object",
      "properties": {
        "autoConfigurationMode": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether SSC application is in auto configuration mode",
          "readOnly": true
        },
        "configVisitRequired": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether a config visit is needed",
          "readOnly": true
        },
        "maintenanceMode": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether SSC application is in maintenance mode"
        },
        "restartRequired": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether a restart is needed",
          "readOnly": true
        }
      },
      "description": "Application state DTO object"
    },
    "ApplicationNameTestRequest": {
      "type": "object",
      "required": [
        "applicationName"
      ],
      "properties": {
        "applicationName": {
          "type": "string",
          "description": "application name to test"
        }
      },
      "description": "Request to test whether application with provided name exists"
    },
    "ApplicationNameTestResponse": {
      "type": "object",
      "properties": {
        "found": {
          "type": "boolean",
          "example": false,
          "description": "If application founds",
          "readOnly": true
        }
      },
      "description": "Response of testing whether application exists"
    },
    "Artifact": {
      "type": "object",
      "properties": {
        "_embed": {
          "$ref": "#/definitions/EmbeddedScans"
        },
        "allowApprove": {
          "type": "boolean"
        },
        "allowDelete": {
          "type": "boolean"
        },
        "allowPurge": {
          "type": "boolean"
        },
        "approvalComment": {
          "type": "string"
        },
        "approvalDate": {
          "type": "string",
          "format": "date-time"
        },
        "approvalUsername": {
          "type": "string"
        },
        "artifactType": {
          "type": "string",
          "enum": [
            "",
            "Fpr",
            "FprPreProcess",
            "AnalysisArtifact",
            "SourceArchive",
            "RuntimeEventLog"
          ]
        },
        "auditUpdated": {
          "type": "boolean"
        },
        "fileName": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "fileURL": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Artifact id",
          "readOnly": true
        },
        "inModifyingStatus": {
          "type": "boolean"
        },
        "indexed": {
          "type": "boolean"
        },
        "lastScanDate": {
          "type": "string",
          "format": "date-time"
        },
        "messageCount": {
          "type": "integer",
          "format": "int64"
        },
        "messages": {
          "type": "string"
        },
        "originalFileName": {
          "type": "string"
        },
        "otherStatus": {
          "type": "string",
          "enum": [
            "",
            "NotExist",
            "Ignored",
            "Processed"
          ]
        },
        "purged": {
          "type": "boolean"
        },
        "runtimeStatus": {
          "type": "string",
          "enum": [
            "",
            "NotExist",
            "Ignored",
            "Processed"
          ]
        },
        "scaStatus": {
          "type": "string",
          "enum": [
            "",
            "NotExist",
            "Ignored",
            "Processed"
          ]
        },
        "scanErrorsCount": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "NONE",
            "SCHED_PROCESSING",
            "PROCESSING",
            "PROCESS_COMPLETE",
            "ERROR_PROCESSING",
            "REQUIRE_AUTH",
            "DELETING",
            "ERROR_DELETING",
            "DELETED",
            "PURGING",
            "PURGED",
            "ERROR_PURGING",
            "DISPATCH_ANALYSIS",
            "DISPATCH_REAUDIT",
            "ERROR_DISPATCH",
            "QUEUED_ANALYSIS",
            "REQUEUED_ANALYSIS",
            "ANALYZING",
            "ANALYSIS_COMPLETE",
            "ERROR_ANALYZING",
            "UNKNOWN",
            "AUDIT_FAILED",
            "AUTH_DENIED"
          ]
        },
        "uploadDate": {
          "type": "string",
          "format": "date-time"
        },
        "uploadIP": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "versionNumber": {
          "type": "integer",
          "format": "int32"
        },
        "webInspectStatus": {
          "type": "string",
          "enum": [
            "",
            "NotExist",
            "Ignored",
            "Processed"
          ]
        }
      },
      "description": "Application version artifact that contains scan results."
    },
    "ArtifactApproveRequest": {
      "type": "object",
      "required": [
        "artifactIds",
        "comment"
      ],
      "properties": {
        "artifactIds": {
          "type": "array",
          "description": "List containing single artifact ID to approve",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "comment": {
          "type": "string",
          "description": "Approval comments"
        }
      },
      "description": "Request to approve artifact"
    },
    "ArtifactPurgeRequest": {
      "type": "object",
      "required": [
        "artifactIds"
      ],
      "properties": {
        "artifactIds": {
          "type": "array",
          "description": "List containing single artifact ID to purge",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "Request to purge artifacts"
    },
    "AssignedUser": {
      "type": "object",
      "required": [
        "hasAccess",
        "userName"
      ],
      "properties": {
        "hasAccess": {
          "type": "boolean",
          "example": false,
          "description": "whether the assigned user currently has access to the application version in current context",
          "readOnly": true
        },
        "userName": {
          "type": "string",
          "description": "username assigned to issue",
          "readOnly": true
        }
      },
      "description": "user assigned to issue"
    },
    "Attribute": {
      "type": "object",
      "required": [
        "attributeDefinitionId",
        "value",
        "values"
      ],
      "properties": {
        "attributeDefinitionId": {
          "type": "integer",
          "format": "int64",
          "description": "ID required when referencing an existing Attribute Definition."
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "ID required when referencing an existing Attribute.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "Attribute value - should be set if Attribute Definition type is NUMBER/STRING/BOOLEAN/DATE/FILE"
        },
        "values": {
          "type": "array",
          "description": "Attribute Options associated with Attribute Definition with type=SINGLE/MULTIPLE",
          "items": {
            "$ref": "#/definitions/Attribute Option"
          }
        }
      },
      "description": "Attribute DTO object."
    },
    "Attribute Definition": {
      "type": "object",
      "required": [
        "appEntityType",
        "category",
        "guid",
        "hasDefault",
        "name",
        "required",
        "systemUsage",
        "type"
      ],
      "properties": {
        "appEntityType": {
          "type": "string",
          "description": "Application Entity Type",
          "enum": [
            "PROJECT_VERSION",
            "NONE"
          ]
        },
        "category": {
          "type": "string",
          "description": "Attribute Definition Category",
          "enum": [
            "TECHNICAL",
            "BUSINESS",
            "DYNAMIC_SCAN_REQUEST",
            "ORGANIZATION"
          ]
        },
        "description": {
          "type": "string"
        },
        "guid": {
          "type": "string",
          "description": "Unique string identifier for this Attribute Definition"
        },
        "hasDefault": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if this Attribute Definition should be the default"
        },
        "hidden": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if this Attribute Definition is hidden"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "ID required when referencing an existing Attribute Definition",
          "readOnly": true
        },
        "inUse": {
          "type": "boolean",
          "example": false,
          "description": "True when Attribute Definition is associated with one or more application versions"
        },
        "isDeletable": {
          "type": "boolean",
          "example": false,
          "description": "True if this Attribute Definition can be deleted with force parameter",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32"
        },
        "options": {
          "type": "array",
          "description": "List of options (i.e. values) associated with this Attribute Definition",
          "items": {
            "$ref": "#/definitions/Attribute Option"
          }
        },
        "publishVersion": {
          "type": "integer",
          "format": "int32"
        },
        "required": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if this Attribute Definition is required"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "systemUsage": {
          "type": "string",
          "description": "System Usage Type",
          "enum": [
            "HP_DEFINED_DELETABLE",
            "HP_DEFINED_NON_DELETABLE",
            "USER_DEFINED_DELETABLE",
            "USER_DEFINED_NON_DELETABLE"
          ]
        },
        "type": {
          "type": "string",
          "description": "Attribute Definition Type",
          "enum": [
            "TEXT",
            "SINGLE",
            "MULTIPLE",
            "LONG_TEXT",
            "SENSITIVE_TEXT",
            "BOOLEAN",
            "INTEGER",
            "DATE",
            "FILE"
          ]
        }
      },
      "description": "Attribute Definition DTO object."
    },
    "Attribute Option": {
      "type": "object",
      "required": [
        "guid",
        "id",
        "index",
        "name",
        "projectMetaDataDefId"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "guid": {
          "type": "string",
          "description": "Unique string identifier for an Attribute Option"
        },
        "hidden": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if this option is to be hidden"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "ID required with referencing an existing Attribute Option"
        },
        "inUse": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if this option is being used"
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "Index of this option in list of options"
        },
        "name": {
          "type": "string",
          "description": "Name"
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32"
        },
        "projectMetaDataDefId": {
          "type": "integer",
          "format": "int64",
          "description": "ID of Attribute Definition this option is associated with"
        },
        "publishVersion": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Attribute Option DTO object"
    },
    "AuditAssistantStatus": {
      "type": "object",
      "properties": {
        "fprFilePath": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64"
        },
        "serverId": {
          "type": "integer",
          "format": "int64"
        },
        "serverStatus": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string",
          "enum": [
            "NONE",
            "PRE_PREDICT_FAILURE",
            "PREDICT_QUEUED",
            "PREDICT_PREP",
            "PREDICT_SUBMITTED",
            "PREDICT_COMPLETE",
            "PREDICT_FAILED",
            "PREDICTIONS_RETRIEVING",
            "PREDICTIONS_RETRIEVED",
            "PREDICTIONS_RETRIEVE_FAILED",
            "UPLOAD_FPR_FAILED"
          ]
        },
        "userName": {
          "type": "string"
        }
      },
      "description": "AuditAssistantStatus DTO object"
    },
    "AuthTokenRevokeRequest": {
      "type": "object",
      "required": [
        "tokens"
      ],
      "properties": {
        "tokens": {
          "type": "array",
          "description": "A list of tokens (atleast one) to revoke",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Request for revoking tokens by value"
    },
    "Authentication Entity": {
      "type": "object",
      "properties": {
        "_embed": {
          "$ref": "#/definitions/EmbeddedRoles"
        },
        "displayName": {
          "type": "string",
          "description": "Display Name supports the use of wildcard matching. So, for example, \"L*\" will match Lando Calrissian and Lara Croft."
        },
        "email": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Authentication entity id",
          "readOnly": true
        },
        "isLdap": {
          "type": "boolean"
        },
        "lastName": {
          "type": "string"
        },
        "ldapDn": {
          "type": "string",
          "description": "Distinguished Name (DN) that is only set for LDAP user accounts"
        },
        "type": {
          "type": "string"
        },
        "userPhoto": {
          "$ref": "#/definitions/User photo"
        }
      },
      "description": "A user account that can be used to authenticate in SSC. There are currently two types of user accounts that fall into this category: SSC users and LDAP users registered with SSC."
    },
    "Authentication Token": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "example": "2017-09-22T19:08:42.000+0000",
          "description": "Date and time the token was created (in ISO 8601 format)",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Purpose for which the token was requested."
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Unique identifier of token",
          "readOnly": true
        },
        "remainingUsages": {
          "type": "integer",
          "format": "int32",
          "description": "The remaining number of api calls that can be made using this token. A value of -1 denotes unlimited number of calls.",
          "readOnly": true
        },
        "terminalDate": {
          "type": "string",
          "format": "date-time",
          "example": "2017-11-29T22:40:11.000+0000",
          "description": "Date and time the token expires (in ISO 8601 format). If not specified, it will default to the maximum lifetime for this token type."
        },
        "token": {
          "type": "string",
          "description": "String that represents the authentication token. (For security reasons, this value is null except for a successful token creation response.)",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "UnifiedLoginToken",
          "description": "Token type"
        },
        "username": {
          "type": "string",
          "description": "Username of token owner",
          "readOnly": true
        }
      },
      "description": "Token to use for authentication"
    },
    "Bug Tracker": {
      "type": "object",
      "required": [
        "authenticationRequired",
        "pluginClassName",
        "pluginId",
        "shortDisplayName"
      ],
      "properties": {
        "authenticationRequired": {
          "type": "boolean",
          "example": false,
          "description": "Authentication required"
        },
        "bugTrackerConfigs": {
          "type": "array",
          "description": "Bug tracker configuration",
          "items": {
            "$ref": "#/definitions/Bug Tracker Configuration"
          }
        },
        "id": {
          "type": "string",
          "description": "Bug tracker identifier",
          "readOnly": true
        },
        "longDisplayName": {
          "type": "string",
          "description": "Long display name"
        },
        "pluginClassName": {
          "type": "string",
          "description": "Class name"
        },
        "pluginId": {
          "type": "string",
          "description": "Bug tracker plugin identifier"
        },
        "shortDisplayName": {
          "type": "string",
          "description": "Short display name"
        }
      },
      "description": "Bug tracker DTO object"
    },
    "Bug Tracker Configuration": {
      "type": "object",
      "required": [
        "description",
        "displayLabel",
        "identifier",
        "required",
        "value"
      ],
      "properties": {
        "description": {
          "type": "string",
          "description": "Description"
        },
        "displayLabel": {
          "type": "string",
          "description": "Configuration name"
        },
        "identifier": {
          "type": "string",
          "description": "Identifier"
        },
        "required": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if configuration is required"
        },
        "value": {
          "type": "string",
          "description": "Configuration value"
        }
      },
      "description": "Bug tracker Configuration DTO object"
    },
    "BugFilingRequirements": {
      "type": "object",
      "properties": {
        "bugParams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BugParam"
          }
        },
        "bugTrackerLongDisplayName": {
          "type": "string"
        },
        "bugTrackerShortDisplayName": {
          "type": "string"
        },
        "requiresAuthentication": {
          "type": "boolean"
        }
      }
    },
    "BugFilingRequirementsRequest": {
      "type": "object",
      "required": [
        "password",
        "username"
      ],
      "properties": {
        "password": {
          "type": "string",
          "description": "Password"
        },
        "username": {
          "type": "string",
          "description": "Username"
        }
      },
      "description": "Request of credentials required to file the bug"
    },
    "BugFilingRequirementsResponse": {
      "type": "object",
      "properties": {
        "bugFilingRequirements": {
          "description": "Requirements to file the bugs",
          "readOnly": true,
          "$ref": "#/definitions/BugFilingRequirements"
        }
      },
      "description": "Response of validating connection credentials and returns bug filing requirements"
    },
    "BugParam": {
      "type": "object",
      "properties": {
        "bugParamType": {
          "type": "string",
          "enum": [
            "BUGPARAM_TEXT",
            "BUGPARAM_TEXTAREA",
            "BUGPARAM_CHOICE"
          ]
        },
        "choiceList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "displayLabel": {
          "type": "string"
        },
        "hasDependentParams": {
          "type": "boolean"
        },
        "identifier": {
          "type": "string"
        },
        "maxLength": {
          "type": "integer",
          "format": "int32"
        },
        "required": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BugStateManagementCfg": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "password": {
          "type": "string"
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "BugTrackerRequest": {
      "type": "object",
      "required": [
        "testPlugin"
      ],
      "properties": {
        "testPlugin": {
          "description": "Bugtracker plugin information to test connection",
          "$ref": "#/definitions/Project version bug tracker"
        }
      },
      "description": "Request to test bugtracker plugin connection"
    },
    "BugfieldTemplateDto": {
      "type": "object",
      "required": [
        "fieldName"
      ],
      "properties": {
        "fieldName": {
          "type": "string",
          "description": "unique name of bugfield template."
        },
        "fieldValue": {
          "type": "string",
          "description": "description for bugfield template ."
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "unique identifier of bugfield template.",
          "readOnly": true
        }
      },
      "description": "Bugfield Template"
    },
    "BugfieldTemplateGroupDto": {
      "type": "object",
      "required": [
        "bugTrackerPluginId",
        "deletable",
        "name",
        "objectVersion",
        "valueList"
      ],
      "properties": {
        "bugTrackerPluginId": {
          "type": "string",
          "description": "Identifier of the bug tracker plugin associated with this template group.",
          "readOnly": true
        },
        "deletable": {
          "type": "boolean",
          "example": false,
          "description": "Flag that says if bugfield template group can be deleted.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "description for bugfield template group."
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "unique identifier of bugfield template group.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "short name of associated bug tracker plugin. (May be null if plugin is not currently enabled.)"
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32",
          "description": "version of bugfield template group stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
          "readOnly": true
        },
        "valueList": {
          "type": "array",
          "description": "Collection of all templates belonging to this bugfield template group.",
          "items": {
            "$ref": "#/definitions/BugfieldTemplateDto"
          }
        }
      },
      "description": "Bugfield Template Group"
    },
    "Bulk Request Data": {
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "description": "A list of bulk request items that represents requests that could have been issued independently (or use HATEOAS \"response\" scheme requests that map to individual requests).",
          "items": {
            "$ref": "#/definitions/ApiBulkRequestItem"
          }
        }
      }
    },
    "Bulk Response Item": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/ApiBulkRequestItem"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiBulkResponseItemResponse"
          }
        }
      }
    },
    "CloudJob": {
      "type": "object",
      "properties": {
        "cloudPool": {
          "$ref": "#/definitions/CloudPool"
        },
        "cloudWorker": {
          "$ref": "#/definitions/CloudWorker"
        },
        "jobCancellable": {
          "type": "boolean"
        },
        "jobDuration": {
          "type": "integer",
          "format": "int64"
        },
        "jobExpiryTime": {
          "type": "string",
          "format": "date-time"
        },
        "jobFinishedTime": {
          "type": "string",
          "format": "date-time"
        },
        "jobHasFpr": {
          "type": "boolean"
        },
        "jobHasLog": {
          "type": "boolean"
        },
        "jobQueuedTime": {
          "type": "string",
          "format": "date-time"
        },
        "jobStartedTime": {
          "type": "string",
          "format": "date-time"
        },
        "jobState": {
          "type": "string"
        },
        "jobToken": {
          "type": "string",
          "readOnly": true
        },
        "projectId": {
          "type": "integer",
          "format": "int64"
        },
        "projectName": {
          "type": "string"
        },
        "pvId": {
          "type": "integer",
          "format": "int64"
        },
        "pvName": {
          "type": "string"
        },
        "queuedDuration": {
          "type": "integer",
          "format": "int64"
        },
        "scaArgs": {
          "type": "string"
        },
        "scaBuildId": {
          "type": "string"
        },
        "scaVersion": {
          "type": "string"
        },
        "scanDuration": {
          "type": "integer",
          "format": "int64"
        },
        "submitterEmail": {
          "type": "string"
        },
        "submitterIpAddress": {
          "type": "string"
        },
        "submitterUserName": {
          "type": "string"
        }
      },
      "description": "ScanCentral job"
    },
    "CloudJobCancelRequest": {
      "type": "object",
      "required": [
        "jobTokens"
      ],
      "properties": {
        "jobTokens": {
          "type": "array",
          "description": "List containing single ScanCentral token to cancel",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Request to cancel ScanCentral jobs"
    },
    "CloudPool": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "childOfGlobalPool": {
          "type": "boolean",
          "example": false
        },
        "description": {
          "type": "string",
          "description": "ScanCentral pool description"
        },
        "isDeletable": {
          "type": "boolean",
          "example": false,
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "ScanCentral pool name"
        },
        "path": {
          "type": "string",
          "description": "ScanCentral pool path",
          "readOnly": true
        },
        "stats": {
          "readOnly": true,
          "$ref": "#/definitions/CloudPoolStats"
        },
        "uuid": {
          "type": "string",
          "description": "ScanCentral pool UUID",
          "readOnly": true
        }
      },
      "description": "ScanCentral worker pool"
    },
    "CloudPoolMapping": {
      "type": "object",
      "properties": {
        "cloudPool": {
          "$ref": "#/definitions/CloudPool"
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Application version to ScanCentral pool mapping"
    },
    "CloudPoolProjectVersionActionResponse": {
      "type": "object",
      "properties": {
        "projectVersionIds": {
          "type": "array",
          "description": "List of application version ids",
          "readOnly": true,
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "Result of cloud pool actions relating to application versions"
    },
    "CloudPoolProjectVersionAssignRequest": {
      "type": "object",
      "required": [
        "projectVersionIds"
      ],
      "properties": {
        "projectVersionIds": {
          "type": "array",
          "description": "List of application version ids to assign to cloud pool",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "Request to assign application versions to the cloud pool"
    },
    "CloudPoolProjectVersionReplaceRequest": {
      "type": "object",
      "required": [
        "projectVersionIds"
      ],
      "properties": {
        "projectVersionIds": {
          "type": "array",
          "description": "List of application version ids to replace in cloud pool",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "Request to replace application versions in the cloud pool"
    },
    "CloudPoolStats": {
      "type": "object",
      "properties": {
        "activeWorkerCount": {
          "type": "integer",
          "format": "int64"
        },
        "idleWorkerCount": {
          "type": "integer",
          "format": "int64"
        },
        "inactiveWorkerCount": {
          "type": "integer",
          "format": "int64"
        },
        "pendingJobCount": {
          "type": "integer",
          "format": "int64"
        },
        "processingWorkerCount": {
          "type": "integer",
          "format": "int64"
        },
        "projectVersionCount": {
          "type": "integer",
          "format": "int64"
        },
        "runningJobCount": {
          "type": "integer",
          "format": "int64"
        },
        "staleWorkerCount": {
          "type": "integer",
          "format": "int64"
        },
        "totalWorkerCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "ScanCentral worker pool statistics"
    },
    "CloudPoolWorkerActionResponse": {
      "type": "object",
      "properties": {
        "workerUuids": {
          "type": "array",
          "description": "ScanCentral worker uuids",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Result of ScanCentral workers related actions"
    },
    "CloudPoolWorkerAssignRequest": {
      "type": "object",
      "required": [
        "workerUuids"
      ],
      "properties": {
        "workerUuids": {
          "type": "array",
          "description": "List of worker UUIds to assign to the cloud pool",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Request to assign cloud workers to cloud pool"
    },
    "CloudPoolWorkerDisableRequest": {
      "type": "object",
      "required": [
        "workerUuids"
      ],
      "properties": {
        "workerUuids": {
          "type": "array",
          "description": "List of worker UUIds to disable from the cloud pool",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Request to disable workers from the cloud pool"
    },
    "CloudPoolWorkerReplaceRequest": {
      "type": "object",
      "required": [
        "workerUuids"
      ],
      "properties": {
        "workerUuids": {
          "type": "array",
          "description": "List of worker UUIds to replace in the cloud pool",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Request to replace workers in the cloud pool"
    },
    "CloudScanConfig": {
      "type": "object",
      "properties": {
        "cloudScanEnabled": {
          "type": "boolean"
        }
      },
      "description": "ScanCentral Config DTO object"
    },
    "CloudSystemMetrics": {
      "type": "object",
      "required": [
        "controllerDiskFree",
        "controllerDiskUsed",
        "controllerStartTime"
      ],
      "properties": {
        "controllerDiskFree": {
          "type": "integer",
          "format": "int64",
          "description": "Free disk space in controller's job directory [bytes]",
          "readOnly": true
        },
        "controllerDiskUsed": {
          "type": "integer",
          "format": "int64",
          "description": "Disk space used by files in controller's job directory [bytes]",
          "readOnly": true
        },
        "controllerStartTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      },
      "description": "ScanCentral system metrics"
    },
    "CloudSystemPollStatus": {
      "type": "object",
      "required": [
        "lastPollSuccessful",
        "lastPollTime",
        "lastSuccessfulPollTime"
      ],
      "properties": {
        "lastPollSuccessful": {
          "type": "boolean",
          "example": false,
          "readOnly": true
        },
        "lastPollTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastSuccessfulPollTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      },
      "description": "ScanCentral system poll status"
    },
    "CloudSystemSettings": {
      "type": "object",
      "required": [
        "cleanupPeriodSeconds",
        "controllerMaxUploadSize",
        "controllerSystemUrl",
        "controllerSystemVersion",
        "isSscLockdownMode",
        "jobExpiryDelaySeconds",
        "poolMappingMode",
        "smtpFromAddress",
        "smtpHost",
        "smtpPort",
        "sscUrl",
        "workerExpiryDelaySeconds",
        "workerInactiveDelaySeconds",
        "workerStaleDelaySeconds"
      ],
      "properties": {
        "cleanupPeriodSeconds": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "controllerMaxUploadSize": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "controllerSystemUrl": {
          "type": "string",
          "readOnly": true
        },
        "controllerSystemVersion": {
          "type": "string",
          "readOnly": true
        },
        "isSscLockdownMode": {
          "type": "boolean",
          "example": false,
          "readOnly": true
        },
        "jobExpiryDelaySeconds": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "poolMappingMode": {
          "type": "string",
          "readOnly": true
        },
        "smtpFromAddress": {
          "type": "string",
          "readOnly": true
        },
        "smtpHost": {
          "type": "string",
          "readOnly": true
        },
        "smtpPort": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "sscUrl": {
          "type": "string",
          "readOnly": true
        },
        "workerExpiryDelaySeconds": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "workerInactiveDelaySeconds": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "workerStaleDelaySeconds": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      },
      "description": "ScanCentral system settings"
    },
    "CloudWorker": {
      "type": "object",
      "required": [
        "availableProcessors",
        "cloudPool",
        "hostName",
        "ipAddress",
        "lastActivity",
        "lastSeen",
        "osArchitecture",
        "osName",
        "osVersion",
        "processUuid",
        "scaVersion",
        "state",
        "totalPhysicalMemory",
        "uuid",
        "vmName",
        "workerExpiryTime",
        "workerStartTime"
      ],
      "properties": {
        "availableProcessors": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "cloudPool": {
          "readOnly": true,
          "$ref": "#/definitions/CloudPool"
        },
        "hostName": {
          "type": "string",
          "readOnly": true
        },
        "ipAddress": {
          "type": "string",
          "readOnly": true
        },
        "lastActivity": {
          "type": "string",
          "readOnly": true
        },
        "lastSeen": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "osArchitecture": {
          "type": "string",
          "readOnly": true
        },
        "osName": {
          "type": "string",
          "readOnly": true
        },
        "osVersion": {
          "type": "string",
          "readOnly": true
        },
        "processUuid": {
          "type": "string",
          "readOnly": true
        },
        "scaVersion": {
          "type": "string",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "readOnly": true
        },
        "totalPhysicalMemory": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "uuid": {
          "type": "string",
          "readOnly": true
        },
        "vmName": {
          "type": "string",
          "readOnly": true
        },
        "workerExpiryTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "workerStartTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      },
      "description": "ScanCentral worker"
    },
    "ConfigProperties": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "array",
          "description": "Collection of configuration properties defined in the system",
          "items": {
            "$ref": "#/definitions/ConfigProperty"
          }
        }
      },
      "description": "Collection of SSC application configuration properties"
    },
    "ConfigProperty": {
      "type": "object",
      "required": [
        "name",
        "value",
        "version"
      ],
      "properties": {
        "appliedAfterRestarting": {
          "type": "boolean",
          "example": false,
          "description": "Should the SSC server be restarted after changing value of the property to apply the changes.",
          "readOnly": true
        },
        "configPropertyValueValidation": {
          "description": "Meta information about how the property's value should be validated on the client side.",
          "readOnly": true,
          "$ref": "#/definitions/ConfigPropertyValueValidation"
        },
        "description": {
          "type": "string",
          "description": "Property description.",
          "readOnly": true
        },
        "group": {
          "type": "string",
          "description": "Parent group name the property belongs to.",
          "readOnly": true
        },
        "groupSwitchEnabled": {
          "type": "boolean",
          "example": false,
          "description": "Flag is set to TRUE if property is allowed to be edited on UI.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Configuration property unique name.",
          "readOnly": true
        },
        "propertyType": {
          "type": "string",
          "description": "Property value type.",
          "readOnly": true,
          "enum": [
            "BOOLEAN",
            "INTEGER",
            "STRING",
            "STRINGMULTILINE",
            "OPTIONLIST",
            "DYNAMIC_OPTIONLIST",
            "ENCODED",
            "ENCODEDHIDDEN",
            "EMAIL",
            "URL",
            "HOSTNAME",
            "MULTI_EMAIL",
            "DISTINGUISHED_NAME",
            "ENCODED_DISTINGUISHED_NAME",
            "DISTINGUISHED_NAMES;"
          ]
        },
        "protectedOption": {
          "type": "boolean",
          "example": false,
          "description": "If special permission is required to get value of this property.",
          "readOnly": true
        },
        "required": {
          "type": "boolean",
          "example": false,
          "description": "Flag is set to TRUE if this property is required and always must have non empty value.",
          "readOnly": true
        },
        "subGroup": {
          "type": "string",
          "description": "Parent subgroup name the property belongs to.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "Configuration property value.",
          "enum": [
            "Depends on property type. It can be number",
            "string",
            "URL",
            "email or value from values list."
          ]
        },
        "valuesList": {
          "type": "array",
          "description": "List of allowed property values if property type is OPTIONLIST or DYNAMIC_OPTIONLIST.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ConfigPropertyValueItem"
          }
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Configuration property version stored on the server. This value is used for optimistic locking of the property object to prevent concurrent changes of the property value by different users at the same time.",
          "readOnly": true
        }
      },
      "description": "SSC application configuration property"
    },
    "ConfigPropertyValueItem": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Value display name. This string is displayed on UI in the option values list.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "Value that is sent to server if this option is selected on UI.",
          "readOnly": true
        }
      },
      "description": "Allowed values of the property which type is OPTIONLIST or DYNAMIC_OPTIONLIST."
    },
    "ConfigPropertyValueValidation": {
      "type": "object",
      "properties": {
        "validationType": {
          "type": "string",
          "enum": [
            "NOT_SET",
            "POSITIVE_INTEGER",
            "MIXED_VALUES"
          ]
        }
      },
      "description": "SSC configuration property value validation type"
    },
    "CurrentAuthenticationInfo": {
      "type": "object",
      "properties": {
        "authType": {
          "type": "string",
          "description": "Type of current authentication",
          "readOnly": true,
          "enum": [
            "ANONYMOUS",
            "LOCAL",
            "SAML",
            "CAS",
            "HTTP",
            "X509",
            "KERBEROS"
          ]
        },
        "singleLogoutSupported": {
          "type": "boolean",
          "example": false,
          "description": "Information if current authentication type support single logout",
          "readOnly": true
        }
      },
      "description": "Information about current authentication"
    },
    "Custom Tag": {
      "type": "object",
      "required": [
        "customTagGuid",
        "newCustomTagIndex"
      ],
      "properties": {
        "autoApplied": {
          "type": "boolean",
          "example": false,
          "description": "Flag equals true if custom tag values was applied automatically",
          "readOnly": true
        },
        "customTagGuid": {
          "type": "string",
          "description": "GUID of custom tag",
          "readOnly": true
        },
        "dateValue": {
          "type": "string",
          "example": "yyyy-MM-dd"
        },
        "decimalValue": {
          "type": "number"
        },
        "newCustomTagIndex": {
          "type": "integer",
          "format": "int32",
          "description": "index of assigned tag value within the list of values for that custom tag",
          "readOnly": true
        },
        "textValue": {
          "type": "string"
        }
      },
      "description": "A custom tag value being assigned to issues in the application"
    },
    "Custom tag": {
      "type": "object",
      "required": [
        "customTagType",
        "extensible",
        "guid",
        "hidden",
        "name",
        "objectVersion",
        "valueType"
      ],
      "properties": {
        "customTagType": {
          "type": "string",
          "description": "Custom tag type.",
          "enum": [
            "UNKNOWN",
            "CUSTOM",
            "HYBRID",
            "METAGROUP",
            "SYSTEM",
            "AUDITASSISTANT"
          ]
        },
        "defaultValue": {
          "type": "string",
          "description": "Default value of the custom tag. Actual string value is presented here.",
          "readOnly": true
        },
        "defaultValueIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index of default value of the custom tag. This is ordinal number of the item in CustomTagLookup collection."
        },
        "deletable": {
          "type": "boolean",
          "example": false,
          "description": "Flag that says if custom tag can be deleted. Custom tag which values are currently in use cannot be deleted.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Custom tag description."
        },
        "extensible": {
          "type": "boolean",
          "example": false,
          "description": "Flag that says if custom tag is extensible or not."
        },
        "guid": {
          "type": "string",
          "description": "Custom tag GUID.",
          "readOnly": true
        },
        "hidden": {
          "type": "boolean",
          "example": false,
          "description": "Is custom tag hidden or not."
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Custom tag id",
          "readOnly": true
        },
        "inUse": {
          "type": "boolean",
          "example": false,
          "description": "Is custom tag values are selected for any issues in the system.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Custom tag unique name."
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Custom tag version stored on the server. This value is used for optimistic locking of the custom tag object to prevent concurrent modification of the custom tag by different users at the same time.",
          "readOnly": true
        },
        "primaryTag": {
          "type": "boolean",
          "example": false,
          "description": "If this custom tag is set as primary tag for a specific application version. This value is initialized only if custom tags for specific application version are requested.",
          "readOnly": true
        },
        "restriction": {
          "type": "boolean",
          "example": false,
          "description": "Flag is set to true if special permission is required to set values of this custom tag."
        },
        "restrictionType": {
          "type": "string",
          "description": "Special permission type if restriction is set to TRUE.",
          "enum": [
            "NONE",
            "RESTRICTED",
            "READONLY"
          ]
        },
        "valueList": {
          "type": "array",
          "description": "Collection of all possible custom tag values.",
          "items": {
            "$ref": "#/definitions/CustomTagLookup"
          }
        },
        "valueType": {
          "type": "string",
          "description": "Custom tag value type.",
          "enum": [
            "LIST",
            "DECIMAL",
            "DATE",
            "TEXT"
          ]
        }
      }
    },
    "CustomTagLookup": {
      "type": "object",
      "required": [
        "lookupIndex",
        "lookupValue",
        "seqNumber"
      ],
      "properties": {
        "consideredIssue": {
          "type": "boolean",
          "example": false,
          "description": "Flag that should be used to mark values that mean \"not an issue\" or \"false positive\"."
        },
        "customTagGuid": {
          "type": "string",
          "description": "GUID of the parent custom tag this value belongs to.",
          "readOnly": true
        },
        "defaultValue": {
          "type": "boolean",
          "example": false,
          "description": "Flag that says if this value is default custom tag value and should be selected automatically in the values list on issue audit screen."
        },
        "deletable": {
          "type": "boolean",
          "example": false,
          "description": "Flag that says if this value can be removed from custom tag. Value cannot be removed if it is selected for some issue in the system.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Custom tag value description."
        },
        "hidden": {
          "type": "boolean",
          "example": false,
          "description": "Flag that says that this value is hidden and cannot be selected in issue audit mode."
        },
        "lookupIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Current value index in values list."
        },
        "lookupValue": {
          "type": "string",
          "description": "Plain text custom tag value."
        },
        "relyingCustomTags": {
          "type": "array",
          "description": "List of relying custom tags and their values this value depends on. This list should be set to automatically reflect relying custom tags values changes to this custom tag value",
          "items": {
            "$ref": "#/definitions/customTagInfo"
          }
        },
        "seqNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Custom tag value sequence number."
        }
      },
      "description": "Custom tag value"
    },
    "Dashboard Version": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "Data Export": {
      "type": "object",
      "required": [
        "datasetName",
        "fileName"
      ],
      "properties": {
        "appVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "Application version id - required if DatasetName = \"Audit\""
        },
        "appVersionName": {
          "type": "string",
          "description": "Application version name"
        },
        "datasetName": {
          "type": "string",
          "description": "Dataset name - e.g. \"Audit\", \"Issue Stats\" - corresponds to page from which data is exported"
        },
        "documentInfoId": {
          "type": "integer",
          "format": "int64",
          "description": "Document Info id for file blob"
        },
        "expiration": {
          "type": "integer",
          "format": "int32",
          "description": "Data export file expiration in days"
        },
        "exportDate": {
          "type": "string",
          "format": "date-time",
          "description": "Export date"
        },
        "fileName": {
          "type": "string",
          "description": "Name of data export file"
        },
        "fileType": {
          "type": "string",
          "description": "File type, e.g. CSV"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "note": {
          "type": "string",
          "description": "Note, i.e. comments or info related to data being exported"
        },
        "status": {
          "type": "string",
          "description": "Data export status",
          "enum": [
            "EXPORT_PROCESS_STARTED",
            "EXPORT_PROCESS_COMPLETED",
            "EXPORT_PROCESS_FAILED"
          ]
        },
        "userName": {
          "type": "string",
          "description": "User name of user who initiated the data export"
        }
      },
      "description": "Data Export DTO object"
    },
    "DynamicScanCancelRequest": {
      "type": "object",
      "required": [
        "dynamicScanRequestIds"
      ],
      "properties": {
        "dynamicScanRequestIds": {
          "type": "array",
          "description": "List containing a single dynamic scan request id to cancel",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "Request for cancelling a dynamic scan request"
    },
    "DynamicScanRequest": {
      "type": "object",
      "required": [
        "id",
        "parameters"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Unique identifier of dynamic scan request"
        },
        "lastUpdateDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date that the dynamic scan request was updated"
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32",
          "description": "The object version of the dynamic scan request"
        },
        "parameters": {
          "type": "array",
          "description": "Parameters that are needed for dynamic scan request",
          "items": {
            "$ref": "#/definitions/DynamicScanRequestParameter"
          }
        },
        "requestedDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date that the dynamic scan request was submitted"
        },
        "status": {
          "type": "string",
          "description": "The status of the dynamic scan request",
          "enum": [
            "SUBMITTED",
            "PICKED_UP",
            "CANCELED",
            "COMPLETED"
          ]
        },
        "submitter": {
          "type": "string",
          "description": "The id of the user who submitted the dynamic scan request"
        }
      },
      "description": "Dynamic Scan Request object"
    },
    "DynamicScanRequestParameter": {
      "type": "object",
      "properties": {
        "fileValueDocumentInfoId": {
          "type": "integer",
          "format": "int64",
          "description": "The file value document info id for an upload file"
        },
        "fileValueName": {
          "type": "string",
          "description": "The name of an uploaded file"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The id of the parameter"
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32",
          "description": "The objecct version of this parameter"
        },
        "parameterDefinition": {
          "description": "The definition for this parameter",
          "$ref": "#/definitions/DynamicScanRequestParameterDefinition"
        },
        "value": {
          "type": "string",
          "description": "The value of the parameter"
        },
        "valueOptions": {
          "type": "array",
          "description": "The name of the uploaded file",
          "items": {
            "$ref": "#/definitions/DynamicScanRequestParameterOption"
          }
        },
        "values": {
          "type": "array",
          "description": "A list of possible values for this parameter",
          "items": {
            "$ref": "#/definitions/DynamicScanRequestParameterOption"
          }
        }
      },
      "description": "Dynamic Scan Request Parameter DTO object"
    },
    "DynamicScanRequestParameterDefinition": {
      "type": "object",
      "required": [
        "guid",
        "name",
        "required",
        "type"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "guid": {
          "type": "string",
          "description": "Unique string identifier for this parameter definition"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Unique id for this parameter definition",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "required": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if required"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "description": "Attribute Definition Type from which this parameter definition is based on",
          "enum": [
            "TEXT",
            "SINGLE",
            "MULTIPLE",
            "LONG_TEXT",
            "SENSITIVE_TEXT",
            "BOOLEAN",
            "INTEGER",
            "DATE",
            "FILE"
          ]
        }
      },
      "description": "Attribute Definition DTO object."
    },
    "DynamicScanRequestParameterOption": {
      "type": "object",
      "required": [
        "id",
        "index",
        "name"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "guid": {
          "type": "string",
          "description": "Unique string identifier for a Dynamic Scan Request Parameter Option"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Unique ID for this parameter option"
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "Index of this option in list of options"
        },
        "name": {
          "type": "string",
          "description": "Name"
        }
      },
      "description": "Dynamic Scan Request Parameter Option DTO object"
    },
    "DynamicScanRequestTemplate": {
      "type": "object",
      "required": [
        "parameters"
      ],
      "properties": {
        "parameters": {
          "type": "array",
          "description": "Parameters that are needed for dynamic scan request",
          "items": {
            "$ref": "#/definitions/DynamicScanRequestParameter"
          }
        }
      },
      "description": "Dynamic Scan Request Template object"
    },
    "DynamicScanRequestsSummary": {
      "type": "object",
      "properties": {
        "canEditOrCancel": {
          "type": "boolean",
          "example": false,
          "description": "Flag that indicates whether the user may edit or cancel the dynamic scan request"
        },
        "canSubmit": {
          "type": "boolean",
          "example": false,
          "description": "Flag that indicates whether the user can submit dynamic scan requests"
        },
        "dynamicScanDisabled": {
          "type": "boolean",
          "example": false,
          "description": "Flag that indicates whether dynamic scan request is disabled"
        },
        "dynamicScanDisabledMessage": {
          "type": "string",
          "description": "A message indicating the reason for why dynamic scan is disabled"
        },
        "lastScanId": {
          "type": "integer",
          "format": "int64",
          "description": "The id of the last dynamic scan request"
        },
        "lastScanSummary": {
          "type": "string",
          "description": "Holds information about the last dynamic scan request"
        }
      },
      "description": "Dynamic Scan Requests Summary object"
    },
    "EdastConfig": {
      "type": "object",
      "properties": {
        "edastEnabled": {
          "type": "boolean"
        }
      },
      "description": "EDAST Config DTO object"
    },
    "EmbeddedReportDefinition": {
      "type": "object",
      "properties": {
        "fieldsToNullWithExclusions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reportDefinition": {
          "$ref": "#/definitions/Report Definition"
        }
      }
    },
    "EmbeddedRoles": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        }
      }
    },
    "EmbeddedScans": {
      "type": "object",
      "properties": {
        "scans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Scan"
          }
        }
      }
    },
    "Engine type": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "servedByPlugin": {
          "type": "boolean",
          "example": false,
          "readOnly": true
        }
      },
      "description": "Types of the analyzers (engines) that produces issues"
    },
    "EntityStateIdentifier": {
      "type": "object",
      "required": [
        "id",
        "revision"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "API entity identifier.",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "API entity revision.",
          "readOnly": true
        }
      },
      "description": "Simple API entity that contains only ID and revision."
    },
    "EventLog": {
      "type": "object",
      "properties": {
        "detailedNote": {
          "type": "string",
          "readOnly": true
        },
        "entityId": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "eventDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "eventType": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "WEBUI_LOGIN_SUCCESS",
            "WEBUI_LOGIN_FAILED",
            "WEBUI_LOGOUT",
            "WEBUI_LOGIN_WITH_NO_ROLE",
            "WS_LOGIN_SUCCESS",
            "WS_LOGIN_FAILED",
            "WS_LOGIN_WITH_NO_ROLE",
            "LOCAL_USER_CREATED",
            "LOCAL_USER_UPDATED",
            "LOCAL_USER_DELETED",
            "LOCAL_USER_FROZEN",
            "AGENT_CREDENTIAL_CREATED",
            "AGENT_CREDENTIAL_UPDATED",
            "AGENT_CREDENTIAL_DELETED",
            "LDAP_ENTITY_CREATED",
            "LDAP_ENTITY_UPDATED",
            "LDAP_ENTITY_DELETED",
            "LDAP_CACHE_REFRESH_REQUESTED",
            "LDAP_CACHE_REFRESH_STARTED",
            "LDAP_CACHE_REFRESH_COMPLETED",
            "PROJECT_VERSION_CREATED",
            "PROJECT_VERSION_CREATED_FROM_PREVIOUS",
            "PROJECT_VERSION_UPDATED",
            "PROJECT_VERSION_DELETED",
            "PROJECT_VERSION_METADATA_UPDATED",
            "PROJECT_VERSION_ACCESS_ADDED",
            "PROJECT_VERSION_ACCESS_REMOVED",
            "PROJECT_VERSION_BUG_TRACKER_UPDATED",
            "SCA_RESULT_PROCESSED",
            "RUNTIME_RESULT_PROCESSED",
            "EXTERNAL_RESULT_PROCESSED",
            "PTA_RESULT_PROCESSED",
            "RTA_RESULT_PROCESSED",
            "ARTIFACT_UPLOAD_REQUESTED",
            "ARTIFACT_UPLOAD_STARTED",
            "ARTIFACT_UPLOAD_COMPLETED",
            "ARTIFACT_UPLOAD_FAILED",
            "ARTIFACT_UPLOAD_CANCELLED",
            "ARTIFACT_DELETE_REQUESTED",
            "ARTIFACT_DELETE_STARTED",
            "ARTIFACT_DELETE_COMPLETED",
            "ARTIFACT_DELETE_FAILED",
            "ARTIFACT_DELETE_CANCELLED",
            "JOB_CANCELLED",
            "ARTIFACT_PURGE_REQUESTED",
            "ARTIFACT_PURGE_REQUEST_STARTED",
            "ARTIFACT_PURGE_COMPLETED",
            "ARTIFACT_PURGE_FAILED",
            "ARTIFACT_PURGE_REQUEST_FINISHED",
            "ARTIFACT_PURGE_CANCELLED",
            "HISTORICAL_SNAPSHOT_COLLECTION_STARTED",
            "HISTORICAL_SNAPSHOT_COLLECTION_ITERATION_COMPLETED",
            "HISTORICAL_SNAPSHOT_COLLECTION_ITERATION_FAILED",
            "HISTORICAL_SNAPSHOT_COLLECTION_NO_UPDATES",
            "AUDIT_PERFORMED",
            "ARTIFACT_UPLOAD_REQUIRES_AUTH",
            "ARTIFACT_UPLOAD_APPROVED",
            "SOURCE_CODE_UPLOADED",
            "FILTERSET_FOLDER_REFRESH_REQUESTED",
            "FILTERSET_FOLDER_REFRESH_COMPLETED",
            "FILTERSET_FOLDER_REFRESH_FAILED",
            "DYNAMIC_SCAN_CREATED",
            "DYNAMIC_SCAN_EDITED",
            "DYNAMIC_SCAN_CANCELED",
            "DYNAMIC_SCAN_COMPLETED",
            "DYNAMIC_SCAN_PICKED_UP",
            "BATCH_BUG_FILING_REQUESTED",
            "BATCH_BUG_FILING_REQUEST_FAILED",
            "BATCH_BUG_FILING_STARTED",
            "BATCH_BUG_FILING_ENDED",
            "BATCH_BUG_FILING_FAILED",
            "BUG_FILED",
            "BUG_FAILED_TO_FILE",
            "BUG_STATE_MANAGEMENT_STARTED",
            "BUG_STATE_MANAGEMENT_ENDED",
            "BUG_STATE_MANAGEMENT_ENDED_WITH_ERRORS",
            "BUG_UPDATED",
            "BUG_FAILED_TO_UPDATE",
            "COMMENT_ADDED_TO_ISSUE",
            "AUDIT_ASSISTANT_ISSUES_SUBMITTED",
            "AUDIT_ASSISTANT_ISSUES_RETRIEVED",
            "AUDIT_ASSISTANT_FPR_UPLOAD_STARTED",
            "AUDIT_ASSISTANT_TRAINING_SENT",
            "AUDIT_ASSISTANT_TEST_CONNECTION_FAILED",
            "AUDIT_ASSISTANT_ISSUES_SUBMIT_FAILED",
            "AUDIT_ASSISTANT_ISSUES_RETRIEVE_FAILED",
            "AUDIT_ASSISTANT_FPR_UPLOAD_FAILED",
            "AUDIT_ASSISTANT_TRAINING_SENT_FAILED",
            "AUDIT_ASSISTANT_PROJECT_PREDICTION_POLICY_CHANGED",
            "AUDIT_ASSISTANT_DEFAULT_PREDICTION_POLICY_CHANGED",
            "AUDIT_ASSISTANT_TAG_MAPPING_CHANGED",
            "AUDIT_ASSISTANT_PREDICTION_POLICIES_REFRESHED",
            "REPORT_GENERATION_REQUESTED",
            "REPORT_GENERATION_COMPLETED",
            "REPORT_GENERATION_FAILED",
            "REPORT_GENERATION_CANCELLED",
            "REPORT_DELETED",
            "RULEPACK_SERVER_UPDATE",
            "RULEPACK_USER_UPLOAD",
            "RULEPACK_DELETED",
            "RULEPACK_DOWNLOAD",
            "RULEPACK_CLIENT_UPDATE",
            "DOCUMENT_ARTIFACT_CREATED",
            "DOCUMENT_ARTIFACT_UPDATED",
            "DOCUMENT_ARTIFACT_DELETED",
            "TASK_INSTANCE_CREATED",
            "TASK_INSTANCE_UPDATED",
            "TASK_INSTANCE_DELETED",
            "TASK_INSTANCE_SIGNOFF_UPDATED",
            "ACTIVITY_INSTANCE_SIGNOFF_UPDATED",
            "REQUIREMENT_INSTANCE_SIGNOFF_UPDATED",
            "REQUIREMENT_TEMPLATE_INSTANCE_SIGNOFF_UPDATED",
            "TASK_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF",
            "ACTIVITY_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF",
            "REQUIREMENT_INSTANCE_DUE_DATE_PASSED_NO_SIGNOFF",
            "REQUIREMENT_TEMPLATE_DUE_DATE_PASSED_NO_SIGNOFF",
            "SDL_COMMENT_CREATED",
            "PROJECT_PERSONA_ASSIGNMENT_UPDATED",
            "PERSONA_ASSIGNMENT_UPDATED",
            "WORK_OWNER_UPDATED",
            "DUE_DATE_UPDATED",
            "SESSION_TIMEOUT",
            "REQ_TEMPLATE_CREATED",
            "REQ_TEMPLATE_UPDATED",
            "ACTIVITY_CREATED",
            "ACTIVITY_UPDATED",
            "VARIABLE_CREATED",
            "VARIABLE_UPDATED",
            "VARIABLE_DELETED",
            "MEASUREMENT_AGENT_CREATED",
            "MEASUREMENT_AGENT_UPDATED",
            "MEASUREMENT_AGENT_DELETED",
            "DOCUMENT_DEF_CREATED",
            "DOCUMENT_DEF_UPDATED",
            "PROJECT_TEMPLATE_CREATED",
            "PROJECT_TEMPLATE_UPDATED",
            "PROJECT_TEMPLATE_DELETED",
            "ASSIGNMENT_RULES_UPDATED",
            "PERSONA_CREATED",
            "PERSONA_UPDATED",
            "PERSONA_DELETED",
            "ATTR_CREATED",
            "ATTR_UPDATED",
            "ATTR_DELETED",
            "ATTRIBUTE_DEFINITION_CREATED",
            "ATTRIBUTE_DEFINITION_UPDATED",
            "ATTRIBUTE_DEFINITION_DELETED",
            "PROJECT_VERSION_CUSTOM_TAG_ASSIGNMENT",
            "PROJECT_VERSION_PRIMARY_TAG_UPDATE",
            "REPORT_DEFINITION_CREATED",
            "REPORT_DEFINITION_UPDATED",
            "REPORT_DEFINITION_DELETED",
            "REPORT_LIBRARY_CREATED",
            "REPORT_LIBRARY_UPDATED",
            "REPORT_LIBRARY_DELETED",
            "RUNTIME_HOST_CONNECTED",
            "RUNTIME_HOST_DISCONNECTED",
            "RUNTIME_HOST_CREATED",
            "RUNTIME_HOST_DELETED",
            "RUNTIME_HOST_DISCOVERED",
            "RUNTIME_HOST_ENABLED",
            "RUNTIME_HOST_DISABLED",
            "RUNTIME_HOST_AUTH_RESET",
            "ACCEPT_NEW_HOSTS_ENABLED",
            "ACCEPT_NEW_HOSTS_DISABLED",
            "DISABLED_HOST_CONNECTION",
            "RUNTIME_APPLICATION_ASSIGNMENT_RULES_UPDATED",
            "REAPPLY_APPLICATION_ASSIGNMENT_RULES_REQUESTED",
            "REAPPLY_APPLICATION_ASSIGNMENT_RULES_COMPLETED",
            "REAPPLY_APPLICATION_ASSIGNMENT_RULES_FAILED",
            "RUNTIME_CONFIGURATION_CREATED",
            "RUNTIME_CONFIGURATION_UPDATED",
            "RUNTIME_CONFIGURATION_DELETED",
            "RUNTIME_CONFIGURATION_TEMPLATE_UPDATED",
            "RUNTIME_EH_CREATED",
            "RUNTIME_EH_UPDATED",
            "RUNTIME_EH_DELETED",
            "RUNTIME_SETTINGS_UPDATED",
            "RUNTIME_RULEPACK_CONFIG_UPDATED",
            "RUNTIME_EVENT_RECEIVED",
            "RUNTIME_ALERT_RECEIVED",
            "FEDERATION_CREATED",
            "FEDERATION_UPDATED",
            "FEDERATION_DELETED",
            "RTAPP_CREATED",
            "RTAPP_UPDATED",
            "RTAPP_DELETED",
            "RTAPP_ACCESS_ADDED",
            "RTAPP_ACCESS_REMOVED",
            "USERROLE_CREATED",
            "USERROLE_UPDATED",
            "USERROLE_DELETED",
            "CLOUD_SCAN_POLLED",
            "CLOUD_POOL_CREATED",
            "CLOUD_POOL_UPDATED",
            "CLOUD_POOL_DELETED",
            "CLOUD_POOL_AVS_UPDATED",
            "CLOUD_POOL_SENSORS_UPDATED",
            "CLOUD_JOB_CANCELED",
            "CLOUD_JOB_FPR_DOWNLOADED",
            "CLOUD_JOB_LOG_DOWNLOADED",
            "INDEX_MAINTENANCE_STARTED",
            "INDEX_MAINTENANCE_COMPLETED",
            "FULL_REINDEX_STARTED",
            "FULL_REINDEX_COMPLETED",
            "INDEX_NEW_ISSUES_STARTED",
            "INDEX_NEW_ISSUES_COMPLETED",
            "SSC_CONFIGURATION_UPDATED",
            "LDAP_CONFIG_CREATED",
            "LDAP_CONFIG_UPDATED",
            "LDAP_CONFIG_DELETED",
            "LDAP_CONFIG_DEFAULT_CHANGED",
            "SEED_BUNDLE_UPLOAD_COMPLETED",
            "SEED_BUNDLE_UPLOAD_FAILED",
            "SEED_BUNDLE_COMPLETED",
            "SEED_BUNDLE_FAILED",
            "WEBHOOK_DEFINITION_CREATED",
            "WEBHOOK_DEFINITION_UPDATED",
            "WEBHOOK_DEFINITION_DELETED"
          ]
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "userName": {
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Event Log DTO object"
    },
    "ExportAuditToCSVRequest": {
      "type": "object",
      "required": [
        "datasetName",
        "fileName",
        "filterSet",
        "orderBy",
        "projectVersionId"
      ],
      "properties": {
        "aggregateBy": {
          "type": "string",
          "description": "Aggregateby"
        },
        "collapseIssues": {
          "type": "boolean",
          "example": false,
          "description": "Will collapse issues in exported files"
        },
        "datasetName": {
          "type": "string",
          "description": "Dataset name (Audit)"
        },
        "fileName": {
          "type": "string",
          "description": "File name to save"
        },
        "filter": {
          "type": "string",
          "description": "Filter"
        },
        "filterBy": {
          "type": "string",
          "description": "Filterby"
        },
        "filterSet": {
          "type": "string",
          "description": "Filterset"
        },
        "includeCommentsInHistory": {
          "type": "boolean",
          "example": false,
          "description": "Will include comments in history"
        },
        "includeHidden": {
          "type": "boolean",
          "example": false,
          "description": "Will include hidden issues"
        },
        "includeRemoved": {
          "type": "boolean",
          "example": false,
          "description": "Will include removed issues"
        },
        "includeSuppressed": {
          "type": "boolean",
          "example": false,
          "description": "Will include suppressed issues"
        },
        "issueSearch": {
          "type": "string",
          "description": "Search issue query"
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Limit"
        },
        "note": {
          "type": "string",
          "description": "Note"
        },
        "orderBy": {
          "type": "string",
          "description": "Orderby"
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "Application version id to export audit data"
        },
        "restrictToUsersIssues": {
          "type": "boolean",
          "example": false,
          "description": "will restrict to user issues"
        },
        "start": {
          "type": "integer",
          "format": "int32",
          "description": "Start"
        },
        "useShortFileNames": {
          "type": "boolean",
          "example": false,
          "description": "Will use short file names"
        }
      },
      "description": "Request to export audit information to CSV file"
    },
    "ExportIssueStatsToCSVRequest": {
      "type": "object",
      "required": [
        "datasetName",
        "fileName"
      ],
      "properties": {
        "datasetName": {
          "type": "string",
          "description": "Dataset name (Issue Stat)"
        },
        "fileName": {
          "type": "string",
          "description": "Csv file name"
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Limit"
        },
        "note": {
          "type": "string",
          "description": "Note for csv export"
        },
        "start": {
          "type": "integer",
          "format": "int32",
          "description": "Start"
        }
      },
      "description": "Request to export issue stats to CSV file"
    },
    "External Bug Info": {
      "type": "object",
      "required": [
        "externalBugDeepLink",
        "externalBugId",
        "fileBugForSelectAll",
        "issueCount",
        "issueInstanceIds"
      ],
      "properties": {
        "externalBugDeepLink": {
          "type": "string",
          "description": "Link to a bug the user can navigate to by clicking the link"
        },
        "externalBugId": {
          "type": "string",
          "description": "ID of the bug"
        },
        "fileBugForSelectAll": {
          "type": "boolean",
          "example": false,
          "description": "True if user wants to file a bug for all selected issues in UI"
        },
        "issueCount": {
          "type": "integer",
          "format": "int64",
          "description": "Count of issues for which a bug is filed"
        },
        "issueInstanceIds": {
          "type": "array",
          "description": "List of Issue Instance IDs",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "External Bug Info DTO object"
    },
    "Feature": {
      "type": "object",
      "required": [
        "description",
        "id",
        "name"
      ],
      "properties": {
        "description": {
          "type": "string",
          "description": "Feature description",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Feature id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Feature name",
          "readOnly": true
        }
      },
      "description": "A feature that is available on the server instance"
    },
    "File": {
      "type": "object",
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "absoluteFile": {
          "$ref": "#/definitions/File"
        },
        "absolutePath": {
          "type": "string"
        },
        "canonicalFile": {
          "$ref": "#/definitions/File"
        },
        "canonicalPath": {
          "type": "string"
        },
        "directory": {
          "type": "boolean"
        },
        "executable": {
          "type": "boolean"
        },
        "file": {
          "type": "boolean"
        },
        "freeSpace": {
          "type": "integer",
          "format": "int64"
        },
        "hidden": {
          "type": "boolean"
        },
        "lastModified": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "parentFile": {
          "$ref": "#/definitions/File"
        },
        "path": {
          "type": "string"
        },
        "readable": {
          "type": "boolean"
        },
        "totalSpace": {
          "type": "integer",
          "format": "int64"
        },
        "usableSpace": {
          "type": "integer",
          "format": "int64"
        },
        "writable": {
          "type": "boolean"
        }
      }
    },
    "File token": {
      "type": "object",
      "required": [
        "fileTokenType"
      ],
      "properties": {
        "fileTokenType": {
          "type": "string",
          "example": "DOWNLOAD",
          "description": "Type of single-use file token",
          "enum": [
            "UPLOAD",
            "DOWNLOAD",
            "PREVIEW_FILE",
            "REPORT_FILE"
          ]
        },
        "token": {
          "type": "string",
          "description": "Value of single-use token to be used as the 'mat' URL parameter during a file operation",
          "readOnly": true
        }
      },
      "description": "Token to upload or download files"
    },
    "Filter Set": {
      "type": "object",
      "required": [
        "defaultFilterSet",
        "description",
        "folders",
        "guid",
        "title"
      ],
      "properties": {
        "defaultFilterSet": {
          "type": "boolean",
          "example": false,
          "description": "whether this filter set is the default within its issue template",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "readOnly": true
        },
        "folders": {
          "type": "array",
          "description": "List of folders defined in filter set",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/FolderDto"
          }
        },
        "guid": {
          "type": "string",
          "description": "GUID of filter set",
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "name of filter set",
          "readOnly": true
        }
      },
      "description": "basic info on a filter set (does not include filters)"
    },
    "Folder": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string",
          "description": "Color that should be used to represent folder on UI",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Folder description",
          "readOnly": true
        },
        "editable": {
          "type": "boolean",
          "example": false,
          "description": "Is folder editable",
          "readOnly": true
        },
        "guid": {
          "type": "string",
          "description": "Folder GUID. Guid is unique across all the folders defined for a application version",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Folder id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Folder name",
          "readOnly": true
        },
        "orderIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Numeric value used for ordering folder from the most important to the least important",
          "readOnly": true
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the application version for which folder is defined",
          "readOnly": true
        }
      }
    },
    "FolderDto": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string",
          "description": "Folder color. Folder will be marked by this color on UI",
          "readOnly": true
        },
        "guid": {
          "type": "string",
          "description": "Folder GUID.",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Unique identifier of the folder.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Folder unique name.",
          "readOnly": true
        }
      },
      "description": "Issues folder. This is a readonly object, it cannot be created using SSC API."
    },
    "Fortify job": {
      "type": "object",
      "required": [
        "id",
        "invokingUserName",
        "jobState",
        "jobType"
      ],
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "invokingUserName": {
          "type": "string",
          "description": "SSC username which initiated the job",
          "readOnly": true
        },
        "jobState": {
          "type": "integer",
          "format": "int32",
          "example": "0=normal, 2=complete, 3=error",
          "readOnly": true
        },
        "jobType": {
          "type": "integer",
          "format": "int32",
          "example": "20 represents HISTORICAL_SNAPSHOT job",
          "readOnly": true
        }
      },
      "description": "Fortify job DTO object, carries less information than the main Job DTO. Used primarily for the snapshot refresh which be initiated by a non-admin user"
    },
    "IID Migration": {
      "type": "object",
      "properties": {
        "artifactId": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "IID migration id",
          "readOnly": true
        },
        "mappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IidMapping"
          }
        },
        "processingDate": {
          "type": "string",
          "format": "date-time"
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "NONE",
            "SCHED_PROCESSING",
            "PROCESSING",
            "PROCESS_COMPLETE",
            "ERROR_PROCESSING",
            "REQUIRE_AUTH",
            "DELETING",
            "ERROR_DELETING",
            "DELETED",
            "PURGING",
            "PURGED",
            "ERROR_PURGING",
            "DISPATCH_ANALYSIS",
            "DISPATCH_REAUDIT",
            "ERROR_DISPATCH",
            "QUEUED_ANALYSIS",
            "REQUEUED_ANALYSIS",
            "ANALYZING",
            "ANALYSIS_COMPLETE",
            "ERROR_ANALYZING",
            "UNKNOWN",
            "AUDIT_FAILED",
            "AUTH_DENIED"
          ]
        }
      }
    },
    "IidMapping": {
      "type": "object",
      "properties": {
        "fromIid": {
          "type": "string"
        },
        "toIid": {
          "type": "string"
        }
      }
    },
    "Input Report Parameter": {
      "type": "object",
      "required": [
        "identifier",
        "name",
        "paramValue",
        "type"
      ],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "paramValue": {
          "type": "object",
          "description": "Value of this parameter"
        },
        "type": {
          "type": "string",
          "enum": [
            "SINGLE_PROJECT",
            "SINGLE_RUNTIME_APP",
            "SINGLE_SSA_PROJECT",
            "MULTI_PROJECT",
            "MULTI_RUNTIME_APP",
            "MULTI_SSA_PROJECT",
            "PROJECT_ATTRIBUTE",
            "STRING",
            "BOOLEAN",
            "DATE",
            "SINGLE_SELECT_DEFAULT",
            "METADEF_GUID"
          ]
        }
      },
      "description": "InputReportParameter DTO object"
    },
    "InputStream": {
      "type": "object"
    },
    "Issue Assignment": {
      "type": "object",
      "required": [
        "issueCountAllProjectVer",
        "issueCountCertainProjectVer",
        "projectVersionId",
        "userName"
      ],
      "properties": {
        "issueCountAllProjectVer": {
          "type": "integer",
          "format": "int32",
          "description": "total number of issues assigned to user across all application versions",
          "readOnly": true
        },
        "issueCountCertainProjectVer": {
          "type": "integer",
          "format": "int32",
          "description": "number of issues assigned to user in current application version",
          "readOnly": true
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "userName": {
          "type": "string",
          "readOnly": true
        }
      },
      "description": "counts of issues assigned to user"
    },
    "Issue Attachment": {
      "type": "object",
      "required": [
        "fileDocId",
        "id",
        "updateTime"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "fileDocId": {
          "type": "integer",
          "format": "int64",
          "description": "document ID referencing the attachment",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "image": {
          "type": "string",
          "format": "byte"
        },
        "originalFileName": {
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      },
      "description": "attachment (such as screenshot) associated with issue"
    },
    "Issue Audit Comment": {
      "type": "object",
      "required": [
        "auditTime",
        "comment",
        "issueId",
        "seqNumber",
        "userName"
      ],
      "properties": {
        "auditTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "comment": {
          "type": "string"
        },
        "issueEngineType": {
          "type": "string",
          "readOnly": true
        },
        "issueId": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "issueInstanceId": {
          "type": "string",
          "readOnly": true
        },
        "issueName": {
          "type": "string",
          "readOnly": true
        },
        "projectName": {
          "type": "string",
          "readOnly": true
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "projectVersionName": {
          "type": "string",
          "readOnly": true
        },
        "seqNumber": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "userName": {
          "type": "string",
          "readOnly": true
        }
      },
      "description": "An audit comment associated with an issue"
    },
    "Issue Primary Tag": {
      "type": "object",
      "properties": {
        "tagGuid": {
          "type": "string"
        },
        "tagId": {
          "type": "integer",
          "format": "int64"
        },
        "tagName": {
          "type": "string"
        },
        "tagValue": {
          "type": "string"
        }
      },
      "description": "Store the information about issue primary custom tag"
    },
    "Issue Statistics": {
      "type": "object",
      "required": [
        "filterSetId",
        "hiddenCount",
        "hiddenDisplayableCount",
        "projectVersionId",
        "removedCount",
        "suppressedCount"
      ],
      "properties": {
        "filterSetId": {
          "type": "integer",
          "format": "int64",
          "description": "Filter set identifier"
        },
        "hiddenCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of hidden issues in the application version"
        },
        "hiddenDisplayableCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of displayable hidden issues in the application version",
          "readOnly": true
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "Application version identifier"
        },
        "removedCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of removed issues "
        },
        "removedDisplayableCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of displayable removed issues  in the application version",
          "readOnly": true
        },
        "suppressedCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of suppressed issues in the application version"
        },
        "suppressedDisplayableCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of displayable suppressed issues in the application version",
          "readOnly": true
        }
      },
      "description": "Issue Statistics DTO object"
    },
    "Issue Summary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name",
          "readOnly": true
        },
        "series": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object"
          }
        },
        "totalIssueCount": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      },
      "description": "Used to chart variable and performance indicators of application version's issues."
    },
    "Issue Template": {
      "type": "object",
      "required": [
        "name",
        "originalFileName"
      ],
      "properties": {
        "customTagIds": {
          "type": "array",
          "example": "null",
          "description": "Deprecated - value is always null.",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "defaultTemplate": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Issue template id",
          "readOnly": true
        },
        "inUse": {
          "type": "boolean",
          "example": false,
          "description": "Is the template in use"
        },
        "masterAttrGuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32"
        },
        "obsolete": {
          "type": "boolean"
        },
        "originalFileName": {
          "type": "string"
        },
        "publishVersion": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Issue Template DTO object."
    },
    "Issue selector": {
      "type": "object",
      "required": [
        "description",
        "displayName",
        "entityType",
        "guid",
        "value"
      ],
      "properties": {
        "description": {
          "type": "string",
          "description": "Description"
        },
        "displayName": {
          "type": "string",
          "description": "Display name for issue selector"
        },
        "entityType": {
          "type": "string",
          "description": "Issue selector entity type",
          "enum": [
            "UNDEFINED",
            "ISSUE",
            "EXTERNALLIST",
            "CUSTOMTAG",
            "HYBRIDTAG",
            "FOLDER"
          ]
        },
        "guid": {
          "type": "string",
          "description": "Issue selector global unique identifier"
        },
        "value": {
          "type": "string",
          "description": "Issue selector value"
        }
      },
      "description": "Issue selector DTO object"
    },
    "IssueActionResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "description": "Result of issue audit",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/IssueAuditResult"
          }
        }
      },
      "description": "Result of issue audit action"
    },
    "IssueAgingDto": {
      "type": "object",
      "properties": {
        "averageDaysToRemediate": {
          "type": "integer",
          "format": "int32",
          "description": "Average number of days to fix issues in application versions.",
          "readOnly": true
        },
        "averageDaysToReview": {
          "type": "integer",
          "format": "int32",
          "description": "Average number of days to review issues in application versions.",
          "readOnly": true
        },
        "bugDensity": {
          "type": "number",
          "format": "double",
          "description": "Bug density per 10 000 of scanned lines of code.",
          "readOnly": true
        },
        "filesScanned": {
          "type": "integer",
          "format": "int64",
          "description": "Number of files that were scanned in all application versions.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "This is dynamic attribute which value depend of the aggregation attribute. It can be application ID, application version ID or application version attribute GUID.",
          "readOnly": true
        },
        "issuesPendingReview": {
          "type": "integer",
          "format": "int64",
          "description": "Number of issues that are pending review in all application versions.",
          "readOnly": true
        },
        "linesOfCode": {
          "type": "integer",
          "format": "int64",
          "description": "Number of lines of code that were scanned by scans which results are stored in the application versions.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "This is dynamic attribute which value depend of the aggregation attribute. It can be application name, application version name or application version attribute name.",
          "readOnly": true
        },
        "numberOfApplicationVersions": {
          "type": "integer",
          "format": "int32",
          "description": "Number of application versions in the application.",
          "readOnly": true
        },
        "oldestScanDate": {
          "type": "string",
          "format": "date-time",
          "description": "Issue audites that have been done after this date have been taken into account for average days to review calculation.",
          "readOnly": true
        },
        "openIssues": {
          "type": "integer",
          "format": "int64",
          "description": "Number of not remediated issues in all application versions.",
          "readOnly": true
        },
        "snapshotOutOfDate": {
          "type": "boolean",
          "example": false,
          "description": "Flag that indicates that application metrics state was changed and it metrics are going to be recalculated.",
          "readOnly": true
        }
      },
      "description": "Issue aging object contains application metrics."
    },
    "IssueAgingGroupDto": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of issue aging table grouping attribute. This ID should be passed to issue aging endpoint to return issue aging items that belongs only to this group",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Name of the group to display it on UI.",
          "readOnly": true
        }
      },
      "description": "Issue aging group object contains definition of application version attribute that can be used for issue aging table grouping."
    },
    "IssueAgingPortlet": {
      "type": "object",
      "properties": {
        "applicationVersions": {
          "type": "integer",
          "format": "int32"
        },
        "averageDaysToRemediate": {
          "type": "integer",
          "format": "int32"
        },
        "averageDaysToReview": {
          "type": "integer",
          "format": "int32"
        },
        "filesScanned": {
          "type": "integer",
          "format": "int64"
        },
        "issuesPendingReview": {
          "type": "integer",
          "format": "int64"
        },
        "issuesRemediated": {
          "type": "integer",
          "format": "int64"
        },
        "linesOfCode": {
          "type": "integer",
          "format": "int64"
        },
        "openIssues": {
          "type": "integer",
          "format": "int64"
        },
        "openIssuesReviewed": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "Issue aging portlet object contains application and issue metrics."
    },
    "IssueAssignUserRequest": {
      "type": "object",
      "required": [
        "issues",
        "user"
      ],
      "properties": {
        "issues": {
          "type": "array",
          "description": "Issues to audit",
          "items": {
            "$ref": "#/definitions/EntityStateIdentifier"
          }
        },
        "user": {
          "type": "string",
          "description": "Username to assign"
        }
      },
      "description": "Request to assign user to the issues"
    },
    "IssueAuditHistoryDto": {
      "type": "object",
      "required": [
        "attributeName",
        "auditDateTime",
        "conflict",
        "issueId",
        "newValue",
        "oldValue",
        "sequenceNumber",
        "userName",
        "valueType"
      ],
      "properties": {
        "attributeName": {
          "type": "string",
          "description": "Changed attribute name.",
          "readOnly": true
        },
        "auditDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when audit was performed.",
          "readOnly": true
        },
        "conflict": {
          "type": "boolean",
          "example": false,
          "description": "Flag that indicates if there were any conflicts when audit information was merged.",
          "readOnly": true
        },
        "issueId": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the issue the history record belongs to",
          "readOnly": true
        },
        "newValue": {
          "type": "string",
          "description": "Attribute value after audit.",
          "readOnly": true
        },
        "oldValue": {
          "type": "string",
          "description": "Attribute value before audit.",
          "readOnly": true
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Sequence number of the history record in the list of all audit history records for the issue.",
          "readOnly": true
        },
        "userName": {
          "type": "string",
          "description": "Name of the user who performed the audit.",
          "readOnly": true
        },
        "valueType": {
          "type": "string",
          "description": "Attribute type.",
          "readOnly": true,
          "enum": [
            "LIST",
            "DECIMAL",
            "DATE",
            "TEXT"
          ]
        }
      },
      "description": "Issue audit history record."
    },
    "IssueAuditRequest": {
      "type": "object",
      "required": [
        "issues"
      ],
      "properties": {
        "comment": {
          "type": "string",
          "description": "Comment"
        },
        "customTagAudit": {
          "type": "array",
          "description": "Custom tag values that are set for the issue.",
          "items": {
            "$ref": "#/definitions/Custom Tag"
          }
        },
        "issues": {
          "type": "array",
          "description": "Issues to audit",
          "items": {
            "$ref": "#/definitions/EntityStateIdentifier"
          }
        },
        "suppressed": {
          "type": "boolean",
          "example": false,
          "description": "Will suppress the issue"
        },
        "user": {
          "type": "string",
          "description": "Username to assign"
        }
      },
      "description": "Request to audit issues"
    },
    "IssueAuditResult": {
      "type": "object",
      "required": [
        "customTagValues",
        "id",
        "issueInstanceId",
        "projectVersionId",
        "revision",
        "suppressed",
        "userName"
      ],
      "properties": {
        "customTagValues": {
          "type": "array",
          "description": "Custom tag values that are set for the issue.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Custom Tag"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Audited issue ID.",
          "readOnly": true
        },
        "issueInstanceId": {
          "type": "string",
          "description": "Issue instance ID.",
          "readOnly": true
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the application version the audited issue belongs to.",
          "readOnly": true
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "Audited issue revision.",
          "readOnly": true
        },
        "suppressed": {
          "type": "boolean",
          "example": false,
          "description": "Is issue suppressed.",
          "readOnly": true
        },
        "userName": {
          "type": "string",
          "description": "User assigned to the audited issue.",
          "readOnly": true
        }
      },
      "description": "Issue audit result contains the most rescent issue audit information after performing issue audit."
    },
    "IssueFileBugRequest": {
      "type": "object",
      "required": [
        "bugParams",
        "filterBy",
        "filterSet",
        "issueInstanceIds"
      ],
      "properties": {
        "bugParams": {
          "type": "array",
          "description": "Bug param to file the bug",
          "items": {
            "$ref": "#/definitions/BugParam"
          }
        },
        "filterBy": {
          "type": "array",
          "description": "Filter by property",
          "items": {
            "type": "string"
          }
        },
        "filterSet": {
          "type": "string",
          "description": "Filterset"
        },
        "issueInstanceIds": {
          "type": "array",
          "description": "Instance id of issues that need to be filed as bugs",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Request to file the bug from the issues"
    },
    "IssueFileBugResponse": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Filed bugs",
          "readOnly": true,
          "$ref": "#/definitions/External Bug Info"
        }
      },
      "description": "Result of field bug action"
    },
    "IssueFilterSelector": {
      "type": "object",
      "required": [
        "description",
        "displayName",
        "entityType",
        "filterSelectorType",
        "guid",
        "selectorOptions",
        "value"
      ],
      "properties": {
        "description": {
          "type": "string",
          "description": "Selector set's description.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Selector set's display name.",
          "readOnly": true
        },
        "entityType": {
          "type": "string",
          "description": "Type of the issue attriute that can be used for ordering or filtering.",
          "readOnly": true,
          "enum": [
            "UNDEFINED",
            "ISSUE",
            "EXTERNALLIST",
            "CUSTOMTAG",
            "HYBRIDTAG",
            "FOLDER"
          ]
        },
        "filterSelectorType": {
          "type": "string",
          "description": "If value of the selector can be chose from the list of predefined values, or if it can contain any value defined by user.",
          "readOnly": true,
          "enum": [
            "LIST",
            "DECIMAL",
            "DATE",
            "TEXT"
          ]
        },
        "guid": {
          "type": "string",
          "description": "Selector set's GUID.",
          "readOnly": true
        },
        "selectorOptions": {
          "type": "array",
          "description": "Selector set's options.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/SelectorOption"
          }
        },
        "value": {
          "type": "string",
          "description": "Selector set's value that must be sent to backend when this option is selected.",
          "readOnly": true
        }
      },
      "description": "DTO object that holds the information about specific issue attribute that can be used for filtering issues list."
    },
    "IssueFilterSelectorSet": {
      "type": "object",
      "required": [
        "filterBySet",
        "groupBySet"
      ],
      "properties": {
        "filterBySet": {
          "type": "array",
          "description": "List of all possible issues filterring attributes.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/IssueFilterSelector"
          }
        },
        "groupBySet": {
          "type": "array",
          "description": "List of all possible issues grouping attributes.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Issue selector"
          }
        }
      },
      "description": "Composite object that holds information about issue attributes that can be used for issue list filtering and grouping."
    },
    "IssueSuppressRequest": {
      "type": "object",
      "required": [
        "issues",
        "suppressed"
      ],
      "properties": {
        "issues": {
          "type": "array",
          "description": "Issues to suppress",
          "items": {
            "$ref": "#/definitions/EntityStateIdentifier"
          }
        },
        "suppressed": {
          "type": "boolean",
          "example": false,
          "description": "Will suppress the issue"
        }
      },
      "description": "Request to suppress issues"
    },
    "IssueUpdateTagRequest": {
      "type": "object",
      "required": [
        "customTagAudit",
        "issues"
      ],
      "properties": {
        "customTagAudit": {
          "description": "Custom tag values that are set for the issue.",
          "$ref": "#/definitions/Custom Tag"
        },
        "issues": {
          "type": "array",
          "description": "Issues to audit",
          "items": {
            "$ref": "#/definitions/EntityStateIdentifier"
          }
        }
      },
      "description": "Request to update custom tag for the issues"
    },
    "IssueViewTemplate": {
      "type": "object",
      "required": [
        "objectVersion"
      ],
      "properties": {
        "dataVersion": {
          "type": "integer",
          "format": "int64",
          "description": "Issue data version for which template is created."
        },
        "description": {
          "type": "string",
          "description": "Template description."
        },
        "engineType": {
          "type": "string",
          "description": "Engine type for which template is created."
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Unique identifier of the issue view template.",
          "readOnly": true
        },
        "metadataId": {
          "type": "integer",
          "format": "int64",
          "description": "Id of the plugin meta data for which template is created."
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Object version."
        },
        "templateData": {
          "type": "array",
          "description": "Actual template JSON data.",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TemplateItem"
            }
          }
        }
      },
      "description": "Issue view template DTO object."
    },
    "Job": {
      "type": "object",
      "required": [
        "artifactName",
        "cancellable",
        "executionOrder",
        "finishTime",
        "jobClass",
        "jobData",
        "jobGroup",
        "priority",
        "projectName",
        "projectVersionId",
        "projectVersionName",
        "startTime",
        "state",
        "userName"
      ],
      "properties": {
        "artifactName": {
          "type": "string",
          "description": "Artifact name related to this job"
        },
        "cancellable": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if job is cancelable"
        },
        "executionOrder": {
          "type": "number",
          "format": "double",
          "description": "Job execution order"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of job"
        },
        "jobClass": {
          "type": "string",
          "description": "Job class"
        },
        "jobData": {
          "type": "object",
          "description": "Job data"
        },
        "jobGroup": {
          "type": "string",
          "description": "Job group"
        },
        "jobName": {
          "type": "string",
          "description": "identifier of job",
          "readOnly": true
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Job priority"
        },
        "projectName": {
          "type": "string",
          "description": "Application name related to this job"
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "Application version identifier related to this job"
        },
        "projectVersionName": {
          "type": "string",
          "description": "Application version name related to this job"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of job"
        },
        "state": {
          "type": "string",
          "description": "Job State",
          "enum": [
            "PREPARED",
            "FINISHED",
            "RUNNING",
            "DEFERRED",
            "FAILED",
            "CANCELLED"
          ]
        },
        "userName": {
          "type": "string",
          "description": "Name of user this job was created by"
        }
      },
      "description": "Job DTO object"
    },
    "JobCancelRequest": {
      "type": "object",
      "required": [
        "jobIds"
      ],
      "properties": {
        "jobIds": {
          "type": "array",
          "description": "List containing single job ID to cancel",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Request to cancel jobs"
    },
    "JobPriorityChangeCategoryWarning": {
      "type": "object",
      "required": [
        "warningCategory",
        "warningList"
      ],
      "properties": {
        "warningCategory": {
          "type": "string",
          "description": "Job priority change warning category.",
          "readOnly": true
        },
        "warningList": {
          "type": "array",
          "description": "Detailed information about job priority change.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/JobPriorityChangeInfo"
          }
        }
      },
      "description": "Job priority change warning"
    },
    "JobPriorityChangeInfo": {
      "type": "object",
      "required": [
        "count",
        "jobClassName"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Number of the warnings of for the specific job class.",
          "readOnly": true
        },
        "jobClassName": {
          "type": "string",
          "description": "Job class name.",
          "readOnly": true
        }
      },
      "description": "Job priority change information"
    },
    "LDAP entity": {
      "type": "object",
      "required": [
        "distinguishedName",
        "email",
        "firstName",
        "lastName",
        "ldapType",
        "name",
        "roles"
      ],
      "properties": {
        "distinguishedName": {
          "type": "string",
          "description": "Distinguished name of LDAP entity"
        },
        "email": {
          "type": "string",
          "description": "Email of LDAP entity"
        },
        "firstName": {
          "type": "string",
          "description": "First name of LDAP entity"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "LDAP entity identifier",
          "readOnly": true
        },
        "lastName": {
          "type": "string",
          "description": "Last name of LDAP entity"
        },
        "ldapType": {
          "type": "string",
          "description": "Type of LDAP entity.",
          "enum": [
            "NONE",
            "GROUP",
            "USER",
            "ORG_UNIT"
          ]
        },
        "name": {
          "type": "string",
          "description": "LDAP entity name"
        },
        "roles": {
          "type": "array",
          "description": "List of roles pertaining to this LDAP entity",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "userPhoto": {
          "description": "Photo object if LDAP entity is user",
          "$ref": "#/definitions/User photo"
        }
      },
      "description": "An LDAP entity like user, group or organization"
    },
    "LdapRefreshResponse": {
      "type": "object",
      "properties": {
        "data": {
          "description": "LDAP refresh job information",
          "readOnly": true,
          "$ref": "#/definitions/Job"
        }
      },
      "description": "Result of refreshing ldap server"
    },
    "LdapServerDto": {
      "type": "object",
      "required": [
        "attributeDistinguishedName",
        "attributeEmail",
        "attributeFirstName",
        "attributeGroupname",
        "attributeLastName",
        "attributeMember",
        "attributeMemberOf",
        "attributeObjectClass",
        "attributeOrgunitName",
        "attributePassword",
        "attributeUserName",
        "authenticatorType",
        "baseDn",
        "cacheEnabled",
        "cacheEvictionTime",
        "cacheExecutorPoolSize",
        "cacheExecutorPoolSizeMax",
        "cacheMaxThreadsPerCache",
        "checkSslHostname",
        "checkSslTrust",
        "classGroup",
        "classOrgunit",
        "classUser",
        "defaultServer",
        "enabled",
        "id",
        "ignorePartialResultException",
        "nestedGroupsEnabled",
        "objectVersion",
        "pageSize",
        "pagingEnabled",
        "passwordEncoderType",
        "referralsProcessingStrategy",
        "serverName",
        "url",
        "userDn",
        "userPassword",
        "userPhotoEnabled",
        "validationIdleTime",
        "validationTimeLimit"
      ],
      "properties": {
        "attributeDistinguishedName": {
          "type": "string"
        },
        "attributeEmail": {
          "type": "string"
        },
        "attributeFirstName": {
          "type": "string"
        },
        "attributeGroupname": {
          "type": "string"
        },
        "attributeLastName": {
          "type": "string"
        },
        "attributeMember": {
          "type": "string"
        },
        "attributeMemberOf": {
          "type": "string"
        },
        "attributeObjectClass": {
          "type": "string"
        },
        "attributeObjectSid": {
          "type": "string"
        },
        "attributeOrgunitName": {
          "type": "string"
        },
        "attributePassword": {
          "type": "string"
        },
        "attributeThumbnailMimeDefault": {
          "type": "string"
        },
        "attributeThumbnailPhoto": {
          "type": "string"
        },
        "attributeUserName": {
          "type": "string"
        },
        "authenticatorType": {
          "type": "string",
          "enum": [
            "BIND_AUTHENTICATOR",
            "PASSWORD_COMPARISON_AUTHENTICATOR"
          ]
        },
        "baseDn": {
          "type": "string",
          "description": "Distinguished name (DN) of root (base) LDAP entity SSC has access to. If value is set to not empty entity's DN, SSC has access only to this entity and all its children. If value of this attribute is an empty string, SSC has access to whole LDAP entities tree"
        },
        "baseObjectSid": {
          "type": "string"
        },
        "cacheEnabled": {
          "type": "boolean",
          "example": false
        },
        "cacheEvictionTime": {
          "type": "integer",
          "format": "int32"
        },
        "cacheExecutorPoolSize": {
          "type": "integer",
          "format": "int32"
        },
        "cacheExecutorPoolSizeMax": {
          "type": "integer",
          "format": "int32"
        },
        "cacheMaxThreadsPerCache": {
          "type": "integer",
          "format": "int32"
        },
        "checkSslHostname": {
          "type": "boolean",
          "example": false
        },
        "checkSslTrust": {
          "type": "boolean",
          "example": false
        },
        "classGroup": {
          "type": "string"
        },
        "classOrgunit": {
          "type": "string"
        },
        "classUser": {
          "type": "string"
        },
        "defaultServer": {
          "type": "boolean",
          "example": false,
          "description": "Boolean flag that marks LDAP server as default. Default means the server which configuration was imported from ldap.properties legacy configuration file"
        },
        "enabled": {
          "type": "boolean",
          "example": false,
          "description": "Flag that marks server as enabled. All enabled servers are used by SSC. Server can be temporary disabled if it is temporary down."
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "LDAP Server id",
          "readOnly": true
        },
        "ignorePartialResultException": {
          "type": "boolean",
          "example": false
        },
        "nestedGroupsEnabled": {
          "type": "boolean",
          "example": false
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Version of the LDAP server entity to support editing LDAP server entity by multiply administrators",
          "readOnly": true
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "pagingEnabled": {
          "type": "boolean",
          "example": false
        },
        "passwordEncoderType": {
          "type": "string",
          "enum": [
            "NOT_SET",
            "LDAP_SHA_PASSWORD_ENCODER",
            "MD4_PASSWORD_ENCODER",
            "MD5_PASSWORD_ENCODER",
            "SHA_PASSWORD_ENCODER"
          ]
        },
        "referralsProcessingStrategy": {
          "type": "string",
          "enum": [
            "ignore",
            "follow"
          ]
        },
        "saveWithoutValidation": {
          "type": "boolean"
        },
        "searchDns": {
          "type": "string"
        },
        "serverName": {
          "type": "string",
          "description": "Name of the LDAP server to distinguish it from other servers"
        },
        "url": {
          "type": "string"
        },
        "userDn": {
          "type": "string"
        },
        "userPassword": {
          "type": "string"
        },
        "userPhotoEnabled": {
          "type": "boolean",
          "example": false
        },
        "validationIdleTime": {
          "type": "integer",
          "format": "int32"
        },
        "validationTimeLimit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LdapServerTestRequest": {
      "type": "object",
      "required": [
        "ldapConfig"
      ],
      "properties": {
        "ldapConfig": {
          "description": "LDAP server information",
          "$ref": "#/definitions/LdapServerDto"
        }
      },
      "description": "Request to test ldap server"
    },
    "License": {
      "type": "object",
      "properties": {
        "capabilities": {
          "type": "array",
          "description": "List of all license capabilities",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/License capability"
          }
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when license was created",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "License description",
          "readOnly": true
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when license is going to be expired",
          "readOnly": true
        },
        "ownerName": {
          "type": "string",
          "description": "Name of the license owner",
          "readOnly": true
        }
      }
    },
    "License capability": {
      "type": "object",
      "required": [
        "expirationDate",
        "key",
        "value"
      ],
      "properties": {
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "License capability expiration date"
        },
        "key": {
          "type": "string",
          "description": "License capability identifier"
        },
        "value": {
          "type": "string",
          "description": "License capability value"
        }
      },
      "description": "License capability"
    },
    "Local User": {
      "type": "object",
      "required": [
        "dateFrozen",
        "email",
        "failedLoginAttempts",
        "firstName",
        "lastName",
        "passwordNeverExpire",
        "requirePasswordChange",
        "roles",
        "suspended",
        "userName"
      ],
      "properties": {
        "adminPassword": {
          "type": "string"
        },
        "clearPassword": {
          "type": "string"
        },
        "dateFrozen": {
          "type": "string",
          "format": "date-time",
          "description": "Date user's account was frozen"
        },
        "email": {
          "type": "string"
        },
        "failedLoginAttempts": {
          "type": "integer",
          "format": "int32",
          "description": "Number of failed login attempts"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "ID required when referencing an existing Local User",
          "readOnly": true
        },
        "lastName": {
          "type": "string"
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32",
          "description": "LocalUser version stored on the server. This value is used to prevent concurrent updates of LocalUsers.",
          "readOnly": true
        },
        "passwordNeverExpire": {
          "type": "boolean",
          "example": false,
          "description": "True if user's password never expires"
        },
        "requirePasswordChange": {
          "type": "boolean",
          "example": false,
          "description": "Is user required to change password on first login?"
        },
        "roles": {
          "type": "array",
          "description": "List of Roles assigned to user",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "suspended": {
          "type": "boolean",
          "example": false,
          "description": "True if user's account is locked"
        },
        "userName": {
          "type": "string"
        }
      },
      "description": "Local User DTO object"
    },
    "Obsolete policy": {
      "type": "object",
      "properties": {
        "defaultPolicy": {
          "type": "boolean",
          "example": false,
          "description": "True if this obsolete policy is also configured as system default policy"
        },
        "obsoleteAvCount": {
          "type": "integer",
          "format": "int64",
          "description": "Count of application versions where this obsolete policy has been found",
          "readOnly": true
        },
        "policyName": {
          "type": "string",
          "description": "Obsolete prediction policy name found in application version",
          "readOnly": true
        }
      },
      "description": "Audit Assistant obsolete prediction policy"
    },
    "OpenSourceIssue": {
      "type": "object",
      "required": [
        "category",
        "component",
        "controllable",
        "cve",
        "cveUrl",
        "cwe",
        "cweUrl",
        "engineType",
        "filename",
        "invoked",
        "issueInstanceId",
        "license",
        "priority",
        "projectVersionId",
        "type",
        "upgradeToVersion",
        "version"
      ],
      "properties": {
        "category": {
          "type": "string",
          "description": "Category - The category for this issue."
        },
        "component": {
          "type": "string",
          "description": "Component - usually in the format <group>:<artifact>"
        },
        "controllable": {
          "type": "boolean",
          "example": false,
          "description": "Does the application send user input to the vulnerable open source code?"
        },
        "cve": {
          "type": "string",
          "description": "CVE ID in the format CVE-xxxxx-xxxx"
        },
        "cveUrl": {
          "type": "string",
          "description": "CVE URL - URL to get more information about this CVE."
        },
        "cwe": {
          "type": "string",
          "description": "CWE ID in the format CWE-xxxx"
        },
        "cweUrl": {
          "type": "string",
          "description": "CWE URL - URL to get more information about the related CWE"
        },
        "engineType": {
          "type": "string",
          "description": "Engine type"
        },
        "filename": {
          "type": "string",
          "description": "Filename of the component where the CVE exists"
        },
        "hidden": {
          "type": "boolean",
          "example": false,
          "description": "Is this issue hidden?"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Application version issue identifier",
          "readOnly": true
        },
        "invoked": {
          "type": "boolean",
          "example": false,
          "description": "Does the application call the vulnerable open source code?"
        },
        "issueInstanceId": {
          "type": "string",
          "description": "Issue instance identifier"
        },
        "license": {
          "type": "string",
          "description": "Component license"
        },
        "priority": {
          "type": "string",
          "description": "Priority"
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "Application version identifier"
        },
        "removed": {
          "type": "boolean",
          "example": false,
          "description": "Is this issue removed?"
        },
        "suppressed": {
          "type": "boolean",
          "example": false,
          "description": "Is this issue suppressed?"
        },
        "type": {
          "type": "string",
          "description": "Component type"
        },
        "upgradeToVersion": {
          "type": "string",
          "description": "Component version to upgrade to"
        },
        "version": {
          "type": "string",
          "description": "Component version containing the CVE vulnerability"
        }
      },
      "description": "OpenSourceIssue DTO object."
    },
    "PasswordStrengthCheckRequest": {
      "type": "object",
      "required": [
        "password"
      ],
      "properties": {
        "extraDictionary": {
          "type": "array",
          "description": "Get additional words to add to dictionary. If null, current user data will be added (for example: username, first name, last name, email).",
          "items": {
            "type": "string"
          }
        },
        "password": {
          "type": "string",
          "description": "Get password or its part from input"
        }
      },
      "description": "Password strength check request"
    },
    "PasswordStrengthCheckResponse": {
      "type": "object",
      "properties": {
        "score": {
          "type": "integer",
          "format": "int32",
          "description": "Password strength score",
          "readOnly": true
        }
      },
      "description": "Result of checking strength of password"
    },
    "Performance Indicator History": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "ID required when referencing an existing Performance Indicator History object",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "range": {
          "type": "string",
          "description": "Range of values"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "number",
          "format": "float",
          "description": "Required if referencing an existing Performance Indicator History  object"
        }
      },
      "description": "Performance Indicator History DTO object."
    },
    "PerformanceIndicator": {
      "type": "object",
      "required": [
        "equation",
        "name",
        "range"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "equation": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "inUse": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32"
        },
        "publishVersion": {
          "type": "integer",
          "format": "int32"
        },
        "range": {
          "type": "string",
          "enum": [
            "Integer",
            "Percent"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "SYSTEM_DEFINED",
            "USER_DEFINED"
          ]
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        }
      },
      "description": "Performance indicators enable you to combine variables into metrics that are\nnormalized across application version boundaries"
    },
    "Permission": {
      "type": "object",
      "required": [
        "dependsOnPermission",
        "description",
        "name",
        "permittedActions",
        "userOnly"
      ],
      "properties": {
        "assignByDefault": {
          "type": "boolean"
        },
        "dependsOnPermission": {
          "type": "array",
          "description": "Set of permissions this permission requires",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Permission"
          }
        },
        "description": {
          "type": "string",
          "description": "Permission description",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Permission id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Permission name",
          "readOnly": true
        },
        "permittedActions": {
          "type": "array",
          "description": "Actions this permission is allowed to perform",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "userOnly": {
          "type": "boolean",
          "example": false,
          "description": "Flag is true if this permission can only be assigned to users, and not groups or organizations",
          "readOnly": true
        }
      },
      "description": "A permission in the server"
    },
    "Plugin Localization": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "Plugin Meta Data": {
      "type": "object",
      "required": [
        "apiVersion",
        "dataVersion",
        "lastUsedOfKind",
        "pluginConfiguration",
        "pluginId",
        "pluginName",
        "pluginState",
        "pluginType",
        "pluginVersion",
        "systemInstalled"
      ],
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "Version string of the SSC plugin api used to develop the plugin"
        },
        "dataVersion": {
          "type": "integer",
          "format": "int32",
          "description": "An integer used to tag the set of issue attributes provided by this plugin."
        },
        "description": {
          "type": "string",
          "description": "Plugin description",
          "readOnly": true
        },
        "engineType": {
          "type": "string",
          "description": "Name of the scan engine supported by the plugin. Value is defined for parser plugins only",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Plugin unique identifier",
          "readOnly": true
        },
        "lastUsedOfKind": {
          "type": "boolean",
          "example": false,
          "description": "Tracks whether this plugin instance was the most recently used of its kind"
        },
        "pluginConfiguration": {
          "type": "array",
          "description": "Additional configuration properties used by the plugin",
          "items": {
            "$ref": "#/definitions/PluginConfiguration"
          }
        },
        "pluginId": {
          "type": "string",
          "description": "Identifier of the plugin, usually a fully-qualified classname. Non-unique when multiple versions of same plugin exist"
        },
        "pluginName": {
          "type": "string",
          "description": "A string name for the plugin"
        },
        "pluginState": {
          "type": "string",
          "description": "State of the plugin instance",
          "enum": [
            "STOPPED",
            "STARTING",
            "STARTED",
            "STOPPING",
            "FAILED_TO_START",
            "FAILED_TO_STOP",
            "UNKNOWN"
          ]
        },
        "pluginType": {
          "type": "string",
          "description": "Denotes functionality of the plugin instance, such as scan parsing, bugtracker integration.",
          "enum": [
            "SCAN_PARSER",
            "BUG_TRACKER",
            "LEGACY_BUG_TRACKER"
          ]
        },
        "pluginVersion": {
          "type": "string",
          "description": "A version string of the implementation code of the plugin"
        },
        "supportedEngineVersions": {
          "type": "string",
          "description": "Versions of the scan engine results supported by the plugin. Value is defined for parser plugins only",
          "readOnly": true
        },
        "systemInstalled": {
          "type": "boolean",
          "example": false,
          "description": "whether the plugin instance was installed by adding the jar to a special system folder"
        },
        "vendorName": {
          "type": "string",
          "description": "Name of the company / organization that developed the plugin",
          "readOnly": true
        },
        "vendorUrl": {
          "type": "string",
          "description": "Plugin vendor's web site URL",
          "readOnly": true
        }
      },
      "description": "plugin meta data holds attributes of the plugins installed in the application."
    },
    "PluginConfiguration": {
      "type": "object",
      "properties": {
        "parameterName": {
          "type": "string"
        },
        "parameterType": {
          "type": "string"
        }
      },
      "description": "additional configuration needed for a plugin."
    },
    "PluginDisableRequest": {
      "type": "object",
      "required": [
        "pluginIds"
      ],
      "properties": {
        "pluginIds": {
          "type": "array",
          "description": "List containing single plugin ID to disable",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "Request to disable plugin"
    },
    "PluginEnableRequest": {
      "type": "object",
      "required": [
        "pluginIds"
      ],
      "properties": {
        "pluginIds": {
          "type": "array",
          "description": "List containing single plugin ID to enable",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "Request to enable plugin"
    },
    "Policy replacement": {
      "type": "object",
      "properties": {
        "fromPolicy": {
          "type": "string"
        },
        "toPolicy": {
          "type": "string"
        }
      },
      "description": "Audit Assistant prediction policy replacement mapping"
    },
    "Project": {
      "type": "object",
      "required": [
        "createdBy",
        "creationDate",
        "issueTemplateId",
        "name"
      ],
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "User that created this application"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date created",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Id",
          "readOnly": true
        },
        "issueTemplateId": {
          "type": "string",
          "description": "Id of the Issue Template used"
        },
        "name": {
          "type": "string",
          "description": "Name"
        }
      },
      "description": "An application on the server"
    },
    "Project Version": {
      "type": "object",
      "required": [
        "active",
        "bugTrackerEnabled",
        "bugTrackerPluginId",
        "committed",
        "createdBy",
        "creationDate",
        "description",
        "issueTemplateId",
        "issueTemplateModifiedTime",
        "issueTemplateName",
        "latestScanId",
        "masterAttrGuid",
        "name",
        "serverVersion",
        "snapshotOutOfDate",
        "staleIssueTemplate"
      ],
      "properties": {
        "active": {
          "type": "boolean",
          "example": false,
          "description": "True if this version is active"
        },
        "assignedIssuesCount": {
          "type": "integer",
          "format": "int64"
        },
        "attachmentsOutOfDate": {
          "type": "boolean"
        },
        "autoPredict": {
          "type": "boolean",
          "example": false,
          "description": "true if auto-prediction is enabled for this application version; false otherwise. This property modification is protected by AUDITASSISTANT_MANAGE permission."
        },
        "bugTrackerEnabled": {
          "type": "boolean",
          "example": false,
          "description": "true if the bug tracker plugin assigned to the application version is currently enabled in the system"
        },
        "bugTrackerPluginId": {
          "type": "string",
          "description": "identifier of the bug tracker plugin (if any) assigned to this application version"
        },
        "committed": {
          "type": "boolean",
          "example": false,
          "description": "True if this version is committed and ready to be used"
        },
        "createdBy": {
          "type": "string",
          "description": "User that created this version"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date this version was created"
        },
        "currentState": {
          "$ref": "#/definitions/Project Version State"
        },
        "customTagValuesAutoApply": {
          "type": "boolean",
          "example": false,
          "description": "true if custom tag values auto-apply is enabled for this application version; false otherwise. This property modification is protected by AUDITASSISTANT_MANAGE permission."
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Id",
          "readOnly": true
        },
        "issueTemplateId": {
          "type": "string",
          "description": "Id of the Issue Template used by this version"
        },
        "issueTemplateModifiedTime": {
          "type": "integer",
          "format": "int64",
          "description": "Last time the Issue Template was modified"
        },
        "issueTemplateName": {
          "type": "string",
          "description": "Name of the Issue Template used by this version"
        },
        "latestScanId": {
          "type": "integer",
          "format": "int64",
          "description": "id of the latest scan uploaded to application version"
        },
        "loadProperties": {
          "type": "string"
        },
        "masterAttrGuid": {
          "type": "string",
          "description": "Guid of the primary custom tag for this version"
        },
        "migrationVersion": {
          "type": "number",
          "format": "float"
        },
        "mode": {
          "type": "string",
          "enum": [
            "NONE",
            "ASSESSMENT",
            "BASIC",
            "FULL"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name"
        },
        "obfuscatedId": {
          "type": "string"
        },
        "predictionPolicy": {
          "type": "string",
          "description": "Name of the policy to be used for predictions for this application version. Modification of this property is protected by AUDITASSISTANT_MANAGE permission."
        },
        "project": {
          "$ref": "#/definitions/Project"
        },
        "refreshRequired": {
          "type": "boolean"
        },
        "securityGroup": {
          "type": "string"
        },
        "serverVersion": {
          "type": "number",
          "format": "float",
          "description": "Server version this version's data supports"
        },
        "siteId": {
          "type": "string"
        },
        "snapshotOutOfDate": {
          "type": "boolean",
          "example": false,
          "description": "True if the most recent snapshot is not accurate"
        },
        "sourceBasePath": {
          "type": "string"
        },
        "staleIssueTemplate": {
          "type": "boolean",
          "example": false,
          "description": "True if this version's Issue Template has changed or been modified"
        },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "DELETING",
            "ARCHIVED",
            "COPYING_ISSUES"
          ]
        },
        "tracesOutOfDate": {
          "type": "boolean"
        }
      },
      "description": "A version of an application on the server"
    },
    "Project Version State": {
      "type": "object",
      "required": [
        "analysisResultsExist",
        "analysisUploadEnabled",
        "attentionRequired",
        "auditEnabled",
        "batchBugSubmissionExists",
        "committed",
        "criticalPriorityIssueCountDelta",
        "deltaPeriod",
        "extraMessage",
        "hasCustomIssues",
        "id",
        "issueCountDelta",
        "lastFprUploadDate",
        "metricEvaluationDate",
        "percentAuditedDelta",
        "percentCriticalPriorityIssuesAuditedDelta"
      ],
      "properties": {
        "analysisResultsExist": {
          "type": "boolean",
          "example": false
        },
        "analysisUploadEnabled": {
          "type": "boolean",
          "example": false
        },
        "attentionRequired": {
          "type": "boolean",
          "example": false
        },
        "auditEnabled": {
          "type": "boolean",
          "example": false
        },
        "batchBugSubmissionExists": {
          "type": "boolean",
          "example": false
        },
        "committed": {
          "type": "boolean",
          "example": false,
          "description": "False if application version is in an incomplete state"
        },
        "criticalPriorityIssueCountDelta": {
          "type": "integer",
          "format": "int32"
        },
        "deltaPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "extraMessage": {
          "type": "string"
        },
        "hasCustomIssues": {
          "type": "boolean",
          "example": false
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "issueCountDelta": {
          "type": "integer",
          "format": "int32"
        },
        "lastFprUploadDate": {
          "type": "string",
          "format": "date-time"
        },
        "metricEvaluationDate": {
          "type": "string",
          "format": "date-time"
        },
        "percentAuditedDelta": {
          "type": "number",
          "format": "float"
        },
        "percentCriticalPriorityIssuesAuditedDelta": {
          "type": "number",
          "format": "float"
        }
      },
      "description": "Application Version State DTO object"
    },
    "Project version bug tracker": {
      "type": "object",
      "required": [
        "assignedBugtrackerShortNameIfKnown",
        "assignedPluginId",
        "bugStateManagementConfig",
        "bugTracker",
        "bugtrackerIsAssigned"
      ],
      "properties": {
        "assignedBugtrackerShortNameIfKnown": {
          "type": "string",
          "description": "the short display name of the bug tracker. (will be null if no bugtracker is assigned or if there is no currently installed plugin matching the assigned pluginId.)"
        },
        "assignedPluginId": {
          "type": "string",
          "description": "identifier of the bug tracker plugin assigned to the application version. (Bug tracker integration will be active only if the plugin is also enabled in the system.)"
        },
        "bugStateManagementConfig": {
          "description": "Bug state management configuration",
          "$ref": "#/definitions/BugStateManagementCfg"
        },
        "bugTracker": {
          "description": "Bug tracker (note that this field will be null if the assigned bug tracker is not enabled in the SSC plugin framework.)",
          "$ref": "#/definitions/Bug Tracker"
        },
        "bugtrackerIsAssigned": {
          "type": "boolean",
          "example": false,
          "description": "indicates whether a bug tracker is assigned to the application version"
        },
        "clearAppVersionBugs": {
          "type": "boolean"
        }
      },
      "description": "Object containing application version and bug tracker related data"
    },
    "Project version issue": {
      "type": "object",
      "required": [
        "analyzer",
        "bugURL",
        "confidence",
        "displayEngineType",
        "engineCategory",
        "engineType",
        "externalBugId",
        "folderGuid",
        "folderId",
        "foundDate",
        "friority",
        "fullFileName",
        "hasAttachments",
        "hasCorrelatedIssues",
        "hidden",
        "impact",
        "issueInstanceId",
        "issueName",
        "kingdom",
        "likelihood",
        "lineNumber",
        "primaryLocation",
        "primaryRuleGuid",
        "primaryTag",
        "projectName",
        "projectVersionId",
        "projectVersionName",
        "removed",
        "removedDate",
        "reviewed",
        "revision",
        "scanStatus",
        "severity",
        "suppressed"
      ],
      "properties": {
        "analyzer": {
          "type": "string",
          "description": "Analyzer"
        },
        "audited": {
          "type": "boolean",
          "example": false,
          "description": "Flag is set for issues that has been audited and primary tag value was set for this issue."
        },
        "bugURL": {
          "type": "string",
          "description": "Bug url"
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Issue confidence"
        },
        "displayEngineType": {
          "type": "string",
          "description": "Display name for engine type"
        },
        "engineCategory": {
          "type": "string",
          "description": "Engine category",
          "enum": [
            "STATIC",
            "DYNAMIC"
          ]
        },
        "engineType": {
          "type": "string",
          "description": "Engine type"
        },
        "externalBugId": {
          "type": "string",
          "description": "Identifying information for the bug in the external bug tracking system. The actual format depends on the bug tracker plugin which filed the bug."
        },
        "folderGuid": {
          "type": "string",
          "description": "Issue folder globally unique identifier"
        },
        "folderId": {
          "type": "integer",
          "format": "int64",
          "description": "Deprecated - Issue folder identifier.  This may be incorrect or invalid.  Please use folderGuid instead."
        },
        "foundDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when issue found"
        },
        "friority": {
          "type": "string",
          "description": "Friority"
        },
        "fullFileName": {
          "type": "string",
          "description": "Full file name where issue found"
        },
        "hasAttachments": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if issue has attachments"
        },
        "hasComments": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if issue has audit comments"
        },
        "hasCorrelatedIssues": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if issue has other correlated issues"
        },
        "hidden": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if issue is hidden"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Application version issue identifier",
          "readOnly": true
        },
        "impact": {
          "type": "number",
          "format": "float",
          "description": "Issue impact"
        },
        "issueInstanceId": {
          "type": "string",
          "description": "Issue instance identifier"
        },
        "issueName": {
          "type": "string",
          "description": "Issue name"
        },
        "issueStatus": {
          "type": "string",
          "description": "Flag represents issue review status and can have 3 types of values: Unreviewed, Under Review, Reviewed."
        },
        "kingdom": {
          "type": "string",
          "description": "Kingdom"
        },
        "lastScanId": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the latest scan that found the issue"
        },
        "likelihood": {
          "type": "number",
          "format": "float",
          "description": "Likelihood of issue"
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Line number where issue found"
        },
        "primaryLocation": {
          "type": "string",
          "description": "Issue primary location"
        },
        "primaryRuleGuid": {
          "type": "string",
          "description": "Primary rule global unique identifier"
        },
        "primaryTag": {
          "type": "string",
          "description": "Issue primary tag"
        },
        "primaryTagValueAutoApplied": {
          "type": "boolean",
          "example": false,
          "description": "Flag equals true if value of custom tag was applied automatically"
        },
        "projectName": {
          "type": "string",
          "description": "Application name"
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "Application version identifier"
        },
        "projectVersionName": {
          "type": "string",
          "description": "Application version name"
        },
        "removed": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if issue is suppressed"
        },
        "removedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when issue removed"
        },
        "reviewed": {
          "type": "string",
          "description": "Issue reviewer"
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "Application version revision"
        },
        "scanStatus": {
          "type": "string",
          "description": "Scan status"
        },
        "severity": {
          "type": "number",
          "format": "float",
          "description": "Issue severity"
        },
        "suppressed": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if issue is suppressed"
        }
      },
      "description": "Application version issue DTO object"
    },
    "Project version issue details": {
      "type": "object",
      "required": [
        "analyzer",
        "assignedUser",
        "attackPayload",
        "attackType",
        "audited",
        "brief",
        "confidence",
        "cookie",
        "customTagValues",
        "detail",
        "displayEngineType",
        "downloadRequest",
        "downloadResponse",
        "engineCategory",
        "engineType",
        "foundDate",
        "friority",
        "fullFileName",
        "hidden",
        "impact",
        "issueInstanceId",
        "issueName",
        "issueState",
        "kingdom",
        "likelihood",
        "method",
        "primaryRuleGuid",
        "projectVersionId",
        "recommendation",
        "references",
        "removedDate",
        "requestBody",
        "requestHeader",
        "requestParameter",
        "response",
        "responseHeader",
        "revision",
        "scanStatus",
        "severity",
        "shortFileName",
        "suppressed",
        "tips",
        "traceNodes",
        "triggerString",
        "url",
        "vulnerableParameter"
      ],
      "properties": {
        "accuracy": {
          "type": "number",
          "format": "float",
          "description": "Vulnerability accuracy",
          "readOnly": true
        },
        "analyzer": {
          "type": "string",
          "description": "Analyzer"
        },
        "appSecTrainingUrl": {
          "type": "string",
          "description": "A link to access application security training for this issue (available only if the SSC administrator has enabled it)",
          "readOnly": true
        },
        "assignedUser": {
          "description": "User assigned to issue",
          "$ref": "#/definitions/AssignedUser"
        },
        "attackPayload": {
          "type": "string",
          "description": "Attack payload"
        },
        "attackType": {
          "type": "string",
          "description": "Attack type",
          "enum": [
            "URL",
            "REQUEST_HEADER",
            "REQUEST_COOKIE",
            "PARAMETER",
            "MULTIPLE"
          ]
        },
        "audited": {
          "type": "boolean",
          "example": false,
          "description": "Attribute is set to true if issue is audited (primary tag values is set for this issue)"
        },
        "brief": {
          "type": "string",
          "description": "Issue brief"
        },
        "className": {
          "type": "string",
          "description": "Name of class where the vulnerability has been found",
          "readOnly": true
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Issue confidence"
        },
        "cookie": {
          "type": "string",
          "description": "Cookie"
        },
        "customAttributes": {
          "type": "object",
          "description": "All the additional custom attributes defined for the issue by parser plugin",
          "readOnly": true
        },
        "customTagValues": {
          "type": "array",
          "description": "Custom tag values",
          "items": {
            "$ref": "#/definitions/Custom Tag"
          }
        },
        "dataVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Version of the issue data. This attribute is initialized only for issues parsed by 3rd party parsers and is not set for the issues parsed by standard parsers included in SSC installation.",
          "readOnly": true
        },
        "detail": {
          "type": "string",
          "description": "Issue detail"
        },
        "displayEngineType": {
          "type": "string",
          "description": "Display engine type"
        },
        "downloadRequest": {
          "type": "boolean",
          "example": false,
          "description": "Request contains binary or large data"
        },
        "downloadResponse": {
          "type": "boolean",
          "example": false,
          "description": "Response contains binary or large data\""
        },
        "engineCategory": {
          "type": "string",
          "description": "Engine category",
          "enum": [
            "STATIC",
            "DYNAMIC"
          ]
        },
        "engineType": {
          "type": "string",
          "description": "Engine type"
        },
        "foundDate": {
          "type": "string",
          "format": "date-time",
          "description": "Issue found date"
        },
        "friority": {
          "type": "string",
          "description": "Fortify priority order (Friority)"
        },
        "fullFileName": {
          "type": "string",
          "description": "Full file name where issue found"
        },
        "functionName": {
          "type": "string",
          "description": "Name of function located in the file where the vulnerability has been found",
          "readOnly": true
        },
        "hasViewTemplate": {
          "type": "boolean",
          "example": false,
          "description": "Flag that indicates if there is a view template that should be used to display issue details on UI.",
          "readOnly": true
        },
        "hidden": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if issue is hidden"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier",
          "readOnly": true
        },
        "impact": {
          "type": "number",
          "format": "float",
          "description": "Issue impact"
        },
        "issueInstanceId": {
          "type": "string",
          "description": "Issue instance identifier"
        },
        "issueName": {
          "type": "string",
          "description": "Name of the issue category"
        },
        "issueState": {
          "type": "string",
          "description": "Flag represents issue state and says if issue is not an issue or open issue. Rule to calculate value of thi flag is defined in issue template."
        },
        "issueStatus": {
          "type": "string",
          "description": "Flag represents issue review status",
          "enum": [
            "Unreviewed",
            "Under Review",
            "Reviewed"
          ]
        },
        "kingdom": {
          "type": "string",
          "description": "Issue kingdom"
        },
        "lastScanId": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the latest scan that found the issue"
        },
        "likelihood": {
          "type": "number",
          "format": "float",
          "description": "Issue likelihood"
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Line number in the file where the vulnerability has been found",
          "readOnly": true
        },
        "mappedCategory": {
          "type": "string",
          "description": "Name of the Fortify category of the vulnerability",
          "readOnly": true
        },
        "method": {
          "type": "string",
          "description": "Method where issue found"
        },
        "minVirtualCallConfidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence level which estimates that vulnerability found in virtual (overridden) function will be executed by tainted source",
          "readOnly": true
        },
        "packageName": {
          "type": "string",
          "description": "Name of package where the vulnerability has been found",
          "readOnly": true
        },
        "primaryRuleGuid": {
          "type": "string",
          "description": "Primary rule global unique identifier"
        },
        "primaryTag": {
          "description": "Identifier, name and value of the custom tag that is selected as a primary tag for the application version the issue belongs to.",
          "$ref": "#/definitions/Issue Primary Tag"
        },
        "probability": {
          "type": "number",
          "format": "float",
          "description": "Vulnerability probability",
          "readOnly": true
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "Application version identifier"
        },
        "recommendation": {
          "type": "string",
          "description": "Issue recommendation"
        },
        "references": {
          "type": "string",
          "description": "References"
        },
        "remediationConstant": {
          "type": "number",
          "format": "float",
          "description": "Level of complexity to fix this vulnerability",
          "readOnly": true
        },
        "removedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Issue removed date"
        },
        "requestBody": {
          "type": "string",
          "description": "Request body"
        },
        "requestHeader": {
          "type": "string",
          "description": "Request header"
        },
        "requestParameter": {
          "type": "string",
          "description": "Request parameter"
        },
        "requestTriggers": {
          "type": "array",
          "description": "Triggers in the request",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Trigger"
          }
        },
        "response": {
          "type": "string",
          "description": "Response"
        },
        "responseHeader": {
          "type": "string",
          "description": "Response header"
        },
        "responseTriggers": {
          "type": "array",
          "description": "Triggers in the response",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Trigger"
          }
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "Revision number"
        },
        "scanStatus": {
          "type": "string",
          "description": "Scan status"
        },
        "severity": {
          "type": "number",
          "format": "float",
          "description": "Issue severity"
        },
        "shortFileName": {
          "type": "string",
          "description": "Short file name where issue found"
        },
        "sink": {
          "type": "string",
          "description": "Taint sink name",
          "readOnly": true
        },
        "sinkContext": {
          "type": "string",
          "description": "Name of the context that contains vulnerability sink",
          "readOnly": true
        },
        "source": {
          "type": "string",
          "description": "Name of the a program point where tainted data enter the program",
          "readOnly": true
        },
        "sourceContext": {
          "type": "string",
          "description": "Name of the context that contains vulnerability sources",
          "readOnly": true
        },
        "sourceFile": {
          "type": "string",
          "description": "File name where vulnerability source is located.",
          "readOnly": true
        },
        "sourceLine": {
          "type": "integer",
          "format": "int32",
          "description": "Line number in the source file where vulnerability source is located",
          "readOnly": true
        },
        "suppressed": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if issue is suppressed"
        },
        "taintFlag": {
          "type": "string",
          "description": "An attribute of tainted data that enables the data flow analyzer to discriminate between different types of taint",
          "readOnly": true
        },
        "tips": {
          "type": "string",
          "description": "Issue tips"
        },
        "traceNodes": {
          "type": "array",
          "description": "Issue trace nodes",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TraceNodeDto"
            }
          }
        },
        "triggerString": {
          "type": "string",
          "description": "Trigger string"
        },
        "url": {
          "type": "string",
          "description": "Issue url"
        },
        "vulnerableParameter": {
          "type": "string",
          "description": "Vulnerable parameter"
        }
      },
      "description": "Application version issue details DTO object"
    },
    "Project version issue group": {
      "type": "object",
      "required": [
        "auditedCount",
        "cleanName",
        "id",
        "name",
        "totalCount",
        "visibleCount"
      ],
      "properties": {
        "auditedCount": {
          "type": "integer",
          "format": "int32",
          "description": "Audited issue count"
        },
        "cleanName": {
          "type": "string",
          "description": "Issue group name not containing count, dashes etc"
        },
        "id": {
          "type": "string",
          "description": "Identifier"
        },
        "name": {
          "type": "string",
          "description": "Issue group name"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32",
          "description": "Issue total count"
        },
        "visibleCount": {
          "type": "integer",
          "format": "int32",
          "description": "Visible issues count"
        }
      },
      "description": "Application version issue group DTO object"
    },
    "ProjectVersionAuditByAssistantRequest": {
      "type": "object",
      "required": [
        "projectVersionIds"
      ],
      "properties": {
        "projectVersionIds": {
          "type": "array",
          "description": "List containing single application version ID to send audit assistant",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "Request to send the application version's data to Audit Assistant for assessment"
    },
    "ProjectVersionAuthEntityAssignRequest": {
      "type": "object",
      "required": [
        "projectVersionIds"
      ],
      "properties": {
        "projectVersionIds": {
          "type": "array",
          "description": "Application version ids to assign auth entity",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "Request to associate application versions to auth entity"
    },
    "ProjectVersionClearBugLinksRequest": {
      "type": "object",
      "required": [
        "externalBugIds"
      ],
      "properties": {
        "externalBugIds": {
          "type": "array",
          "description": "Identifying information for the bug links to be cleared. (The format of an externalBugId depends on the SSC bug tracker plugin which filed the bug)",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Request to clear the specified bug links from the application version"
    },
    "ProjectVersionCopyCurrentStateRequest": {
      "type": "object",
      "required": [
        "previousProjectVersionId",
        "projectVersionId"
      ],
      "properties": {
        "previousProjectVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "Previous application version id"
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "Application version id"
        }
      },
      "description": "Request to copy the current state from one application version to another"
    },
    "ProjectVersionCopyPartialRequest": {
      "type": "object",
      "required": [
        "copyAnalysisProcessingRules",
        "copyBugTrackerConfiguration",
        "copyCustomTags",
        "previousProjectVersionId",
        "projectVersionId"
      ],
      "properties": {
        "copyAnalysisProcessingRules": {
          "type": "boolean",
          "example": false,
          "description": "Will copy analysis processing rules"
        },
        "copyBugTrackerConfiguration": {
          "type": "boolean",
          "example": false,
          "description": "Will copy bugtracker configuration"
        },
        "copyCustomTags": {
          "type": "boolean",
          "example": false,
          "description": "Will copy custom tags"
        },
        "previousProjectVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "Previous application version id"
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "Application version id"
        }
      },
      "description": "Request to copy data selectively from one application version to another"
    },
    "ProjectVersionPurgeRequest": {
      "type": "object",
      "required": [
        "projectVersionIds"
      ],
      "properties": {
        "projectVersionIds": {
          "type": "array",
          "description": "List containing single application version ID to purge",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "Request to purge the artifacts in application versions"
    },
    "ProjectVersionRefreshRequest": {
      "type": "object",
      "required": [
        "projectVersionIds"
      ],
      "properties": {
        "projectVersionIds": {
          "type": "array",
          "description": "List containing single application version ID to refresh",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "Request to refresh the application versions and trigger the historical snapshot job"
    },
    "ProjectVersionRefreshResponse": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Triggered history snapshot job information",
          "readOnly": true,
          "$ref": "#/definitions/Fortify job"
        }
      },
      "description": "Response of refreshing application version and triggered history snapshot job"
    },
    "ProjectVersionTestRequest": {
      "type": "object",
      "required": [
        "projectName",
        "projectVersionName"
      ],
      "properties": {
        "projectName": {
          "type": "string",
          "description": "Application name to search"
        },
        "projectVersionName": {
          "type": "string",
          "description": "Application version name to search"
        }
      },
      "description": "Request to check whether a application version already exists in the system"
    },
    "ProjectVersionTestResponse": {
      "type": "object",
      "properties": {
        "found": {
          "type": "boolean",
          "example": false,
          "description": "Whether the application version was found",
          "readOnly": true
        }
      },
      "description": "Response of testing whether application version with name and exists in specified application"
    },
    "ProjectVersionTrainAuditAssistantRequest": {
      "type": "object",
      "required": [
        "projectVersionIds"
      ],
      "properties": {
        "projectVersionIds": {
          "type": "array",
          "description": "List containing single application version ID to send training for audit assistant",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "Request to send the application version's data to Audit Assistant for training"
    },
    "RefreshAuditAssistantPoliciesRequest": {
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "currentPolicies": {
          "type": "array",
          "description": "A list with current policy names from Audit Assistant server.",
          "items": {
            "type": "string"
          }
        },
        "obsoletePolicies": {
          "type": "array",
          "description": "A list of policy objects containing existing obsolete AV policy names as a result of comparison with current server policies.",
          "items": {
            "$ref": "#/definitions/Obsolete policy"
          }
        },
        "policyReplacements": {
          "type": "array",
          "description": "Mapping between old (obsolete) and new (existing) policy names; current AV policies and/or system default policy are to be replaced",
          "items": {
            "$ref": "#/definitions/Policy replacement"
          }
        },
        "properties": {
          "type": "array",
          "description": "Audit Assistant server configuration properties to be used policies retrieval from Fortify Scan Analytics server ",
          "items": {
            "$ref": "#/definitions/ConfigProperty"
          }
        }
      },
      "description": "Audit Assistant server configuration (mandatory) and policy replacement mapping (optional)"
    },
    "Report Auth Entity": {
      "type": "object",
      "required": [
        "userName"
      ],
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First name"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastName": {
          "type": "string",
          "description": "Last name"
        },
        "userName": {
          "type": "string",
          "description": "User name"
        }
      },
      "description": "The Fortify User or Ldap User associated with a report"
    },
    "Report Definition": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "crossApp": {
          "type": "boolean",
          "example": false,
          "description": "True if report applies to multiple application versions"
        },
        "description": {
          "type": "string",
          "description": "Report description"
        },
        "fileName": {
          "type": "string",
          "description": "The name of the report definition file"
        },
        "guid": {
          "type": "string",
          "description": "Report definition GUID"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Report definition identifier",
          "readOnly": true
        },
        "inUse": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether the report definition is in use"
        },
        "name": {
          "type": "string",
          "description": "Report name"
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Object version"
        },
        "parameters": {
          "type": "array",
          "description": "List of report parameters",
          "items": {
            "$ref": "#/definitions/Report Parameter"
          }
        },
        "publishVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Publish version"
        },
        "renderingEngine": {
          "type": "string",
          "description": "The engine used to render the report, e.g. BIRT"
        },
        "templateDocId": {
          "type": "integer",
          "format": "int64",
          "description": "Template doc identifier"
        },
        "type": {
          "type": "string",
          "description": "Type of report",
          "enum": [
            "PROJECT",
            "SSA_PROJECT",
            "SSA_PORTFOLIO",
            "PORTFOLIO",
            "COMPLIANCE",
            "ISSUE",
            "RUNTIME_REPORTS"
          ]
        },
        "typeDefaultText": {
          "type": "string",
          "description": "Report type default text"
        }
      },
      "description": "Report Definition DTO object"
    },
    "Report Library": {
      "type": "object",
      "required": [
        "guid"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "fileDocId": {
          "type": "integer",
          "format": "int64",
          "description": "Report library file doc identifier"
        },
        "guid": {
          "type": "string",
          "description": "Report library unique identifier"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Object version"
        },
        "publishVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Publish version"
        }
      },
      "description": "Report Library DTO object"
    },
    "Report Parameter": {
      "type": "object",
      "required": [
        "identifier",
        "reportDefinitionId",
        "type"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "identifier": {
          "type": "string",
          "description": "Report parameter identifier"
        },
        "name": {
          "type": "string"
        },
        "paramOrder": {
          "type": "integer",
          "format": "int32",
          "description": "Order in which the parameter should appear"
        },
        "reportDefinitionId": {
          "type": "integer",
          "format": "int64",
          "description": "Report definition identifier"
        },
        "reportParameterOptions": {
          "type": "array",
          "description": "Report parameter options",
          "items": {
            "$ref": "#/definitions/Report Parameter Option"
          }
        },
        "type": {
          "type": "string",
          "description": "Report parameter type",
          "enum": [
            "SINGLE_PROJECT",
            "SINGLE_RUNTIME_APP",
            "SINGLE_SSA_PROJECT",
            "MULTI_PROJECT",
            "MULTI_RUNTIME_APP",
            "MULTI_SSA_PROJECT",
            "PROJECT_ATTRIBUTE",
            "STRING",
            "BOOLEAN",
            "DATE",
            "SINGLE_SELECT_DEFAULT",
            "METADEF_GUID"
          ]
        }
      },
      "description": "Report Parameter DTO object"
    },
    "Report Parameter Option": {
      "type": "object",
      "required": [
        "displayValue",
        "reportValue"
      ],
      "properties": {
        "defaultValue": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether option is the default value"
        },
        "description": {
          "type": "string"
        },
        "displayValue": {
          "type": "string",
          "description": "Report parameter option display value"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "description": "Order in which the parameter option should appear"
        },
        "reportValue": {
          "type": "string",
          "description": "Report parameter option report value"
        }
      },
      "description": "Report Parameter Option DTO object"
    },
    "Report Project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "projectVersionsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of application versions"
        },
        "versions": {
          "type": "array",
          "description": "List of report application versions",
          "items": {
            "$ref": "#/definitions/Report project Version"
          }
        }
      },
      "description": "Report application DTO object"
    },
    "Report project Version": {
      "type": "object",
      "required": [
        "developmentPhase"
      ],
      "properties": {
        "developmentPhase": {
          "type": "string",
          "description": "Report application version development phase"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "description": "The application version that is associated to a report"
    },
    "Resource": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/File"
        },
        "filename": {
          "type": "string"
        },
        "inputStream": {
          "$ref": "#/definitions/InputStream"
        },
        "open": {
          "type": "boolean"
        },
        "readable": {
          "type": "boolean"
        },
        "uri": {
          "$ref": "#/definitions/URI"
        },
        "url": {
          "$ref": "#/definitions/URL"
        }
      }
    },
    "Responsibility Assignment": {
      "type": "object",
      "required": [
        "email",
        "firstName",
        "lastName",
        "responsibilityDescription",
        "responsibilityGuid",
        "responsibilityName",
        "userId",
        "userName"
      ],
      "properties": {
        "email": {
          "type": "string",
          "description": "Email of user assigned to responsibility"
        },
        "firstName": {
          "type": "string",
          "description": "First name of user assigned to responsibility"
        },
        "lastName": {
          "type": "string",
          "description": "Last name of user assigned to responsibility"
        },
        "responsibilityDescription": {
          "type": "string",
          "description": "Responsibility description"
        },
        "responsibilityGuid": {
          "type": "string",
          "description": "Responsibility global unique identifier"
        },
        "responsibilityName": {
          "type": "string",
          "description": "Responsibility name"
        },
        "userId": {
          "type": "integer",
          "format": "int64",
          "description": "ID of user assigned to responsibility"
        },
        "userName": {
          "type": "string",
          "description": "Name of user assigned to responsibility"
        }
      },
      "description": "A Responsibility that a user in SSC is assigned to. There are currently a few responsibilities like Project Manager, Security Manager, Developer etc per Application."
    },
    "Result processing rule": {
      "type": "object",
      "required": [
        "displayName",
        "displayable",
        "enabled",
        "identifier"
      ],
      "properties": {
        "displayName": {
          "type": "string",
          "readOnly": true
        },
        "displayable": {
          "type": "boolean",
          "example": false,
          "readOnly": true
        },
        "enabled": {
          "type": "boolean",
          "example": false,
          "readOnly": true
        },
        "identifier": {
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Rule to be checked when processing an FPR"
    },
    "Role": {
      "type": "object",
      "required": [
        "allApplicationRole",
        "assignedToNonUsers",
        "builtIn",
        "permissionIds",
        "userOnly"
      ],
      "properties": {
        "allApplicationRole": {
          "type": "boolean",
          "example": false,
          "description": "True if a user with this Role has access to all Application Versions"
        },
        "assignedToNonUsers": {
          "type": "boolean",
          "example": false,
          "description": "True if this Role is currently assigned to entities that are not users(groups, organizations, etc.)"
        },
        "builtIn": {
          "type": "boolean",
          "example": false,
          "description": "True if this Role is a default Fortify Role"
        },
        "default": {
          "type": "boolean"
        },
        "deletable": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": false
        },
        "name": {
          "type": "string"
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32"
        },
        "permissionIds": {
          "type": "array",
          "description": "Ids of the permissions this Role has",
          "items": {
            "type": "string"
          }
        },
        "publishVersion": {
          "type": "integer",
          "format": "int32"
        },
        "userOnly": {
          "type": "boolean",
          "example": false,
          "description": "True if this Role can only be assigned to entities that are users"
        }
      },
      "description": "Role used by the server to determine user permissions"
    },
    "Rulepack Core": {
      "type": "object",
      "required": [
        "id",
        "language",
        "name",
        "rulepackGUID",
        "rulepackType",
        "sku",
        "version"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "language": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "rulepackGUID": {
          "type": "string"
        },
        "rulepackType": {
          "type": "string",
          "enum": [
            "SCA",
            "RTA",
            "CATPACK"
          ]
        },
        "sku": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rulepack Core"
          }
        }
      },
      "description": "Rulepack Core DTO object"
    },
    "RulepackStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Numeric processing code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Processing message.",
          "readOnly": true
        },
        "rulepackResourceId": {
          "type": "integer",
          "format": "int64",
          "description": "Identifier of successfully created rulepack.",
          "readOnly": true
        }
      },
      "description": "Object represents rulepack individual process status. This is readonly object."
    },
    "RulepacksBatchProcessStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "Numeric processing code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Processing message.",
          "readOnly": true
        },
        "statuses": {
          "type": "array",
          "description": "Child rulepacks processing statuses.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/RulepacksBatchProcessStatus"
          }
        }
      },
      "description": "Object represents rulepack processing status. This is readonly object."
    },
    "Saved Report": {
      "type": "object",
      "required": [
        "format",
        "projects",
        "reportDefinitionId",
        "type"
      ],
      "properties": {
        "_embed": {
          "$ref": "#/definitions/EmbeddedReportDefinition"
        },
        "authEntity": {
          "description": "The Fortify User or Ldap User associated with the report",
          "$ref": "#/definitions/Report Auth Entity"
        },
        "format": {
          "type": "string",
          "description": "Saved report output format",
          "enum": [
            "PDF",
            "DOC",
            "XLS"
          ]
        },
        "formatDefaultText": {
          "type": "string",
          "description": "Saved report output format default text"
        },
        "generationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Generation date"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "inputReportParameters": {
          "type": "array",
          "description": "List of report parameters",
          "items": {
            "$ref": "#/definitions/Input Report Parameter"
          }
        },
        "isPublished": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether saved report is published"
        },
        "name": {
          "type": "string"
        },
        "note": {
          "type": "string",
          "description": "Saved report notes"
        },
        "projects": {
          "type": "array",
          "description": "List of application versions",
          "items": {
            "$ref": "#/definitions/Report Project"
          }
        },
        "published": {
          "type": "boolean"
        },
        "reportDefinitionId": {
          "type": "integer",
          "format": "int64",
          "description": "Report definition identifier"
        },
        "reportProjectsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of report applications"
        },
        "status": {
          "type": "string",
          "description": "Saved report status",
          "enum": [
            "Scheduled for Processing",
            "Processing",
            "Processing Complete",
            "Error Processing"
          ]
        },
        "statusDefaultText": {
          "type": "string",
          "description": "Saved report status default text"
        },
        "type": {
          "type": "string",
          "description": "Saved report type",
          "enum": [
            "PROJECT",
            "SSA_PROJECT",
            "SSA_PORTFOLIO",
            "PORTFOLIO",
            "COMPLIANCE",
            "ISSUE",
            "RUNTIME_REPORTS"
          ]
        },
        "typeDefaultText": {
          "type": "string",
          "description": "Saved report type default text"
        }
      },
      "description": "Saved Report DTO object"
    },
    "Scan": {
      "type": "object",
      "required": [
        "artifactId",
        "buildId",
        "buildLabel",
        "buildProject",
        "buildVersion",
        "certification",
        "elapsedTime",
        "engineVersion",
        "execLOC",
        "fortifyAnnotationsLOC",
        "guid",
        "hostname",
        "noOfFiles",
        "totalLOC",
        "type",
        "uploadDate"
      ],
      "properties": {
        "artifactId": {
          "type": "integer",
          "format": "int64",
          "description": "identifier of parent artifact object which contains this scan object",
          "readOnly": true
        },
        "buildId": {
          "type": "string",
          "description": "optional string identifier provided by the user when scanning",
          "readOnly": true
        },
        "buildLabel": {
          "type": "string",
          "description": "optional string identifier provided by the user when scanning",
          "readOnly": true
        },
        "buildProject": {
          "type": "string",
          "description": "optional string identifier provided by the user when scanning",
          "readOnly": true
        },
        "buildVersion": {
          "type": "string",
          "description": "optional string identifier provided by the user when scanning",
          "readOnly": true
        },
        "certification": {
          "type": "string",
          "description": "indicates whether the checksum on the analysis result is valid",
          "readOnly": true
        },
        "elapsedTime": {
          "type": "string",
          "description": "analysis duration",
          "readOnly": true
        },
        "engineVersion": {
          "type": "string",
          "description": "version of analysis engine",
          "readOnly": true
        },
        "execLOC": {
          "type": "integer",
          "format": "int32",
          "description": "total executable lines of code included in sources (excluding comments etc.)",
          "readOnly": true
        },
        "fortifyAnnotationsLOC": {
          "type": "integer",
          "format": "int32",
          "description": "lines of code with annotations",
          "readOnly": true
        },
        "guid": {
          "type": "string",
          "description": "globally unique id of scan object",
          "readOnly": true
        },
        "hostname": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "noOfFiles": {
          "type": "integer",
          "format": "int32",
          "description": "number of source files included in scan",
          "readOnly": true
        },
        "totalLOC": {
          "type": "integer",
          "format": "int32",
          "description": "total lines of code included in sources (includes comments etc.)",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "indicates the type of analyzer that produced it, such as SCA or WEBINSPECT",
          "readOnly": true
        },
        "uploadDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      },
      "description": "provides high-level information on the result of a single Fortify analysis, usually embedded inside an Artifact object"
    },
    "SearchIndexStatus": {
      "type": "object",
      "properties": {
        "configured": {
          "type": "boolean",
          "example": false,
          "description": "Is index configured",
          "readOnly": true
        },
        "healthyIndex": {
          "type": "boolean",
          "example": false,
          "description": "Is the index Healthy",
          "readOnly": true
        },
        "indexingJobRunning": {
          "type": "boolean",
          "example": false,
          "description": "Is the indexing job running",
          "readOnly": true
        }
      },
      "description": "Status of search index"
    },
    "SearchLdapUnregisteredRequest": {
      "type": "object",
      "required": [
        "ldapType"
      ],
      "properties": {
        "filter": {
          "type": "string",
          "description": "The specified query string is matched against the name, firstName, lastName, and email fields for LDAP User entities. For Group and OrgUnit entities, only the name is matched. The query string must match the entire field value. For partial matches you can add asterisk ('*') wildcards to your query."
        },
        "ldapType": {
          "type": "string",
          "description": "Type of ldap objects to be matched",
          "enum": [
            "USER",
            "GROUP",
            "ORG_UNIT"
          ]
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "A maximum number of returned objects in listing, if '-1' no limit is applied",
          "minimum": -1
        },
        "start": {
          "type": "integer",
          "format": "int32",
          "description": "A start offset in object listing",
          "minimum": 0
        }
      },
      "description": "Request to search for unregistered ldap objects for potential assignment to SSC. The overall scope of searchable ldap objects is defined by the SSC ldap server configuration"
    },
    "SelectorOption": {
      "type": "object",
      "required": [
        "displayName",
        "guid",
        "value"
      ],
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Option's display name.",
          "readOnly": true
        },
        "guid": {
          "type": "string",
          "description": "Option's unique GUID.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "Option's value that must be sent to backend when this option is selected.",
          "readOnly": true
        }
      },
      "description": "Single option of IssueFilterSelector. Every filtering option is associated with some specific issue attribute's value."
    },
    "SourceFileDto": {
      "type": "object",
      "required": [
        "checksum",
        "encoding",
        "fileContent",
        "filePath",
        "languageName",
        "projectVersionId"
      ],
      "properties": {
        "checksum": {
          "type": "string",
          "description": "Source file checksum.",
          "readOnly": true
        },
        "encoding": {
          "type": "string",
          "description": "Source file encoding.",
          "readOnly": true
        },
        "fileContent": {
          "type": "string",
          "description": "Scanned source file content.",
          "readOnly": true
        },
        "filePath": {
          "type": "string",
          "description": "Full path to source file on the machine where scan was performed.",
          "readOnly": true
        },
        "languageName": {
          "type": "string",
          "description": "Source file programming language name.",
          "readOnly": true
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "Application version identifier that contains this source file.",
          "readOnly": true
        }
      },
      "description": "Source file content where vulnerabilities were found."
    },
    "System Configuration": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Configuration name"
        },
        "value": {
          "type": "string",
          "description": "Configuration value"
        }
      },
      "description": "System Configuration defined by key and values"
    },
    "TemplateItem": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      }
    },
    "Token Definition": {
      "type": "object",
      "properties": {
        "capabilityDescription": {
          "type": "string",
          "description": "Describes what tokens generated from this token specification can be used for. Note that these capabilities are subordinate to the actual roles/permissions granted to the owner of the token",
          "readOnly": true
        },
        "maxDaysToLive": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum allowable lifetime (in nominal days) of token. At the time of token creation/edit, the exact value for its max expiration is calculated by adding maxDaysToLive * MilliSecondsPerDay to the current datetime",
          "readOnly": true
        },
        "maxUsages": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of api calls that can be made using this token type. A value of -1 denotes unlimited number of calls.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Token type",
          "readOnly": true
        }
      },
      "description": "Metadata of a Software Security Center token"
    },
    "TraceNodeDto": {
      "type": "object",
      "required": [
        "childNodes",
        "detail",
        "evidence",
        "file",
        "fullPath",
        "line",
        "nodeType",
        "primary",
        "text",
        "toolTip"
      ],
      "properties": {
        "childNodes": {
          "type": "array",
          "description": "Child nodes of the current node.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/TraceNodeDto"
          }
        },
        "detail": {
          "type": "boolean",
          "example": false,
          "description": "Detail node marker.",
          "readOnly": true
        },
        "evidence": {
          "type": "string",
          "description": "Node evidence text.",
          "readOnly": true
        },
        "file": {
          "type": "string",
          "description": "Name of the file associated with this node.",
          "readOnly": true
        },
        "fullPath": {
          "type": "string",
          "description": "Full path to source file associated with this node.",
          "readOnly": true
        },
        "line": {
          "type": "integer",
          "format": "int32",
          "description": "Source file line number where issue was found.",
          "readOnly": true
        },
        "nodeType": {
          "type": "string",
          "description": "Type of the trace node.",
          "readOnly": true,
          "enum": [
            "IN_CALL",
            "OUT_CALL",
            "IN_OUT_CALL",
            "READ",
            "READ_GLOBAL",
            "ASSIGN",
            "ASSIGN_GLOBAL",
            "ALIAS",
            "COMPARE",
            "RETURN",
            "REF",
            "DEREF",
            "END_SCOPE",
            "JUMP",
            "BRANCH_TAKEN",
            "BRANCH_NOT_TAKEN",
            "EXTERNAL_ENTRY",
            "RUNTIME_SINK",
            "RUNTIME_SOURCE",
            "RUNTIME_VALIDATION",
            "RUNTIME_TRACE",
            "TRACE_RUNTIME_SOURCE",
            "TRACE_RUNTIME_SINK",
            "TAINT_CHANGE",
            "GENERIC"
          ]
        },
        "primary": {
          "type": "boolean",
          "example": false,
          "description": "Primry node marker.",
          "readOnly": true
        },
        "text": {
          "type": "string",
          "description": "Node display text.",
          "readOnly": true
        },
        "toolTip": {
          "type": "string",
          "description": "Node description/tooltip.",
          "readOnly": true
        }
      },
      "description": "Issue analysis trace node DTO."
    },
    "Trigger": {
      "type": "object",
      "properties": {
        "length": {
          "type": "integer",
          "format": "int32"
        },
        "location": {
          "type": "integer",
          "format": "int32"
        },
        "triggerString": {
          "type": "string"
        }
      },
      "description": "Trigger in a request or response that identifies a vulnerability"
    },
    "URI": {
      "type": "object",
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "authority": {
          "type": "string"
        },
        "fragment": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "opaque": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "query": {
          "type": "string"
        },
        "rawAuthority": {
          "type": "string"
        },
        "rawFragment": {
          "type": "string"
        },
        "rawPath": {
          "type": "string"
        },
        "rawQuery": {
          "type": "string"
        },
        "rawSchemeSpecificPart": {
          "type": "string"
        },
        "rawUserInfo": {
          "type": "string"
        },
        "scheme": {
          "type": "string"
        },
        "schemeSpecificPart": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        }
      }
    },
    "URL": {
      "type": "object",
      "properties": {
        "authority": {
          "type": "string"
        },
        "content": {
          "type": "object"
        },
        "defaultPort": {
          "type": "integer",
          "format": "int32"
        },
        "deserializedFields": {
          "$ref": "#/definitions/URLStreamHandler"
        },
        "file": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "serializedHashCode": {
          "type": "integer",
          "format": "int32"
        },
        "userInfo": {
          "type": "string"
        }
      }
    },
    "URLStreamHandler": {
      "type": "object"
    },
    "User photo": {
      "type": "object",
      "required": [
        "photo",
        "photoMimeType"
      ],
      "properties": {
        "photo": {
          "type": "string",
          "format": "byte",
          "description": "Photo in byte array"
        },
        "photoMimeType": {
          "type": "string",
          "description": "Mime type of user photo. Eg .bmp, .jpg etc"
        }
      },
      "description": "User photo object"
    },
    "User preferences": {
      "type": "object",
      "required": [
        "dateFormat",
        "email",
        "emailAlerts",
        "monitorAllRuntimeApps",
        "projectVersionListMode",
        "receiveRuntimeAlerts",
        "runtimeAlertDefinitionId",
        "timeFormat",
        "username"
      ],
      "properties": {
        "dateFormat": {
          "type": "string",
          "description": "Preferred date format"
        },
        "email": {
          "type": "string",
          "description": "User email"
        },
        "emailAlerts": {
          "type": "boolean",
          "example": false,
          "description": "Receive email alerts if set to true"
        },
        "monitorAllRuntimeApps": {
          "type": "boolean",
          "example": false,
          "description": "Monitors all runtime applications if set to true"
        },
        "projectVersionListMode": {
          "type": "string",
          "description": "Enum for ProjectVersionListMode with values DEFAULT, CUSTOM, ALL"
        },
        "receiveRuntimeAlerts": {
          "type": "boolean",
          "example": false,
          "description": "Receive runtime alerts if set to true"
        },
        "runtimeAlertDefinitionId": {
          "type": "integer",
          "format": "int64",
          "description": "Runtime alert definition identifier"
        },
        "timeFormat": {
          "type": "string",
          "description": "Preferred time format"
        },
        "username": {
          "type": "string",
          "description": "User name"
        }
      },
      "description": "Object containing user preferences such as date/time format"
    },
    "User session information": {
      "type": "object",
      "required": [
        "applicationContextPath",
        "cloudScanConfig",
        "collabModuleEnabled",
        "displayUserDetails",
        "edastConfig",
        "email",
        "firstName",
        "fortifyUserType",
        "lastName",
        "licenseCapabilities",
        "onDemandMode",
        "permissions",
        "preferences",
        "roles",
        "sessionId",
        "userPhoto",
        "userType",
        "username",
        "webappVersion",
        "wieConfig"
      ],
      "properties": {
        "applicationContextPath": {
          "type": "string",
          "description": "Application context path"
        },
        "cloudScanConfig": {
          "description": "ScanCentral configuration",
          "$ref": "#/definitions/CloudScanConfig"
        },
        "collabModuleEnabled": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if collaboration module is enabled"
        },
        "displayUserDetails": {
          "type": "boolean",
          "example": false,
          "description": "Display user details if set to true"
        },
        "edastConfig": {
          "description": "EDAST configuration",
          "$ref": "#/definitions/EdastConfig"
        },
        "email": {
          "type": "string",
          "description": "User email"
        },
        "firstName": {
          "type": "string",
          "description": "User first name"
        },
        "fortifyUserType": {
          "type": "string",
          "description": "Fortify user type eg. LOCAL"
        },
        "lastName": {
          "type": "string",
          "description": "User last name"
        },
        "licenseCapabilities": {
          "type": "array",
          "description": "List of license capabilities",
          "items": {
            "$ref": "#/definitions/License capability"
          }
        },
        "onDemandMode": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if on demand mode is enabled"
        },
        "permissions": {
          "type": "array",
          "description": "User permissions",
          "items": {
            "type": "string"
          }
        },
        "preferences": {
          "description": "User preferences",
          "$ref": "#/definitions/User preferences"
        },
        "roles": {
          "type": "array",
          "description": "User roles",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "sessionId": {
          "type": "string",
          "description": "User session id"
        },
        "userPhoto": {
          "description": "User Photo",
          "$ref": "#/definitions/User photo"
        },
        "userType": {
          "type": "integer",
          "format": "int32",
          "description": "User Type integer eg. 0 for Local"
        },
        "username": {
          "type": "string",
          "description": "User name"
        },
        "webappVersion": {
          "type": "string",
          "description": "Web application version"
        },
        "wieConfig": {
          "description": "WebInspect enterprise configuration",
          "$ref": "#/definitions/WIE Configuration"
        }
      },
      "description": "Object containing user session information"
    },
    "UserIssueSearchOptions": {
      "type": "object",
      "properties": {
        "includeCommentsInHistory": {
          "type": "boolean",
          "example": false,
          "description": "If 'true', comments are included in issue audit history. Used only by flex UI."
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64",
          "description": "Application version ID the option values belong to. Value is empty for default options that can be applied to any application version user has access to if application version specific options are not defined."
        },
        "showHidden": {
          "type": "boolean",
          "example": false,
          "description": "If 'true', include hidden issues in search results. If 'false', exclude hidden issues from search results. If no options are set, use application version profile settings to get value of this option."
        },
        "showRemoved": {
          "type": "boolean",
          "example": false,
          "description": "If 'true', include removed issues in search results. If 'false', exclude removed issues from search results. If no options are set, use application version profile settings to get value of this option."
        },
        "showShortFileNames": {
          "type": "boolean",
          "example": false,
          "description": "If 'true', only short file names will be displayed in issues list."
        },
        "showSuppressed": {
          "type": "boolean",
          "example": false,
          "description": "If 'true', include suppressed issues in search results. If 'false', exclude suppressed issues from search results. If no options are set, use application version profile settings to get value of this option."
        }
      },
      "description": "User specific options that can be used for customizing issue search result."
    },
    "UserSessionState": {
      "type": "object",
      "required": [
        "category",
        "name",
        "username"
      ],
      "properties": {
        "category": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "projectVersionId": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "description": "User session state is used to persist UI state"
    },
    "Validation Request": {
      "type": "object",
      "required": [
        "stringToValidate"
      ],
      "properties": {
        "stringToValidate": {
          "type": "string",
          "description": "String to validate"
        }
      },
      "description": "Validation Request DTO object"
    },
    "Validation Status": {
      "type": "object",
      "required": [
        "msg",
        "valid"
      ],
      "properties": {
        "msg": {
          "type": "string",
          "description": "Validation status message"
        },
        "valid": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether validation was successful"
        }
      },
      "description": "Validation Status DTO object"
    },
    "Variable": {
      "type": "object",
      "required": [
        "folderName",
        "name",
        "searchString"
      ],
      "properties": {
        "attributeForOperation": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "folderName": {
          "type": "string",
          "description": "Select a folder from the default filter set to associate with the variable."
        },
        "guid": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "inUse": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32"
        },
        "operation": {
          "type": "string",
          "enum": [
            "COUNT",
            "SUM"
          ]
        },
        "publishVersion": {
          "type": "integer",
          "format": "int32"
        },
        "searchString": {
          "type": "string",
          "example": "[Fortify Priority Order]:critical audited:false"
        },
        "variableType": {
          "type": "string",
          "enum": [
            "SYSTEM_DEFINED",
            "USER_DEFINED"
          ]
        }
      },
      "description": "Variables count issues, conditions, and other categories of numeric data."
    },
    "Variable History": {
      "type": "object",
      "required": [
        "name",
        "timestamp",
        "value"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Variable id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Variable Name"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The Date the variable value was taken"
        },
        "value": {
          "type": "integer",
          "format": "int32",
          "description": "Variable value"
        }
      },
      "description": "An instance of a variable in an Application Version's snapshot."
    },
    "WIE Configuration": {
      "type": "object",
      "required": [
        "wieInstanceUrl",
        "wieRegistered"
      ],
      "properties": {
        "wieInstanceUrl": {
          "type": "string",
          "description": "WebInspect Enterprise url"
        },
        "wieRegistered": {
          "type": "boolean",
          "example": false,
          "description": "Set to true if WebInspect Enterprise is registered"
        }
      },
      "description": "WebInspect enterprise configuration object"
    },
    "WebHook Definition": {
      "type": "object",
      "required": [
        "contentType",
        "url"
      ],
      "properties": {
        "active": {
          "type": "boolean",
          "example": false,
          "description": "If this webhook is active"
        },
        "allowInsecureTLS": {
          "type": "boolean",
          "example": false,
          "description": "Allow connection even if webhook destination server certificate cannot be verified. Both certificate trust and server name validation are suppressed. Applies only to HTTPS protocol."
        },
        "contentType": {
          "type": "string",
          "description": "The way how webhook will be delivered",
          "enum": [
            "JSON"
          ]
        },
        "createdBy": {
          "type": "string",
          "description": "User who created this webhook",
          "readOnly": true
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date when this webhook was created",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "ID required when referencing an existing webhook definition",
          "readOnly": true
        },
        "lastStatus": {
          "type": "string",
          "description": "Status of this webhook's last completed request",
          "readOnly": true,
          "enum": [
            "NONE",
            "SUCCESS",
            "FAILED"
          ]
        },
        "monitorApps": {
          "type": "string",
          "description": "If this webhook is set to monitor all application versions or a custom selection. If set to all application versions, it takes precedence over any custom selection application version ids.",
          "enum": [
            "ALL",
            "CUSTOM"
          ]
        },
        "monitorEvents": {
          "type": "string",
          "description": "If this webhook is set to monitor all events or custom selection of events. If set to all events, it takes precedence over any custom selection of global/application events.",
          "enum": [
            "ALL",
            "CUSTOM"
          ]
        },
        "monitoredAppVersionEvents": {
          "type": "array",
          "description": "Custom selection of application version based events to monitor by this webhook. No need to provide custom selection in case you choose to monitor all events.",
          "items": {
            "type": "string",
            "enum": [
              "ANALYSIS_RESULT_UPLOAD_COMPLETE_SUCCESS",
              "ANALYSIS_RESULT_UPLOAD_FAILURE",
              "ANALYSIS_RESULT_UPLOAD_REQUIRES_APPROVAL",
              "ANALYSIS_RESULT_UPLOAD_APPROVED",
              "ANALYSIS_RESULT_INDEXING_COMPLETED",
              "APP_VERSION_UPDATED"
            ]
          }
        },
        "monitoredAppVersionIds": {
          "type": "array",
          "description": "Custom selection of application versions monitored by this webhook. No need to provide custom selection in case you choose to monitor all application versions.",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "monitoredGlobalEvents": {
          "type": "array",
          "description": "Custom selection of global events (events that are not triggered by an action in specific application version) to monitor by this webhook. No need to provide custom selection in case you choose to monitor all events.",
          "items": {
            "type": "string",
            "enum": [
              "APP_VERSION_CREATED",
              "APP_VERSION_DELETED",
              "USER_CREATED",
              "USER_DELETED",
              "USER_UPDATED",
              "LOCAL_USER_ACCOUNT_LOCKED",
              "REPORT_GENERATION_COMPLETE",
              "REPORT_GENERATION_REQUESTED"
            ]
          }
        },
        "objectVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Webhook version stored on the server. This value is used for optimistic locking to prevent concurrent modification by different users at the same time.",
          "readOnly": true
        },
        "restricted": {
          "type": "boolean",
          "example": false,
          "description": "True if current user is missing some permissions to fully manage this webhook",
          "readOnly": true
        },
        "secretValue": {
          "type": "string",
          "description": "Secret value will be used to sign webhook request. Requirements: min 8 and max 128 of printable ASCII characters (alphanumeric, punctuation, space)."
        },
        "url": {
          "type": "string",
          "description": "Destination URL"
        },
        "useSscProxy": {
          "type": "boolean",
          "example": false,
          "description": "Enable using SSC proxy configuration if webhook receiver is behind a proxy.SSC proxy must be also enabled and configured."
        }
      },
      "description": "WebHook Definition DTO object."
    },
    "WebHook History": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string",
          "enum": [
            "JSON"
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the webhook request was created",
          "readOnly": true
        },
        "failureReason": {
          "type": "string",
          "description": "Reason of failure, if webhook request failed",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Id of sent webhook request",
          "readOnly": true
        },
        "requestHeaders": {
          "type": "string",
          "description": "Request headers of webhook request. HTML-encoded.",
          "readOnly": true
        },
        "requestPayload": {
          "type": "string",
          "description": "Request payload of webhook request. HTML-encoded.",
          "readOnly": true
        },
        "responseBody": {
          "type": "string",
          "description": "Response body of webhook request. Truncated to 1500 characters and HTML-encoded.",
          "readOnly": true
        },
        "responseCode": {
          "type": "integer",
          "format": "int32",
          "description": "Response code of webhook request",
          "readOnly": true
        },
        "responseHeaders": {
          "type": "string",
          "description": "Response headers of webhook request. Truncated to 1000 characters and HTML-encoded.",
          "readOnly": true
        },
        "restricted": {
          "type": "boolean",
          "example": false,
          "description": "True if current user is missing some permissions to fully view or resend this webhook request",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of webhook request",
          "readOnly": true,
          "enum": [
            "PENDING",
            "SENT",
            "SUCCESS",
            "FAILED"
          ]
        },
        "webHookId": {
          "type": "integer",
          "format": "int64",
          "description": "ID of webhook definition that triggered the webhook request",
          "readOnly": true
        }
      },
      "description": "Information about triggered webhook requests including request and response data"
    },
    "WebHook History Item": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the webhook request was created",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Id of sent webhook request",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of webhook request",
          "readOnly": true,
          "enum": [
            "PENDING",
            "SENT",
            "SUCCESS",
            "FAILED"
          ]
        },
        "webHookId": {
          "type": "integer",
          "format": "int64",
          "description": "ID of webhook definition that triggered the webhook request",
          "readOnly": true
        }
      },
      "description": "Basic information about triggered webhook request"
    },
    "WebHookResendRequest": {
      "type": "object",
      "required": [
        "webHookHistoryIds"
      ],
      "properties": {
        "webHookHistoryIds": {
          "type": "array",
          "description": "List containing single webhook history ID to resend",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "description": "Request to resend webhook payload from history"
    },
    "customTagInfo": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "guid": {
          "type": "string",
          "description": "Custom tag GUID",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Custom tag id"
        },
        "name": {
          "type": "string",
          "description": "Custom tag unique name",
          "readOnly": true
        },
        "valueList": {
          "type": "array",
          "description": "Collection of custom tag values",
          "items": {
            "$ref": "#/definitions/customTagLookupInfo"
          }
        }
      },
      "description": "Holds the details about existed custom tag that is assigned or linked with some other entity"
    },
    "customTagLookupInfo": {
      "type": "object",
      "required": [
        "lookupIndex"
      ],
      "properties": {
        "lookupIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Current value index in values list"
        },
        "lookupValue": {
          "type": "string",
          "description": "Plain text custom tag value",
          "readOnly": true
        }
      },
      "description": "Holds the details about existed list custom tag value that is assigned or linked with some other entity"
    },
    "scan error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorDescription",
        "id",
        "scanId"
      ],
      "properties": {
        "errorCode": {
          "type": "string",
          "readOnly": true
        },
        "errorDescription": {
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "scanId": {
          "type": "integer",
          "format": "int64",
          "description": "id of scan associated with the error",
          "readOnly": true
        }
      },
      "description": "error reported by SCA during the scan"
    }
  }
}